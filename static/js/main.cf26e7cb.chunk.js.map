{"version":3,"sources":["images/logo192.png","model/UserModel.jsx","utils/IsEnterPressed.jsx","utils/isEmailValid.jsx","components/LoginModal/LoginModal.jsx","utils/ActiveUserContext.jsx","utils/addGarden.jsx","utils/signup.jsx","utils/isPasswordValid.jsx","components/SignupModal/SignupModal.jsx","pages/HomePage/HomePage.jsx","components/GalleryCard/GalleryCard.jsx","components/DafKesherCard/DafKesherCard.jsx","utils/ActiveGardenContext.jsx","pages/MyGardenPage/MyGardenPage.jsx","components/AddMainCard/AddMainCard.jsx","utils/createNewDafKesher.jsx","utils/updateDafKesherDetails.jsx","utils/createNewGallery.jsx","utils/updateGalleryDetails.jsx","utils/getHebrewDate.jsx","model/DafKesherModel.jsx","model/GalleryModel.jsx","components/MainCardEditorModal/MainCardEditorModal.jsx","utils/deleteDafKesher.jsx","utils/deleteGallery.jsx","utils/deleteImage.jsx","utils/updateDafKesherContent.jsx","components/DeleteWarningModal/DeleteWarningModal.jsx","pages/DapeyKesherPage/DapeyKesherPage.jsx","pages/GalleriesPage/GalleriesPage.jsx","utils/addImage.jsx","pages/ContactUsPage/ContactUsPage.jsx","components/ImageCard/ImageCard.jsx","components/ImageModal/ImageModal.jsx","components/ImageCard/AddImageCard.jsx","model/ImageModel.jsx","components/AddImage/AddImageModal.jsx","pages/GalleryPage/GalleryPage.jsx","components/StudyTopicBox/StudyTopicBox.jsx","utils/getRandomBgColor.jsx","components/MessageBox/MessageBox.jsx","components/MessageBox/AddMessageBox.jsx","components/StudyTopicBox/AddStudyTopicBox.jsx","components/DafKesherEditorModal/DafKesherEditorModal.jsx","pages/DafKesherPage/DafKesherPage.jsx","utils/getGreeting.jsx","components/TopNavbar/TopNavbar.jsx","utils/getGardenDetails.jsx","utils/getGardenData.jsx","utils/getGalleriesImages.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserModel","parseUser","this","id","email","get","fname","lname","gardenId","role","isEnterPressed","e","key","isEmailValid","test","LoginModal","props","showModal","showSignupModal","handleCloseLogin","onLogin","useState","setEmail","pwd","setPwd","showError","setShowError","showEmailError","setShowEmailError","forgotPwdEmail","setForgotPwdEmail","showForgotPwdEmail","setShowForgotPwdEmail","showForgotPwdEmailError","setShowForgotPwdEmailError","showResetsecces","setShowResetsecces","showLoginSpinner","setShowLoginSpinner","cleanFormFields","login","a","Parse","User","logIn","close","ifEnterPressed","event","useEffect","Modal","size","show","onHide","centered","className","Header","Title","Body","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","target","onKeyPress","Feedback","Button","variant","onClick","Card","requestPasswordReset","then","document","console","log","catch","error","Alert","Footer","Spinner","as","animation","aria-hidden","ActiveUserContext","createContext","name","year","logo","Gan","Object","extend","myNewGarden","set","File","save","response","addGarden","Query","parseGarden","user","signUp","res","signup","isPasswordValid","SignupModal","handleCloseSignup","activeUser","useContext","userFname","setUserFname","userLname","setUserLname","userEmail","setUserEmail","userPwd","setUserPwd","gardenName","setGardenName","gardenYear","setGardenYear","parentsEmail","setParentsEmail","parentsFname","setParentsFname","setLogo","logoUrl","setLogoUrl","showPwdError","setShowPwdError","isFormValid","setIsFormValid","showSignupSpinner","setShowSignupSpinner","showParentsLoginAlert","setShowParentsLoginAlert","URL","revokeObjectURL","garden","isRequierdFieldFull","to","logoView","Img","src","Heading","Row","Col","disabled","performSignup","split","Text","label","data-browse","accept","custom","newLogo","files","newLogoUrl","createObjectURL","HomePage","showLoginModal","setShowLoginModal","setShowSignupModal","redirectToMyGarden","setRedirectToMyGarden","handleLogin","alt","GalleryCard","gallery","handleEdit","handleDeleteClick","title","img","images","values","map","url","icon","faEdit","faTrashAlt","DafKesherCard","dafKesher","hebDate","ActiveGardenContext","MyGardenPage","data","activeGarden","dapeyKesherView","dapeyKesher","sort","b","date","filter","x","index","md","lg","galleriesView","galleries","Container","sm","faNewspaper","href","faChevronLeft","faImages","AddMainCard","DafKesher","myNewDafKesher","Date","createNewDafKesher","dafKesherId","query","updateDafKesherDetails","Gallery","myGallery","createNewGallery","galleryId","updateGalleryDetails","unitsNames","tensNames","getHebrewDate","dateObj","monthNum","require","hebrewDate","month","HebrewYearName","yearNum","yearArr","taf","parseInt","i","push","length","splice","join","getHebrewYearName","hebrewMonthName","includes","dateNum","dateArr","dateName","getHebrewDateName","DafKesherModel","parseDafKesher","GalleryModel","parseGallery","MainCardEditorModal","modalTitle","cardType","handleUpdate","closeModal","cleanDataToEdit","setTitle","setDate","onSave","action","galleryToSend","toLocaleString","viewDate","destroy","deleteDafKesher","deleteGallery","imageId","Image","image","deleteImage","content","result","updateDafKesherContent","DeleteWarningModal","fullData","objectType","handleClose","newData","backdrop","keyboard","DapeyKesherPage","onUpdate","showMainCardEditorModal","setShowMainCardEditorModal","showDeleteAlert","setShowDeleteAlert","dafKesherToEdit","setDafKesherToEdit","addDafKesher","GalleriesPage","galleryToEdit","setGalleryToEdit","addGallery","myNewImage","addImage","ContactUsPage","setName","subject","setSubject","request","setRequest","useUserInfo","setUseUserInfo","setFiles","filesUrl","setFilesUrl","isFormSubmitted","setIsFormSubmitted","Promise","all","file","_url","emailjs","send","from_name","from_email","topic","message","file_links","toString","forEach","filesAmount","filesView","fileUrl","Check","checked","multiple","newFiles","newFilesUrl","CardColumns","ImageCard","ImageModal","selectedImage","onImageChange","xs","faChevronRight","AddImageCard","ImageModel","parseImage","AddImageModal","galleryTitle","setImages","imagesUrl","setImagesUrl","uploadedImages","imagesAmount","imagesView","imageUrl","newImages","newImagesUrl","GalleryPage","showImageModal","setShowImageModal","setSelectedImage","showAddImage","setShowAddImage","imageToEdit","setImageToEdit","useParams","updatedImages","onImageSelect","StudyTopicBox","onDeleteClick","onEditClick","headline","editIcon","getRandomBgColor","bgColors","Math","floor","random","MessageBox","bgColor","bg","text","AddMessageBox","AddStudyTopicBox","DafKesherEditorModal","setHeadline","setContent","rows","DafKesherPage","showEditorModal","setShowEditorModal","contentToEdit","setContentToEdit","dafKesherData","studyTopics","messages","handleAddClick","handleEditClick","updatedDafKesherData","topicsView","addTopic","messagesView","addMessage","faCommentDots","getGreeting","hour","getHours","TopNavbar","onLogout","path","useLocation","pathname","greeting","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","active","parseGan","ganName","ganLogo","ganYear","gardenDetails","getGardenDetails","galleriesQuery","dapeyKesherQuery","equalTo","find","galleriesResults","dapeyKesherResults","galleriesArr","dapeyKesherArr","reduce","item","getGardenData","imgQuery","results","imagesArr","imagesObj","galleriesImagesObj","getGalleriesImages","App","current","setActiveUser","setActiveGarden","gardenData","setGardenData","newGalleries","keys","getGarden","init","updateGardenData","Provider","logOut","exact","loggedinUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf26e7cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo192.f73b2edd.png\";","class UserModel {\r\n    constructor(parseUser){\r\n        this.id = parseUser.id;\r\n        this.email = parseUser.get('username');\r\n        this.fname = parseUser.get('fname');\r\n        this.lname = parseUser.get('lname');\r\n        this.gardenId = parseUser.get('gan').id;\r\n        this.role = parseUser.get('role');\r\n        this.parseUser = parseUser;\r\n    }\r\n}\r\n\r\nexport default UserModel;","const isEnterPressed = (e) => e.key === 'Enter' ? true : false;\r\n\r\nexport default isEnterPressed;","\r\nfunction isEmailValid(email) {\r\n    return /.+@.+\\..+/.test(email)\r\n}\r\n\r\nexport default isEmailValid;","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Modal, Form, Alert, Card, Spinner } from 'react-bootstrap';\r\nimport Parse from 'parse';\r\nimport UserModel from '../../model/UserModel';\r\nimport isEnterPressed from '../../utils/IsEnterPressed';\r\nimport isEmailValid from '../../utils/isEmailValid';\r\nimport './LoginModal.css';\r\n\r\nfunction LoginModal(props) {\r\n    const {showModal, showSignupModal, handleCloseLogin, onLogin} = props;\r\n    const [email, setEmail] = useState('');\r\n    const [pwd, setPwd] = useState('');\r\n    const [showError, setShowError] = useState(false);\r\n    const [showEmailError, setShowEmailError] = useState(false);\r\n    const [forgotPwdEmail, setForgotPwdEmail] = useState('');\r\n    const [showForgotPwdEmail, setShowForgotPwdEmail] = useState(false);\r\n    const [showForgotPwdEmailError, setShowForgotPwdEmailError] = useState(false);\r\n    const [showResetsecces, setShowResetsecces] = useState(false);\r\n    const [showLoginSpinner, setShowLoginSpinner] = useState(false);\r\n\r\n    function cleanFormFields () {\r\n        setEmail('');\r\n        setPwd('');\r\n        setShowError(false);\r\n        setForgotPwdEmail('');\r\n        setShowForgotPwdEmail(false);\r\n        setShowForgotPwdEmailError(false);\r\n        setShowResetsecces(false);\r\n        setShowLoginSpinner(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (pwd !== ''){                                //hiding login error when retype password\r\n            setShowError(false)\r\n        }\r\n    },[pwd]);\r\n    useEffect(() => {\r\n        setShowError(false);                            //hiding login error when changing the email\r\n        if (!isEmailValid(email) && email !== '') {     //showing email pattern error if the email is not valid\r\n            setShowEmailError(true);\r\n        } else if (isEmailValid(email)) { \r\n            setShowEmailError(false);\r\n            setForgotPwdEmail(email);\r\n        }\r\n    },[email]);\r\n    useEffect(() => {\r\n        if (!isEmailValid(forgotPwdEmail) && forgotPwdEmail !== '') {     //showing email pattern error if the email is not valid\r\n            setShowForgotPwdEmailError(true);\r\n        } else if (isEmailValid(forgotPwdEmail)) { \r\n            setShowForgotPwdEmailError(false);\r\n        }\r\n    },[forgotPwdEmail]);\r\n\r\n    async function login () {\r\n        try {\r\n            setShowLoginSpinner(true);\r\n            const parseUser = await Parse.User.logIn(email, pwd);\r\n            // Trigger onLogin event and clean the fields\r\n            onLogin(new UserModel(parseUser));\r\n            handleCloseLogin();\r\n            cleanFormFields();\r\n            \r\n        } catch(error) {                                //showing login error & deleting the pwd field if the login failed\r\n            // show an error alert\r\n            setPwd('');\r\n            setShowError(true);\r\n        }\r\n    }\r\n    \r\n    function close () {\r\n        handleCloseLogin();\r\n        cleanFormFields();\r\n    }\r\n    \r\n    function ifEnterPressed (event) {                   //detecting if Enter pressed and executing login\r\n        if (isEnterPressed(event) && email){\r\n            setShowLoginSpinner(true);\r\n            login();\r\n        }\r\n    }\r\n    \r\n    function showSignup(){\r\n        close();\r\n        showSignupModal();\r\n    }\r\n    \r\n    function handleForgotPassword(){                                        //giving option to reset password\r\n        Parse.User.requestPasswordReset(\"email@example.com\").then(() => {\r\n            // Password reset request was sent successfully\r\n            if (typeof document !== 'undefined') {\r\n                setShowResetsecces(true);\r\n                setShowForgotPwdEmail(false);\r\n                console.log('Reset password email sent successfully');\r\n            }\r\n        }).catch((error) => {\r\n            if (typeof document !== 'undefined') {\r\n                console.error('Error while creating request to reset user password', error);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal size='md' show={showModal} onHide={close} centered className='c-login-modal'>\r\n            <Modal.Header>\r\n                <Modal.Title>כניסה</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId='loginUserName'>\r\n                        <Form.Label>שם משתמש</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"דואר אלקטרוני\" value={email} className={showEmailError ? 'is-invalid' : null}\r\n                            onChange={e => { setEmail(e.target.value) }} onKeyPress={ifEnterPressed} />\r\n                        <Form.Control.Feedback type=\"invalid\">כתובת מייל לא תקינה</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='loginPwd' className='mb-0'>\r\n                        <Form.Label>סיסמה</Form.Label>\r\n                        <Form.Control type=\"password\" value={pwd}\r\n                            onChange={e => {setPwd(e.target.value)}}  onKeyPress={ifEnterPressed}/>\r\n                        <Button variant='link' onClick={() => {setShowForgotPwdEmail(true)}}>שכחתי סיסמה</Button>\r\n                    </Form.Group>\r\n                        {showForgotPwdEmail && <Card.Body>\r\n                            <Form.Group controlId='forgotPwdEmail'>\r\n                                <Form.Label>דואר אלקטרוני לאיפוס סיסמה</Form.Label>\r\n                                <Form.Control type=\"email\" value={forgotPwdEmail} className={showForgotPwdEmailError ? 'is-invalid' : null}\r\n                                    onChange={e => { setForgotPwdEmail(e.target.value) }} />\r\n                                <Form.Control.Feedback type=\"invalid\">כתובת מייל לא תקינה</Form.Control.Feedback>\r\n                                <Button variant='dark' className='mt-2' onClick={handleForgotPassword}>אפס סיסמה</Button>\r\n                            </Form.Group>\r\n                        </Card.Body>}\r\n                        {showResetsecces && <Form.Label>נשלח מייל לאיפוס סיסמה</Form.Label>}\r\n                </Form>\r\n                {showError ? <Alert variant=\"danger\">מייל או סיסמה שגויים</Alert> : null}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant='link' className='ml-auto' onClick={showSignup}>עדיין לא רשומים?</Button>\r\n                <Button variant=\"secondary\" onClick={close}>סגירה</Button>\r\n                <Button variant=\"warning\" onClick={login}>\r\n                    <span className={showLoginSpinner && !showError ? 'sr-only' : ''}>כניסה</span>\r\n                    {showLoginSpinner && !showError &&<Spinner\r\n                        as=\"span\"\r\n                        animation=\"border\"\r\n                        size=\"sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                        />}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default LoginModal;\r\n","import { createContext } from 'react';\r\n\r\nconst ActiveUserContext = createContext(null);\r\n\r\nexport default ActiveUserContext;","import Parse from 'parse';\r\n\r\nasync function addGarden(name, year, logo) {\r\n    const Gan = Parse.Object.extend('Gan');\r\n    const myNewGarden = new Gan();\r\n\r\n    myNewGarden.set('name', name);\r\n    myNewGarden.set('year', year);\r\n    myNewGarden.set('logo', new Parse.File(logo.name, logo));\r\n    \r\n    const response = await myNewGarden.save();\r\n    \r\n    return response;\r\n}\r\n\r\nexport default addGarden;","import Parse from 'parse';\r\n\r\nasync function signup(email, pwd, role, fname, lname, gardenId) {\r\n    const parseGarden = await new Parse.Query(new Parse.Object.extend('Gan')).get(gardenId);\r\n    const user = new Parse.User()    \r\n\r\n    user.set('username', email);\r\n    user.set('email', email);\r\n    user.set('role', role);\r\n    user.set('gan', parseGarden);\r\n    user.set('fname', fname);\r\n    user.set('lname', lname);\r\n    user.set('password', pwd);\r\n    \r\n    const res = await user.signUp();\r\n    return res;\r\n}\r\n\r\nexport default signup;","\r\nfunction isPasswordValid(pwd) {\r\n    return /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/.test(pwd)\r\n}\r\n\r\nexport default isPasswordValid;","import { useContext, useEffect, useState } from 'react';\r\nimport { Button, Card, Form, Spinner, Col, Modal, Alert, Row } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport isEmailValid from '../../utils/isEmailValid';\r\nimport { Redirect } from 'react-router-dom';\r\nimport addGarden from '../../utils/addGarden';\r\nimport signup from '../../utils/signup';\r\nimport Parse from 'parse';\r\nimport UserModel from '../../model/UserModel';\r\nimport isPasswordValid from '../../utils/isPasswordValid';\r\n\r\n\r\nconst SignupModal = ({showModal, onLogin, handleCloseSignup}) => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [userFname, setUserFname] = useState('');\r\n    const [userLname, setUserLname] = useState('');\r\n    const [userEmail, setUserEmail] = useState('');\r\n    const [userPwd, setUserPwd] = useState('');\r\n    const [gardenName, setGardenName] = useState('');\r\n    const [gardenYear, setGardenYear] = useState('');\r\n    const [parentsEmail, setParentsEmail] = useState('');\r\n    const [parentsFname, setParentsFname] = useState('');\r\n    const [logo, setLogo] = useState('');\r\n    const [logoUrl, setLogoUrl] = useState('');\r\n    const [showEmailError, setShowEmailError] = useState(false);\r\n    const [showPwdError, setShowPwdError] = useState(false);\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n    const [showSignupSpinner, setShowSignupSpinner] = useState(false);\r\n    const [showParentsLoginAlert, setShowParentsLoginAlert] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        if (isRequierdFieldFull() && isEmailValid(userEmail) && isPasswordValid(userPwd)) {     // setting the form as valid - if all required fields filled &\r\n            setIsFormValid(true);                                                               //      email and pwd are valid\r\n            setShowEmailError(false);\r\n            setShowPwdError(false)\r\n        } else {\r\n            \r\n            if (!isEmailValid(userEmail) && userEmail !=='') {                  // showing error if the email is not valid\r\n                setShowEmailError(true);\r\n                if (isFormValid) {\r\n                    setIsFormValid(false);\r\n                }\r\n            } else if (isEmailValid(userEmail)) {\r\n                setShowEmailError(false);\r\n                if (isFormValid) {\r\n                    setIsFormValid(false);\r\n                }\r\n            }\r\n            \r\n            if (!isPasswordValid(userPwd) && userPwd !=='') {                   // showing error if the pwd is not valid\r\n                setShowPwdError(true);\r\n                if (isFormValid) {\r\n                    setIsFormValid(false);\r\n                }\r\n            } else if (isPasswordValid(userPwd)) {\r\n                setShowPwdError(false);\r\n                if (isFormValid) {\r\n                    setIsFormValid(false);\r\n                }\r\n            }\r\n        }\r\n    },[userFname, userLname, userEmail, userPwd, gardenName, gardenYear, parentsEmail, parentsFname]);\r\n\r\n    async function login () {\r\n        try {\r\n            const parseUser = await Parse.User.logIn(userEmail, userPwd);   // performing login to the app\r\n            \r\n            onLogin(new UserModel(parseUser));                              // Trigger onLogin event on HomePage and cleaning the fields\r\n            close();\r\n            \r\n        } catch(error) {\r\n            console.log('error while login')\r\n        }\r\n    }\r\n\r\n    function close () {\r\n        URL.revokeObjectURL(logoUrl);\r\n        handleCloseSignup();\r\n        cleanFields();\r\n    }\r\n    \r\n    function isRequierdFieldFull() {\r\n        if (userFname && userLname && userEmail && userPwd \r\n            && gardenName && gardenYear && parentsEmail && parentsFname) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    function cleanFields() {\r\n        setUserFname('');\r\n        setUserLname('');\r\n        setUserEmail('');\r\n        setUserPwd('');\r\n        setGardenName('');\r\n        setGardenYear('');\r\n        setParentsEmail('');\r\n        setParentsFname('');\r\n        setLogo('');\r\n        setLogoUrl('');\r\n        setShowSignupSpinner(false);\r\n        setShowParentsLoginAlert(false);\r\n    }\r\n\r\n    function signupClicked(){                                               // showing alert with parents login details after clicking signup\r\n        setShowSignupSpinner(true);\r\n        setShowParentsLoginAlert(true);\r\n    }\r\n\r\n    async function performSignup () {\r\n        //creat garden in parse\r\n        const garden = await addGarden(gardenName, gardenYear,logo);\r\n\r\n        //create parent in parse\r\n        await signup(parentsEmail, 'Dd123456', 'parent', parentsFname, '', garden.id);\r\n\r\n        //create manager in parse\r\n        await signup(userEmail, userPwd, 'manager', userFname, userLname, garden.id);\r\n\r\n        //login with the user\r\n        login();\r\n    }\r\n    \r\n    if (activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    \r\n    function onFileSelect(event) {                                    // showing logo preview\r\n        const newLogo = event.target.files[0];\r\n        const newLogoUrl = URL.createObjectURL(newLogo);\r\n        setLogo(newLogo);\r\n        setLogoUrl(newLogoUrl);\r\n    }\r\n\r\n    const logoView = logoUrl ?\r\n        <Card>\r\n            <Card.Img src={logoUrl}/>\r\n        </Card>\r\n    : null;\r\n\r\n    return (\r\n        <Modal size='md' show={showModal} onHide={close} centered className=\"c-signup-modal\">\r\n            <Modal.Header>\r\n                <Modal.Title>הרשמה לאתר הגן הדיגיטלי</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Alert show={showParentsLoginAlert} variant=\"info\">\r\n                    <Alert.Heading as='h5'>פרטי התחברות להורים</Alert.Heading>\r\n                    <hr />\r\n                    <Form as={Row}>\r\n                    <Form.Group as={Col} className='mb-0'>\r\n                        <Form.Label>שם משתמש</Form.Label>\r\n                        <Form.Control placeholder={parentsEmail} disabled />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} className='mb-0'>\r\n                        <Form.Label>סיסמה</Form.Label>\r\n                        <Form.Control placeholder=\"Dd123456\" disabled />\r\n                    </Form.Group>\r\n                    </Form>\r\n                    <hr />\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <Button onClick={() => {setShowParentsLoginAlert(false); performSignup()}} variant=\"outline-info\">\r\n                            רשמתי את הפרטים\r\n                        </Button>\r\n                    </div>\r\n                </Alert>\r\n                <Form>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formUserFname\">\r\n                            <Form.Label>שם</Form.Label>\r\n                            <Form.Control type=\"text\" value={userFname} onChange={e => {setUserFname(e.target.value)}}/>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formUserLname\">\r\n                            <Form.Label>משפחה</Form.Label>\r\n                            <Form.Control type=\"text\" value={userLname} onChange={e => {setUserLname(e.target.value)}}/>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    \r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formUserEmail\">\r\n                            <Form.Label>דואר אלקטרוני</Form.Label>              {/* onChanging this input it set the value of parentsEmail */}\r\n                            <Form.Control type=\"email\" value={userEmail} className={showEmailError ? 'is-invalid' : null} \r\n                                onChange={e => { setUserEmail(e.target.value); setParentsEmail(`horim@${e.target.value.split('@')[0]}.com`) }} />\r\n                            <Form.Control.Feedback type=\"invalid\">כתובת מייל לא תקינה</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formUserPwd\">\r\n                            <Form.Label>סיסמה</Form.Label>\r\n                            <Form.Control type=\"password\" value={userPwd} className={showPwdError ? 'is-invalid' : null} \r\n                            onChange={e => { setUserPwd(e.target.value) }} />\r\n                            <Form.Text className=\"text-muted\">סיסמה צריכה להיות מעל 8 תווים ולהכיל: אות גדולה, אות קטנה ומספר.</Form.Text>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    \r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGardenName\">\r\n                            <Form.Label>שם המוסד</Form.Label>                     {/* onChanging this input it set the value of parentsFname */}\r\n                            <Form.Control type=\"text\" value={gardenName} \r\n                                onChange={e => {setGardenName(e.target.value); setParentsFname(`הורי ${e.target.value}`)}}/>\r\n                            <Form.Text className=\"text-muted\">לדוגמה: גן השושנים</Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGardenYear\">\r\n                            <Form.Label>שנת לימודים</Form.Label>\r\n                            <Form.Control type=\"text\" value={gardenYear} onChange={e => {setGardenYear(e.target.value)}}/>\r\n                            <Form.Text className=\"text-muted\">לדוגמה: תשפ\"א</Form.Text>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    \r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formParentsEmail\">\r\n                            <Form.Label>שם משתמש להורים</Form.Label>\r\n                            <Form.Control type=\"text\" value={parentsEmail} onChange={e => {setParentsEmail(e.target.value)}}/>\r\n                            <Form.Text className=\"text-muted\">ניתן לשינוי</Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formParentsFname\">\r\n                            <Form.Label>שם חשבון הורים</Form.Label>\r\n                            <Form.Control type=\"text\" value={parentsFname} onChange={e => {setParentsFname(e.target.value)}}/>\r\n                            <Form.Text className=\"text-muted\">ניתן לשינוי</Form.Text>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <Form.File id=\"formGardenLogo\" label='' data-browse=\"בחירת לוגו\" accept=\"image/*\" custom onChange={onFileSelect}/>\r\n                            <Form.Text className=\"text-muted\">{logo ? 'נבחרה תמונה' : 'מומלץ לבחור לוגו שיופיע בדפי הקשר'}</Form.Text>\r\n                        </Form.Group>\r\n                        {logo &&\r\n                            <Form.Group as={Col}>\r\n                                {logoView}\r\n                                {logo && logoView === null && \r\n                                        <div className='images-spinner row justify-content-center mt-3'>\r\n                                            <Spinner animation=\"border\" variant=\"warning\" />\r\n                                        </div>\r\n                                }\r\n                            </Form.Group>\r\n                        }\r\n                    </Form.Row>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer className='flex-nowrap'>\r\n                <Button variant=\"secondary\" className='w-50' onClick={close} disabled={showSignupSpinner}>סגירה</Button>\r\n                <Button variant=\"warning\" className='w-50' type=\"button\" disabled={!isFormValid} onClick={signupClicked}>\r\n                    <span className={showSignupSpinner && 'sr-only'}>הרשמה</span>\r\n                    {showSignupSpinner &&<Spinner\r\n                        as=\"span\"\r\n                        animation=\"border\"\r\n                        size=\"sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                        />}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SignupModal;","import './HomePage.css'\r\nimport logo from '../../images/logo192.png'\r\nimport { Button } from 'react-bootstrap';\r\nimport { useContext, useState } from 'react';\r\nimport LoginModal from '../../components/LoginModal/LoginModal';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport SignupModal from '../../components/SignupModal/SignupModal';\r\n\r\nconst HomePage = (props) => {\r\n    const [showLoginModal, setShowLoginModal] = useState(false);\r\n    const [showSignupModal, setShowSignupModal] = useState(false);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [redirectToMyGarden, setRedirectToMyGarden] = useState(activeUser ? true : false);\r\n    const { onLogin } = props;\r\n\r\n    function handleLogin(user) {\r\n        onLogin(user);\r\n        setRedirectToMyGarden(true);\r\n    }\r\n    \r\n    function handleCloseLogin() {\r\n        setShowLoginModal(false);\r\n    }\r\n    function handleCloseSignup() {\r\n        setShowSignupModal(false);\r\n    }\r\n    \r\n    if (redirectToMyGarden) {\r\n        return <Redirect to=\"my-garden\"/>;\r\n    }\r\n    return (\r\n        <div className=\"p-home\">\r\n            <div className='main-content'>\r\n                <div className='logo'>\r\n                    <img className='logo-img' src={logo} alt=\"logo\"/>\r\n                </div>\r\n                <div className='main-text'>\r\n                    <div className='text'>\r\n                        <h2>הגן הדיגיטלי</h2>\r\n                        <h5>הקשר שלך עם ההורים</h5>\r\n                        <h5>נראה אחרת!</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='buttons'>\r\n                <Button variant=\"outline-warning\" size='lg' onClick={() => { setShowLoginModal(true) }}>כניסה</Button>{' '}\r\n                <Button variant=\"warning\" size='lg' onClick={() => { setShowSignupModal(true) }}>הרשמה</Button>\r\n            </div>\r\n            <LoginModal showModal={showLoginModal} showSignupModal={() => {setShowSignupModal(true)}} \r\n                handleCloseLogin={handleCloseLogin} onLogin={handleLogin}/>\r\n            <SignupModal showModal={showSignupModal} handleCloseSignup={handleCloseSignup} onLogin={handleLogin} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import './GalleryCard.css'\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst GalleryCard = ({gallery, handleEdit, handleDeleteClick, activeUser}) => {\r\n    const {id, title } = gallery;\r\n\r\n    const img = gallery.images && Object.values(gallery.images).map(img => img.url)[0];\r\n\r\n    return (\r\n        <div className='c-gallery-card'>\r\n            <Card>\r\n                <Link to={'/galleries/'+ id}>\r\n                    {img ? <Card.Img variant='top' src={img}/> : null}\r\n                    <Card.Title className='text-center'>{title}</Card.Title>\r\n                </Link>\r\n                {activeUser && activeUser.role === 'manager' && handleEdit &&       //showing edit icons only to garden owner\r\n                    <Card.Footer>\r\n                        <FontAwesomeIcon className='edit-icon' onClick={() => {handleEdit(gallery)}} icon={faEdit}/>\r\n                        <FontAwesomeIcon className='delete-icon' onClick={() => {handleDeleteClick(gallery)}} icon={faTrashAlt}/>\r\n                    </Card.Footer>\r\n                }\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GalleryCard;","import './DafKesherCard.css'\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DafKesherCard = ({dafKesher, handleEdit, handleDeleteClick, activeUser}) => {\r\n    const { id, title, hebDate} = dafKesher;\r\n\r\n    return (\r\n        <div className='c-daf-kesher-card'>\r\n            <Card>\r\n                <Link to={'/dapey-kesher/' + id}>\r\n                    <Card.Title className='text-center'>{title}</Card.Title>\r\n                    <Card.Text className='text-center'>{hebDate}</Card.Text>\r\n                </Link>\r\n                {activeUser && activeUser.role === 'manager' && handleEdit &&\r\n                    <Card.Footer>\r\n                        <FontAwesomeIcon className='edit-icon' onClick={() => {handleEdit(dafKesher)}} icon={faEdit}/>\r\n                        <FontAwesomeIcon className='delete-icon' onClick={() => {handleDeleteClick(dafKesher)}} icon={faTrashAlt}/>\r\n                    </Card.Footer>\r\n                }\r\n            </Card>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DafKesherCard;","import { createContext } from 'react';\r\n\r\nconst ActiveGardenContext = createContext(null);\r\n\r\nexport default ActiveGardenContext;","import { useContext } from 'react'\r\nimport { Card, Col, Container, Row, Spinner } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport ActiveUserContext from '../../utils/ActiveUserContext'\r\nimport GalleryCard from '../../components/GalleryCard/GalleryCard';\r\nimport './MyGardenPage.css'\r\nimport DafKesherCard from '../../components/DafKesherCard/DafKesherCard';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft, faImages, faNewspaper } from '@fortawesome/free-solid-svg-icons';\r\nimport ActiveGardenContext from '../../utils/ActiveGardenContext';\r\n\r\nconst MyGardenPage = ({data}) => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const activeGarden = useContext(ActiveGardenContext);\r\n    \r\n    if (!data) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }    \r\n\r\n    const dapeyKesherView = Object.values(data.dapeyKesher).sort((a,b) => b.date - a.date).filter((x, index) => index < 6).map(dafKesher => \r\n            <Col className='py-2' md={12} lg={6} key={dafKesher.id}>\r\n                <DafKesherCard dafKesher={dafKesher} activeUser={activeUser}/>\r\n            </Col>            \r\n    );\r\n\r\n    const galleriesView = Object.values(data.galleries).filter((x, index) => index < 4).map(gallery => {\r\n        const id = gallery.id;\r\n        \r\n        return (\r\n            <Col className='py-2' md={12} lg={6} key={id}>\r\n                <GalleryCard gallery={gallery} activeUser={activeUser}/>\r\n            </Col>        \r\n        )\r\n    });    \r\n\r\n    return (\r\n        <div className=\"p-my-gan\">\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        <h2 className='name'>{activeGarden.name}</h2>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        <div className='logo'><img src={activeGarden.logo} alt=\"logo\"/></div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} className='mb-3'>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <span>דפי קשר</span>\r\n                                <FontAwesomeIcon icon={faNewspaper}/>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    {dapeyKesherView}\r\n                                </Row>\r\n                            </Card.Body>\r\n                            <a href='#/dapey-kesher'>\r\n                                <Card.Footer className='text-center'>\r\n                                    <FontAwesomeIcon icon={faChevronLeft}/>\r\n                                </Card.Footer>\r\n                            </a>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6} className='mb-3'>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <span>גלריות</span>\r\n                                <FontAwesomeIcon icon={faImages}/>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    {galleriesView}\r\n                                </Row>\r\n                            </Card.Body>\r\n                            <a href='#/galleries'>\r\n                                <Card.Footer className='text-center'>\r\n                                <FontAwesomeIcon icon={faChevronLeft}/>\r\n                                </Card.Footer>\r\n                            </a>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyGardenPage;","import './AddMainCard.css'\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst AddMainCard = (props) => {\r\n\r\n    const {onClick} = props;\r\n\r\n    return (\r\n        <div className='c-add-main-card'>\r\n            <Card onClick={onClick}>\r\n                <Card.Title className='text-center'>+</Card.Title>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddMainCard;","import Parse from \"parse\";\r\n\r\nasync function createNewDafKesher(parseGarden, title, date) {\r\n\r\n    const DafKesher = Parse.Object.extend('DafKesher');\r\n    const myNewDafKesher = new DafKesher();\r\n\r\n    myNewDafKesher.set('title',title);\r\n    myNewDafKesher.set('gan', parseGarden);\r\n    myNewDafKesher.set('date', new Date(date));\r\n    myNewDafKesher.set('data', {\"studyTopics\":[], \"messages\":[]});\r\n\r\n    const res = await myNewDafKesher.save();\r\n    \r\n    return res;\r\n}\r\n\r\nexport default createNewDafKesher;","import Parse from \"parse\";\r\n\r\nasync function updateDafKesherDetails(dafKesherId, title, date) {\r\n\r\n    const DafKesher = Parse.Object.extend('DafKesher');\r\n    const query = new Parse.Query(DafKesher);\r\n\r\n    const dafKesher = await query.get(dafKesherId);\r\n    dafKesher.set('title', title);\r\n    dafKesher.set('date', new Date(date));\r\n    const res = await dafKesher.save();    \r\n\r\n    return res;\r\n    \r\n}\r\n\r\nexport default updateDafKesherDetails;","import Parse from \"parse\";\r\n\r\nasync function createNewGallery(parseGarden, title) {\r\n\r\n    const Gallery = Parse.Object.extend('Gallery');\r\n    const myGallery = new Gallery();\r\n\r\n    myGallery.set('title',title);\r\n    myGallery.set('gan', parseGarden);\r\n\r\n    const res = await myGallery.save();\r\n    \r\n    return res;\r\n}\r\n\r\nexport default createNewGallery;","import Parse from \"parse\";\r\n\r\nasync function updateGalleryDetails(galleryId, title) {\r\n\r\n    const Gallery = Parse.Object.extend('Gallery');\r\n    const query = new Parse.Query(Gallery);\r\n\r\n    const gallery = await query.get(galleryId);\r\n    gallery.set('title', title);\r\n    const res = await gallery.save();\r\n    \r\n    return res;\r\n\r\n}\r\n\r\nexport default updateGalleryDetails;","const unitsNames = ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ז', 'ח', 'ט'];       // setting array of units for GIMATRIA\r\nconst tensNames = ['י', 'כ', 'ל', 'מ', 'נ', 'ס', 'ע', 'פ', 'צ'];        // setting array of tens for GIMATRIA\r\n\r\n\r\n// this function checking if the hebrew year is leap year\r\nfunction isLeapYear(year) {\r\n    const restForLeapYears = [0, 3, 6, 8, 11, 14, 17];\r\n    return (restForLeapYears.includes(year % 19));\r\n}\r\n\r\n// this function returns the hebrew year in hebrew letters\r\nfunction getHebrewYearName(yearNum) {\r\n\r\n    let year = yearNum % 1000;                                  // droping the thousands\r\n    let yearArr = [];\r\n    const taf = parseInt(year / 400);                           // dividing the Hundreds by 400, 300, 200, 100 and push the correct letter to the array\r\n    for (let i = 0; i < taf ; i++) {\r\n    yearArr.push('ת');\r\n    }\r\n    year = year % 400;\r\n    parseInt(year / 300) !== 0 && yearArr.push('ש');\r\n    year = year % 300;\r\n    parseInt(year / 200) !== 0 && yearArr.push('ר');\r\n    year = year % 200;\r\n    parseInt(year / 100) !== 0 && yearArr.push('ק');\r\n    year = year % 100;\r\n    \r\n    parseInt(year / 10) !== 0 && yearArr.push(tensNames[parseInt(year / 10) - 1]);      // calculating the tens & untits GIMATRIA\r\n    (year % 10) !== 0 && yearArr.push(unitsNames[year % 10 - 1]);\r\n\r\n    yearArr.length > 1 ? yearArr.splice(-1, 0, '\"') : yearArr.push(\"'\");    // adding QUOTATION MARK before the last letter, or APOSTROPHE when only 1 letter\r\n\r\n    const yearName = yearArr.join('');                                      // convertin the array to string\r\n\r\n    return(yearName)\r\n}\r\n\r\nfunction getHebrewMonthName(monthNum, yearNum) {\r\n    // setting array of hebrew months names for normal and leap year\r\n    const monthNamesOfNormalYear = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\r\n    const monthNamesOfLeapYear = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א', 'אדר ב', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\r\n    const monthName = isLeapYear(yearNum) ? monthNamesOfLeapYear[monthNum -1] : monthNamesOfNormalYear[monthNum -1];\r\n\r\n    return monthName;\r\n}\r\n\r\nfunction getHebrewDateName(dateNum) {\r\n    let dateArr = [];\r\n    parseInt(dateNum / 10) !== 0 && dateArr.push(tensNames[parseInt(dateNum / 10) - 1]);      // calculating the tens & untits GIMATRIA\r\n    (dateNum % 10) !== 0 && dateArr.push(unitsNames[dateNum % 10 - 1]);\r\n\r\n    dateArr.length > 1 ? dateArr.splice(-1, 0, '\"') : dateArr.push(\"'\");    // adding QUOTATION MARK before the last letter, or APOSTROPHE when only 1 letter\r\n\r\n    let dateName = dateArr.join('');                                        // convertin the array to string\r\n\r\n    if (dateName === 'י\"ה') {                                               // handling exeptions for ט\"ו & ט\"ז\r\n        dateName = 'ט\"ו'\r\n    } else if (dateName === 'י\"ו') {\r\n        dateName = 'ט\"ז'\r\n    }\r\n\r\n    return(dateName)\r\n}\r\n\r\nfunction getHebrewDate(dateObj) {\r\n    const hebrewDate = require('hebrew-date');\r\n    const { year, month, date } = hebrewDate(dateObj);\r\n    \r\n    const HebrewYearName = getHebrewYearName(year);\r\n    const hebrewMonthName = getHebrewMonthName(month, year);\r\n    const hebrewDateName = getHebrewDateName(date);\r\n    const hebrewDateStr = hebrewDateName + ' ' + hebrewMonthName + ' ' + HebrewYearName;\r\n\r\n    return (hebrewDateStr);\r\n}\r\n\r\nexport default getHebrewDate;","import getHebrewDate from \"../utils/getHebrewDate\";\r\n\r\nclass DafKesherModel {\r\n    constructor(parseDafKesher){\r\n        this.id = parseDafKesher.id;\r\n        this.title = parseDafKesher.get('title');\r\n        this.date = parseDafKesher.get('date');\r\n        this.data = parseDafKesher.get('data');\r\n        this.hebDate = getHebrewDate(parseDafKesher.get('date'));\r\n    }\r\n}\r\n\r\nexport default DafKesherModel;","class GalleryModel {\r\n    constructor(parseGallery){\r\n        this.id = parseGallery.id;\r\n        this.title = parseGallery.get('title');\r\n        this.parseGallery = parseGallery;\r\n    }\r\n}\r\n\r\nexport default GalleryModel;","import { useContext, useEffect, useState } from 'react';\r\nimport { Button, Modal, Form, Alert } from 'react-bootstrap';\r\nimport isEnterPressed from '../../utils/IsEnterPressed';\r\nimport createNewDafKesher from '../../utils/createNewDafKesher';\r\nimport updateDafKesherDetails from '../../utils/updateDafKesherDetails';\r\nimport createNewGallery from '../../utils/createNewGallery';\r\nimport updateGalleryDetails from '../../utils/updateGalleryDetails';\r\nimport ActiveGardenContext from '../../utils/ActiveGardenContext';\r\nimport DafKesherModel from '../../model/DafKesherModel';\r\nimport GalleryModel from '../../model/GalleryModel';\r\n\r\nconst MainCardEditorModal = (props) => {\r\n    const {data, cardType, showModal, handleUpdate, closeModal, cleanDataToEdit} = props;\r\n    const activeGarden = useContext(ActiveGardenContext);\r\n    const [title, setTitle] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [showError, setShowError] = useState(false);\r\n    \r\n    useEffect(() => { \r\n        if (typeof data === 'object') {                     //if editing existing content - filling the fields with the original data \r\n            setTitle(data.title);\r\n            if (cardType === 'dafKesher') {\r\n\r\n                const date = data.date.toLocaleString().split('.');                             //converting dafKesher date to simple format \r\n                const viewDate = `${date[2].split(',')[0]}-${date[1].length === 1 ? '0' + \r\n                    date[1] : date[1]}-${date[0].length === 1 ? '0' + date[0] : date[0]}`;\r\n                setDate(viewDate);\r\n            }\r\n        } else {\r\n            setTitle('');\r\n            setDate('');\r\n        }\r\n    }, [data, cardType]);\r\n    \r\n    function close () {\r\n        setTitle('');\r\n        setDate('');        \r\n        closeModal();\r\n        setShowError(false);\r\n        cleanDataToEdit();\r\n    }\r\n\r\n    async function onSave() {\r\n        if (cardType === 'dafKesher') {                         //detecting the type of Card (dafKesher/gallery)\r\n            if (!(title && date)) {\r\n                setShowError(true);\r\n            } else {\r\n                let dafKesher;\r\n                const action = data ? 'update' : 'add';\r\n                if (!data) {                                 //if adding new content - creating new row in the database\r\n                    dafKesher = await createNewDafKesher(activeGarden.parseGarden, title, date);\r\n                } else {                                            //if updating existing content - updating the data in the database\r\n                    dafKesher = await updateDafKesherDetails(data.id, title, date);\r\n                }\r\n                handleUpdate(action, new DafKesherModel(dafKesher));\r\n                close();\r\n            }\r\n        } else if (cardType === 'gallery') {\r\n            if (!title) {\r\n                setShowError(true);\r\n            } else {\r\n                let gallery;\r\n                const action = data ? 'update' : 'add';\r\n                if (!data) {\r\n                    gallery = await createNewGallery(activeGarden.parseGarden, title);\r\n                } else {\r\n                    gallery = await updateGalleryDetails(data.id, title);\r\n                }\r\n                const galleryToSend = new GalleryModel(gallery);\r\n                if (data) {\r\n                    galleryToSend.images = data.images;             // when only updating gallery details - copy the images data\r\n                }\r\n                handleUpdate(action, galleryToSend);\r\n                close();\r\n            }\r\n        }\r\n    }\r\n\r\n    function ifEnterPressed (event) {                           //detecting if Enter pressed - and executing login if all fields that required are filled\r\n        if (cardType === 'dafKesher') {\r\n            if (isEnterPressed(event) && title && date) {\r\n                onSave();\r\n            }\r\n        } else if (cardType === 'gallery') {\r\n            if (isEnterPressed(event) && title) {\r\n                onSave();\r\n            }\r\n        }\r\n    }\r\n\r\n    let modalTitle;                                             //setting the modal title depending on the situation (add/edit + dafKesher/gallery)\r\n    if (cardType === 'dafKesher') {\r\n        modalTitle = data ? 'עריכת פרטי דף קשר' : 'יצירת דף קשר חדש';\r\n    } else if (cardType === 'gallery') {\r\n        modalTitle = data ? 'עריכת פרטי גלריה' : 'יצירת גלריה חדשה';\r\n    }\r\n\r\n    return (\r\n        <Modal size='sm' show={showModal} onHide={close} centered className='c-main-card-editor-modal'>\r\n            <Modal.Header>\r\n                <Modal.Title>{modalTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId='title'>\r\n                        <Form.Label>כותרת</Form.Label>\r\n                        <Form.Control type=\"text\" value={title} onChange={e => { setTitle(e.target.value) }} onKeyPress={ifEnterPressed} />\r\n                    </Form.Group>\r\n                    {cardType === 'dafKesher' ? <Form.Group controlId='date'>\r\n                        <Form.Label>תאריך</Form.Label>\r\n                        <Form.Control type=\"date\" value={date}\r\n                            onChange={e => { setDate(e.target.value) }} onKeyPress={ifEnterPressed} />\r\n                    </Form.Group> : null}\r\n                </Form>\r\n                {showError ? <Alert variant=\"danger\">נא למלא את כל השדות</Alert> : null}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={close}>סגירה</Button>\r\n                <Button variant=\"warning\" onClick={onSave}>שמירה</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default MainCardEditorModal;\r\n","import Parse from \"parse\";\r\n\r\nasync function deleteDafKesher(dafKesherId) {\r\n\r\n    const DafKesher = Parse.Object.extend('DafKesher');\r\n    const query = new Parse.Query(DafKesher);\r\n\r\n    const dafKesher = await query.get(dafKesherId);\r\n    const res = await dafKesher.destroy();\r\n\r\n    return res;\r\n}\r\n\r\nexport default deleteDafKesher;","import Parse from \"parse\";\r\n\r\nasync function deleteGallery(galleryId) {\r\n\r\n    const Gallery = Parse.Object.extend('Gallery');\r\n    const query = new Parse.Query(Gallery);\r\n\r\n    const gallery = await query.get(galleryId);\r\n    const res = await gallery.destroy();\r\n\r\n    return res;\r\n}\r\n\r\nexport default deleteGallery;","import Parse from \"parse\";\r\n\r\nasync function deleteImage(imageId) {\r\n\r\n    const Image = Parse.Object.extend('Image');\r\n    const query = new Parse.Query(Image);\r\n\r\n    const image = await query.get(imageId);\r\n    const res = await image.destroy();\r\n\r\n    return res;\r\n}\r\n\r\nexport default deleteImage;","import Parse from \"parse\";\r\n\r\nasync function updateDafKesherContent(dafKesherId, content) {\r\n\r\n    const DafKesher = Parse.Object.extend('DafKesher');\r\n    const query = new Parse.Query(DafKesher);\r\n\r\n    query.get(dafKesherId).then((dafKesher) => {\r\n        dafKesher.set('data', content);\r\n        dafKesher.save().then(\r\n            (result) => {\r\n                // console.log('DafKesher updated');\r\n            },\r\n            (error) => {\r\n                // console.error('Error while updating DafKesher: ', error);\r\n            }\r\n\r\n        );\r\n\r\n        \r\n        \r\n    });\r\n    return '';\r\n}\r\n\r\nexport default updateDafKesherContent;","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport deleteDafKesher from '../../utils/deleteDafKesher';\r\nimport deleteGallery from '../../utils/deleteGallery';\r\nimport deleteImage from '../../utils/deleteImage';\r\nimport updateDafKesherContent from '../../utils/updateDafKesherContent';\r\n\r\nfunction DeleteWarningModal(props) {\r\n    const {fullData, data, dafKesherId, objectType, showModal, closeModal, cleanDataToEdit, handleUpdate} = props;\r\n    function handleClose() {\r\n        closeModal();\r\n        cleanDataToEdit();\r\n    }\r\n\r\n    async function deleteClick () {\r\n        if (objectType === 'דף קשר') {\r\n            const res = await deleteDafKesher(data.id);\r\n            handleUpdate('delete', res);\r\n            handleClose();\r\n\r\n        } else if (objectType === 'גלריה') {\r\n            const res = await deleteGallery(data.id);\r\n            handleUpdate('delete', res);\r\n            handleClose();\r\n\r\n        } else if (objectType === 'תמונה') {\r\n            const res = await deleteImage(data.id);\r\n            handleUpdate('delete', res);\r\n            handleClose();\r\n        } else if (objectType === 'חומר לימודי' || objectType === 'הודעה') {\r\n            const newData = {...fullData};\r\n            newData[data.type] = [...fullData[data.type]];\r\n            newData[data.type].splice(data.index, 1);\r\n            updateDafKesherContent(dafKesherId, newData).then(() => {\r\n                handleUpdate(data.type, newData[data.type]);\r\n                handleClose();\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal size='md' show={showModal} onHide={handleClose} backdrop=\"static\" keyboard={false} centered className='c-delete-warning-modal'>\r\n            <Modal.Header>\r\n                <Modal.Title>מחיקת {objectType}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='text-center'>\r\n                <h5>הנך מנסה למחוק {objectType}{data.title && <span className='font-weight-bold'> {data.title}</span>},</h5>\r\n                <div>פעולה זו איננה ניתנת לביטול</div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>ביטול</Button>\r\n                <Button variant=\"warning\" onClick={deleteClick}>מחיקה</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default DeleteWarningModal;","import { useContext, useState } from 'react';\r\nimport { Col, Container, Row, Spinner } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DafKesherCard from '../../components/DafKesherCard/DafKesherCard';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport './DapeyKesherPage.css';\r\nimport AddMainCard from '../../components/AddMainCard/AddMainCard';\r\nimport MainCardEditorModal from '../../components/MainCardEditorModal/MainCardEditorModal';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\nimport ActiveGardenContext from '../../utils/ActiveGardenContext';\r\n\r\nconst DapeyKesherPage = ({data, onUpdate}) => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const activeGarden = useContext(ActiveGardenContext);\r\n    const [showMainCardEditorModal, setShowMainCardEditorModal] = useState(false);\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [dafKesherToEdit, setDafKesherToEdit] = useState('');\r\n    \r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    function handleEdit(dafKesher) {\r\n        setDafKesherToEdit(dafKesher);\r\n        setShowMainCardEditorModal(true);\r\n    }\r\n\r\n    function handleDeleteClick(dafKesher) {\r\n        setDafKesherToEdit(dafKesher);\r\n        setShowDeleteAlert(true);\r\n    }\r\n\r\n    function handleUpdate(action, content){\r\n        const dapeyKesher = {...data.dapeyKesher};\r\n        if (!(action === 'delete')) {\r\n            dapeyKesher[content.id] = content;\r\n        } else {\r\n            delete dapeyKesher[content.id];\r\n        }\r\n        onUpdate('dapeyKesher', dapeyKesher);\r\n    }\r\n\r\n    const addDafKesher = activeUser && activeUser.role === 'manager' ?\r\n        <Col className='py-2' md={6} lg={3}>\r\n            <AddMainCard onClick={() => { setShowMainCardEditorModal(true) }}/>\r\n        </Col>\r\n    : null;\r\n\r\n    const dapeyKesherView = data ? Object.values(data.dapeyKesher).sort((a,b) => b.date - a.date).map(dafKesher =>\r\n        <Col className='py-2' md={6} lg={3} key={dafKesher.id}>\r\n            <DafKesherCard dafKesher={dafKesher} handleEdit={handleEdit} handleDeleteClick={handleDeleteClick} activeUser={activeUser}/>\r\n        </Col>\r\n    ) : null;\r\n\r\n    if (!activeGarden) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-dapey-kesher\">\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        <div className='name'>{activeGarden.name}</div>\r\n                        <h2>דפי הקשר שלנו</h2>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        <div className='logo'><img src={activeGarden.logo} alt=\"logo\"/></div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='align-items-stretch'>\r\n                    {addDafKesher}\r\n                    {dapeyKesherView}\r\n                </Row>\r\n            </Container>\r\n            <MainCardEditorModal data={dafKesherToEdit} cardType='dafKesher' showModal={showMainCardEditorModal} handleUpdate={handleUpdate} \r\n                closeModal={() => { setShowMainCardEditorModal(false) }} cleanDataToEdit={() => { setDafKesherToEdit('') }} />\r\n            <DeleteWarningModal data={dafKesherToEdit} objectType='דף קשר' showModal={showDeleteAlert} handleUpdate={handleUpdate}\r\n                closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setDafKesherToEdit('') }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DapeyKesherPage;","import { useContext, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport './GalleriesPage.css';\r\nimport GalleryCard from '../../components/GalleryCard/GalleryCard';\r\nimport { Col, Container, Row, Spinner } from 'react-bootstrap';\r\nimport MainCardEditorModal from '../../components/MainCardEditorModal/MainCardEditorModal';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\nimport AddMainCard from '../../components/AddMainCard/AddMainCard';\r\nimport ActiveGardenContext from '../../utils/ActiveGardenContext';\r\n\r\nconst GalleriesPage = ({data, onUpdate}) => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const activeGarden = useContext(ActiveGardenContext);\r\n    const [showMainCardEditorModal, setShowMainCardEditorModal] = useState(false);\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [galleryToEdit, setGalleryToEdit] = useState('');\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    \r\n    function handleEdit(gallery) {\r\n        setGalleryToEdit(gallery);\r\n        setShowMainCardEditorModal(true);\r\n    }    \r\n\r\n    function handleDeleteClick(gallery) {\r\n        setGalleryToEdit(gallery);\r\n        setShowDeleteAlert(true);\r\n    }    \r\n\r\n    function handleUpdate(action, content){\r\n        const galleries = {...data.galleries};\r\n        if (!(action === 'delete')) {\r\n            galleries[content.id] = content;\r\n        } else {\r\n            delete galleries[content.id];\r\n        }\r\n        onUpdate('galleries', galleries);\r\n    }\r\n\r\n    const addGallery = activeUser && activeUser.role === 'manager' ?\r\n        <Col className='py-2' md={6} lg={3}>\r\n            <AddMainCard onClick={() => { setShowMainCardEditorModal(true) }}/>\r\n        </Col>\r\n    : null;\r\n    \r\n    const galleriesView = data && data.galleries ? Object.values(data.galleries).map(gallery => {\r\n        const id = gallery.id;\r\n\r\n        return(<Col className='py-2' md={6} lg={3} key={id}>\r\n            <GalleryCard gallery={gallery} handleEdit={handleEdit} handleDeleteClick={handleDeleteClick} activeUser={activeUser}/>\r\n        </Col>)        \r\n    }) : null;\r\n\r\n    if (!activeGarden) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-galleries\">\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        <div className='name'>{activeGarden.name}</div>\r\n                        <h2>הגלריות שלנו</h2>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        <div className='logo'><img src={activeGarden.logo} alt=\"logo\"/></div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {addGallery}\r\n                    {galleriesView}\r\n                </Row>\r\n            </Container>\r\n            <MainCardEditorModal data={galleryToEdit} cardType='gallery' showModal={showMainCardEditorModal} handleUpdate={handleUpdate} \r\n                closeModal={() => { setShowMainCardEditorModal(false) }} cleanDataToEdit={() => { setGalleryToEdit('') }} />\r\n            <DeleteWarningModal data={galleryToEdit} objectType='גלריה' showModal={showDeleteAlert} handleUpdate={handleUpdate}\r\n                closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setGalleryToEdit('') }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GalleriesPage;","import Parse from 'parse';\r\n\r\nasync function addImage(image, galleryId) {\r\n    const parseGallery = await new Parse.Query(new Parse.Object.extend('Gallery')).get(galleryId);\r\n    \r\n    const Image = Parse.Object.extend('Image');\r\n    const myNewImage = new Image();\r\n    \r\n    myNewImage.set('file', new Parse.File(image.name, image));\r\n    \r\n    // myNewImage.set('isPrimary', true);\r\n    myNewImage.set('gallery', parseGallery);\r\n    \r\n    const response = await myNewImage.save();\r\n    \r\n    return response;\r\n}\r\n\r\nexport default addImage;","import { useContext, useEffect, useState } from 'react';\r\nimport { Button, CardColumns, Card, Form, Spinner } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport addImage from '../../utils/addImage';\r\nimport emailjs from 'emailjs-com';\r\nimport isEmailValid from '../../utils/isEmailValid';\r\nimport './ContactUsPage.css'\r\n\r\n\r\nconst ContactUsPage = () => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [name, setName] = useState(activeUser ? `${activeUser.fname} ${activeUser.lname}` : '');\r\n    const [email, setEmail] = useState(activeUser ? activeUser.email : '');\r\n    const [subject, setSubject] = useState('');\r\n    const [request, setRequest] = useState('');\r\n    const [useUserInfo, setUseUserInfo] = useState(activeUser ? true : false);\r\n    const [files, setFiles] = useState('');\r\n    const [filesUrl, setFilesUrl] = useState('');\r\n    const [showEmailError, setShowEmailError] = useState(false);\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n    const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n\r\n    function onFilesSelect(event) {                               // uploading images to show the problem if needed\r\n        const newFiles = Object.values(event.target.files);\r\n        let newFilesUrl = newFiles.map(file => URL.createObjectURL(file));\r\n        setFiles(newFiles);\r\n        setFilesUrl(newFilesUrl);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (name && isEmailValid(email) && subject && request) {        // setting the form as valid - if all required fields filled & email is valid\r\n            setIsFormValid(true);\r\n            setShowEmailError(false);\r\n        } else if (!isEmailValid(email) && email!=='') {                // showing error if the email is not valid\r\n            setShowEmailError(true);\r\n            if (isFormValid) {\r\n                setIsFormValid(false);\r\n            }\r\n        } else if (isEmailValid(email)) {\r\n            setShowEmailError(false);\r\n            if (isFormValid) {\r\n                setIsFormValid(false);\r\n            }\r\n        }\r\n    },[name, email, subject, request, isFormValid]);\r\n    \r\n    async function sendForm () {                                      // sending the form to site's DevTeam and cleaning the fields\r\n        let filesUrl ='';\r\n\r\n        await Promise.all(files.map(async file => {\r\n            const res = await addImage(file, 'fe0qzAHNtH');\r\n            filesUrl += (`  ${res.get('file')._url}`);\r\n        }));\r\n\r\n        emailjs.send(\"service_5cx738e\",\"template_k3nemuh\",{\r\n            from_name: name,\r\n            from_email: email,\r\n            topic: subject,\r\n            message: request,\r\n            file_links: filesUrl.toString(),\r\n        });\r\n\r\n        filesUrl.forEach(url => {URL.revokeObjectURL(url)});\r\n        setSubject('');\r\n        setRequest('');\r\n        setFiles('');\r\n        setFilesUrl('');\r\n        setIsFormSubmitted(true);\r\n    }\r\n    \r\n    function onSwitchMode() {                                           // giving the users option to automatically fill their details\r\n        if (!useUserInfo) {\r\n            setName(`${activeUser.fname} ${activeUser.lname}`);\r\n            setEmail(activeUser.email);\r\n            setUseUserInfo(!useUserInfo);\r\n        } else {\r\n            setName('');\r\n            setEmail('');\r\n            setUseUserInfo(!useUserInfo);\r\n        }\r\n    }\r\n\r\n    const filesAmount = files ? files.length : 0;\r\n\r\n    const filesView = filesUrl ? filesUrl.map((fileUrl, index) =>\r\n        <Card key={index}>\r\n            <Card.Img src={fileUrl}/>\r\n        </Card>\r\n    ) : null;\r\n\r\n    if (isFormSubmitted) {                                              // showing success message after sending the form\r\n        return(\r\n            <div className=\"p-contact-us success\">\r\n                <h2>פנייתך נשלחה בהצלחה</h2>\r\n                <Button variant='info' onClick={() => {setIsFormSubmitted(false)}} >פנייה נוספת</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-contact-us\">\r\n            <h2>צור קשר</h2>\r\n            <Form>\r\n                <Form.Group controlId=\"formContactUsName\">\r\n                    <Form.Label>שם</Form.Label>\r\n                    {activeUser ? <Form.Check type='switch' variant='warning' id='formContactUsFileSwitch' label={useUserInfo ? 'משתמש בפרטים שלי' : 'השתמש בפרטים שלי'} checked={useUserInfo} onChange={onSwitchMode} /> : null}\r\n                    <Form.Control type=\"text\" value={name} onChange={e => {setName(e.target.value)}}/>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId=\"formContactUsEmail\">\r\n                    <Form.Label>דואר אלקטרוני</Form.Label>\r\n                    <Form.Control type=\"email\" value={email} className={showEmailError ? 'is-invalid' : null} onChange={e => { setEmail(e.target.value) }} />\r\n                    <Form.Control.Feedback type=\"invalid\">כתובת מייל לא תקינה</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formContactUsSubject\">\r\n                    <Form.Label>נושא</Form.Label>\r\n                    <Form.Control type=\"text\" value={subject}  onChange={e => {setSubject(e.target.value)}}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formContactUsRequest\">\r\n                    <Form.Label>תוכן הפניה</Form.Label>\r\n                    <Form.Control as=\"textarea\" value={request}  onChange={e => {setRequest(e.target.value)}}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.File id=\"formContactUsFile\" label='' data-browse=\"בחירת קבצים\" accept=\"image/*\" custom multiple onChange={onFilesSelect}/>\r\n                    <Form.Text className=\"text-muted\">{filesAmount >0 ? `נבחרו ${filesAmount} קבצים` : 'ניתן לבחור מספר קבצים'}</Form.Text>\r\n                    <CardColumns>\r\n                        {filesView}\r\n                    </CardColumns>\r\n                    {files && filesView === null && \r\n                        <div className='images-spinner row justify-content-center mt-3'>\r\n                            <Spinner animation=\"border\" variant=\"warning\" />\r\n                        </div>\r\n                    }\r\n                </Form.Group>\r\n                <Button variant=\"warning\" type=\"button\" className='w-100' disabled={!isFormValid} onClick={sendForm}>\r\n                    שליחה\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactUsPage;","import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './ImageCard.css';\r\n\r\nconst ImageCard = (props) => {\r\n    const { image, onClick, activeUser, handleDeleteClick } = props;\r\n    return (\r\n        <div className='c-image-card'>\r\n            <Card>\r\n                {image ? <Card.Img variant=\"top\" src={image.url}  onClick={onClick} /> : null}\r\n                {activeUser && activeUser.role === 'manager' &&                                     //showing edit icons only to garden owner\r\n                    <Card.Footer>\r\n                        <FontAwesomeIcon icon={faTrashAlt} onClick={() => {handleDeleteClick(image)}}/>\r\n                    </Card.Footer>}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageCard;","import { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Col, Image, Modal } from 'react-bootstrap';\r\nimport './ImageModal.css'\r\n\r\nconst ImageModal = (props) => {\r\n    const { images, showModal, selectedImage, close, onImageChange } = props;\r\n\r\n    //enabling loop browsing\r\n    function nextImage() {\r\n        if (selectedImage === images.length - 1) {\r\n            onImageChange(0);\r\n        } else {\r\n            onImageChange(selectedImage + 1);\r\n        }\r\n    }\r\n\r\n    function prevImage() {\r\n        if (selectedImage === 0) {\r\n            onImageChange(images.length - 1);\r\n        } else {\r\n            onImageChange(selectedImage - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal size='md' show={showModal} onHide={close} centered className='c-image-modal'>\r\n            <Modal.Body className='p-0 row'>\r\n                <Col xs={1} className='prev'>\r\n                    <a className='prev' variant='dark' onClick={prevImage}><FontAwesomeIcon icon={faChevronRight}/></a>\r\n                </Col>\r\n                <Col xs={10} className='p-0'>\r\n                    <Image src={images[selectedImage].url} />\r\n                    <Button onClick={close} className='modal-x-button' variant='outline-warning'>X</Button>\r\n                </Col>\r\n                <Col xs={1} className='next'>\r\n                    <a className='next' variant='dark' onClick={nextImage}><FontAwesomeIcon icon={faChevronLeft}/></a>\r\n                </Col>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ImageModal;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './AddImageCard.css';\r\n\r\nconst AddImageCard = (props) => {\r\n    const { onClick } = props;\r\n\r\n    return (\r\n        <Card className='c-add-image-card' onClick={onClick}>\r\n            <Card.Title>+</Card.Title>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default AddImageCard;","class ImageModel {\r\n    constructor(parseImage){\r\n        this.id = parseImage.id;\r\n        this.url = parseImage.get('file')._url;\r\n    }\r\n}\r\n\r\nexport default ImageModel;","\r\nimport React, { useState } from 'react';\r\nimport { Button, Card, CardColumns, Form, Modal, Spinner } from 'react-bootstrap';\r\nimport addImage from '../../utils/addImage';\r\nimport ImageModel from '../../model/ImageModel'\r\n\r\nfunction AddImageModal(props) {\r\n    const {galleryTitle, galleryId, showModal, closeModal, handleUpdate} = props;\r\n    const [images, setImages] = useState('');\r\n    const [imagesUrl, setImagesUrl] = useState([]);\r\n\r\n    function handleClose() {\r\n        closeModal();\r\n        setImages('');\r\n        setImagesUrl([]);\r\n    }\r\n    \r\n    function onFilesSelect(event) {\r\n        const newImages = Object.values(event.target.files);\r\n        let newImagesUrl = newImages.map(image => URL.createObjectURL(image));\r\n        setImages(newImages);\r\n        setImagesUrl(newImagesUrl);\r\n    }\r\n\r\n    function closeClicked() {\r\n        imagesUrl.forEach(url => {URL.revokeObjectURL(url)});\r\n        handleClose()\r\n    }\r\n    \r\n    async function addClicked() {\r\n        const uploadedImages = await Promise.all(images.map(async image => {\r\n            const res = await addImage(image, galleryId);\r\n            return (new ImageModel(res));\r\n        }));\r\n        handleUpdate('add', uploadedImages);\r\n        handleClose();\r\n    }\r\n    \r\n    const imagesAmount = images ? images.length : 0;\r\n\r\n    const imagesView = imagesUrl ? imagesUrl.map((imageUrl, index) =>\r\n        <Card key={index}>\r\n            <Card.Img src={imageUrl}/>\r\n        </Card>\r\n    ) : null;\r\n\r\n    return (\r\n        <Modal className='c-add-image-modal' size={'md'} show={showModal} onHide={handleClose} centered backdrop=\"static\" keyboard={false}>\r\n            <Modal.Header>\r\n                <Modal.Title>הוספת תמונות לגלריה <span className='font-weight-bold'>{galleryTitle}</span></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group>\r\n                    <Form.File id=\"formFiles\" label={images ? 'filesNames' : 'בחירת קבצים'} data-browse=\"בחירת קבצים\" accept=\"image/*\" custom multiple onChange={onFilesSelect}/>\r\n                    <Form.Text className=\"text-muted\">{imagesAmount >0 ? `נבחרו ${imagesAmount} קבצים` : 'ניתן לבחור מספר קבצים יחד'}</Form.Text>\r\n                    <CardColumns>\r\n                        {imagesView}\r\n                    </CardColumns>\r\n                    {images && imagesView.length === 0 && \r\n                        <div className='images-spinner row justify-content-center mt-3'>\r\n                            <Spinner animation=\"border\" variant=\"warning\" />\r\n                        </div>\r\n                    }\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={closeClicked} disabled={images && imagesView.length === 0}>ביטול</Button>\r\n                <Button variant=\"warning\" onClick={addClicked} disabled={imagesView.length === 0}>הוספה</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AddImageModal;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { CardColumns, Container, Spinner } from 'react-bootstrap';\r\nimport './GalleryPage.css'\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport ImageCard from '../../components/ImageCard/ImageCard';\r\nimport ImageModal from '../../components/ImageModal/ImageModal';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\nimport AddImageCard from '../../components/ImageCard/AddImageCard';\r\nimport AddImageModal from '../../components/AddImage/AddImageModal';\r\n\r\nconst GalleryPage = ({data, onUpdate}) => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [showImageModal, setShowImageModal] = useState(false);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [showAddImage, setShowAddImage] = useState(false);\r\n    const [imageToEdit, setImageToEdit] = useState('');\r\n\r\n    const galleryId = useParams().id;\r\n\r\n    if (!data) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n    \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const {images, title} = data.galleries[galleryId];\r\n    \r\n    function onImageSelect (index) {\r\n        setShowImageModal(true);\r\n        setSelectedImage(index);\r\n    }\r\n\r\n    function onImageChange (index){\r\n        setSelectedImage(index);\r\n    }\r\n\r\n    function handleDeleteClick(image) {\r\n        setImageToEdit(image);\r\n        setShowDeleteAlert(true);\r\n    }\r\n\r\n    function handleUpdate(action, content){\r\n        const updatedImages = {...images};\r\n        if (action === 'delete') {\r\n            delete updatedImages[content.id];\r\n        } else if (action === 'add') {\r\n            content.forEach(image => {\r\n                updatedImages[image.id] = image;\r\n            });\r\n        }\r\n        const galleries = {...data.galleries};\r\n        galleries[galleryId].images = updatedImages;\r\n        onUpdate('galleries', galleries);\r\n    }\r\n\r\n\r\n    const addImage = activeUser && activeUser.role === 'manager' && <AddImageCard onClick={() => {setShowAddImage(true)}}/>;\r\n\r\n    const imagesView = images && Object.values(images).map((image, index) =>\r\n        <ImageCard image={image} key={image.id} activeUser={activeUser} onClick={() => onImageSelect(index)} handleDeleteClick={handleDeleteClick}/>);\r\n\r\n    return (\r\n        <div className='p-gallery'>\r\n            <h2>{title}</h2>\r\n            <Container>\r\n                <CardColumns>\r\n                    {addImage}\r\n                    {imagesView}\r\n                </CardColumns>\r\n            </Container>\r\n            {selectedImage !== null && images.length>0 &&\r\n                <ImageModal images={images} showModal={showImageModal} selectedImage={selectedImage} \r\n                close={() => { setShowImageModal(false) }} onImageChange={onImageChange} />}\r\n            <DeleteWarningModal data={imageToEdit} objectType='תמונה' showModal={showDeleteAlert} handleUpdate={handleUpdate}\r\n                closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setImageToEdit('') }} />\r\n            {images && <AddImageModal galleryTitle={title} galleryId={galleryId} showModal={showAddImage} \r\n                handleUpdate={handleUpdate} closeModal={() => {setShowAddImage(false)}}/>}\r\n        </div>\r\n    )\r\n}\r\nexport default GalleryPage;","import './StudyTopicBox.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst StudyTopicBox = ({topic, activeUser, onDeleteClick, onEditClick}) => {\r\n    const { headline, content } = topic;\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const editIcon = \r\n        <div>\r\n            <FontAwesomeIcon className='edit-icon' icon={faEdit} onClick={onEditClick} />\r\n            <FontAwesomeIcon className='edit-icon' icon={faTrashAlt} onClick={onDeleteClick} />\r\n        </div>\r\n\r\n    return (\r\n        <div className='c-study-topic-box mb-4'>\r\n            {activeUser && activeUser.role === 'manager' && editIcon}\r\n            <Card.Title>{headline}</Card.Title>\r\n            <Card.Text>{content}</Card.Text>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StudyTopicBox;","\r\nfunction getRandomBgColor() {\r\n    \r\n    //returns random bootstrap variant name\r\n\r\n    const bgColors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\r\n    const randomBgColor = bgColors[Math.floor(Math.random() * bgColors.length)];\r\n\r\n    return randomBgColor;\r\n}\r\n\r\nexport default getRandomBgColor;","import './MessageBox.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport getRandomBgColor from '../../utils/getRandomBgColor';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst MessageBox = ({topic, activeUser, onDeleteClick, onEditClick}) => {\r\n    const { headline, content } = topic;\r\n    \r\n    const bgColor = getRandomBgColor();\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const editIcon = \r\n        <div>\r\n            <FontAwesomeIcon className='edit-icon' icon={faEdit} onClick={onEditClick} />\r\n            <FontAwesomeIcon className='edit-icon' icon={faTrashAlt} onClick={onDeleteClick} />\r\n        </div>;\r\n\r\n    return (\r\n        <Card className='c-message-box m-2' bg={bgColor} text={bgColor === 'light' ? 'dark' : 'white'}>\r\n            <Card.Body>\r\n                {activeUser && activeUser.role === 'manager' && editIcon}\r\n                <Card.Title>{headline}</Card.Title>\r\n                <Card.Text>{content}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MessageBox;","import './AddMessageBox.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\n\r\nconst AddMessageBox = ({onClick}) => {\r\n    \r\n    const activeUser = useContext(ActiveUserContext);\r\n    \r\n    \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    \r\n    return (\r\n        <Card className='c-add-message-box m-2 text-center' bg={'light'} text={'dark'} onClick={onClick}>\r\n            <Card.Body>\r\n                <Card.Title>+</Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default AddMessageBox;","import './AddStudyTopicBox.css';\r\nimport React, { useContext } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst AddStudyTopicBox = ({onClick}) => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <div className='c-add-study-topic-box text-center' onClick={onClick}>\r\n            <Card.Title>+</Card.Title>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddStudyTopicBox;","import React, { useEffect, useState } from 'react';\r\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\r\nimport updateDafKesherContent from '../../utils/updateDafKesherContent';\r\n\r\n\r\nconst DafKesherEditorModal = (props) => {\r\n    const { dafKesherId, fullData, data, handleUpdate, showModal, closeModal, cleanDataToEdit } = props;\r\n    const [headline, setHeadline] = useState();\r\n    const [content, setContent] = useState();\r\n    const [showError, setShowError] = useState(false);\r\n\r\n    useEffect(() => { \r\n        const type = typeof data;\r\n        if (type === 'object') {                                //if editing existing content - filling the fields with the original data \r\n            setHeadline(fullData[data.type][data.index].headline);\r\n            setContent(fullData[data.type][data.index].content);\r\n        } else {                                                //if adding new content - showing empty fields\r\n            setHeadline('');\r\n            setContent('');\r\n        }\r\n    }, [data]);\r\n\r\n    function close () {\r\n        closeModal();\r\n        setShowError(false);\r\n        cleanDataToEdit();\r\n    }\r\n\r\n    function onSave() {\r\n        if (!(headline && content)) {\r\n            setShowError(true);\r\n        } else if (typeof data !== 'object') {                  //if adding new content - push new content object\r\n            let newData = { ...fullData };\r\n            newData[data].push({ headline, content });\r\n            updateDafKesherContent(dafKesherId, newData);\r\n            handleUpdate(data, newData[data]);\r\n            close()\r\n        } else {                                                //if editing existing content - saving the changes\r\n            let newData = { ...fullData };\r\n            newData[data.type][data.index].headline = headline;\r\n            newData[data.type][data.index].content = content;\r\n            updateDafKesherContent(dafKesherId, newData);\r\n            handleUpdate(data.type, newData[data.type]);\r\n            close();\r\n        }\r\n    }\r\n\r\n\r\n    const modalTitle = (typeof data) === 'object' ? 'עריכת תוכן דף קשר' : 'הוספת תוכן חדש'; //setting the modal title depending on the situation (add/edit)\r\n\r\n    return (\r\n        <Modal size='md' show={showModal} onHide={close} centered className='c-daf-kesher-editor-modal'>\r\n            <Modal.Header>\r\n                <Modal.Title>{modalTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form>\r\n                <Form.Group controlId='headline'>\r\n                    <Form.Label>כותרת</Form.Label>\r\n                    <Form.Control type=\"text\" value={headline} onChange={e => { setHeadline(e.target.value) }} />\r\n                </Form.Group>\r\n                <Form.Group controlId='content'>\r\n                    <Form.Label>תוכן</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={5} value={content} onChange={e => {setContent(e.target.value)}} />\r\n                </Form.Group>\r\n                </Form>\r\n                {showError ? <Alert variant=\"danger\">נא למלא את כל השדות</Alert> : null}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={close}>סגירה</Button>\r\n                <Button variant=\"warning\" onClick={onSave}>שמירה</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default DafKesherEditorModal;","import './DafKesherPage.css'\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Card, Col, Container, Row, Spinner } from 'react-bootstrap';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport StudyTopicBox from '../../components/StudyTopicBox/StudyTopicBox';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport MessageBox from '../../components/MessageBox/MessageBox';\r\nimport AddMessageBox from '../../components/MessageBox/AddMessageBox';\r\nimport AddStudyTopicBox from '../../components/StudyTopicBox/AddStudyTopicBox';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\nimport DafKesherEditorModal from '../../components/DafKesherEditorModal/DafKesherEditorModal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCommentDots, faNewspaper } from '@fortawesome/free-solid-svg-icons';\r\nimport ActiveGardenContext from '../../utils/ActiveGardenContext';\r\n\r\nfunction DafKesherPage({data, onUpdate}) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const activeGarden = useContext(ActiveGardenContext);\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [showEditorModal, setShowEditorModal] = useState(false);\r\n    const [contentToEdit, setContentToEdit] = useState('');\r\n\r\n    const dafKesherId = useParams().id;\r\n    \r\n    if (!data) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n    \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    \r\n    const { name, logo } = activeGarden;\r\n    const dafKesherData = data.dapeyKesher[dafKesherId].data;\r\n    const { studyTopics, messages } = dafKesherData;\r\n    const {title, hebDate} = data.dapeyKesher[dafKesherId];\r\n    \r\n\r\n    function handleAddClick(contentToEdit) {\r\n        setContentToEdit(contentToEdit);\r\n        setShowEditorModal(true);\r\n    }\r\n\r\n    function handleEditClick(contentToEdit) {\r\n        setContentToEdit(contentToEdit);\r\n        setShowEditorModal(true);\r\n    }\r\n\r\n    function handleDeleteClick(contentToEdit) {\r\n        setContentToEdit(contentToEdit);\r\n        setShowDeleteAlert(true);\r\n    }\r\n\r\n    function handleUpdate(type, content) {\r\n        const updatedDafKesherData = {...dafKesherData};\r\n        updatedDafKesherData[type] = content;\r\n        const dapeyKesher = {...data.dapeyKesher};\r\n        dapeyKesher[dafKesherId].data = updatedDafKesherData;\r\n        onUpdate('dapeyKesher', dapeyKesher)\r\n    }\r\n\r\n    const topicsView = studyTopics ? Object.values(studyTopics).map( (topic, index) => \r\n        <div key={index}>\r\n            <StudyTopicBox topic={{ 'headline': topic.headline, 'content': topic.content }} activeUser={activeUser}\r\n                onEditClick={() => { handleEditClick({ type: 'studyTopics', index: index }) }}\r\n                onDeleteClick={() => { handleDeleteClick({ type: 'studyTopics', index: index }) }} />\r\n        </div>\r\n    ) : null;\r\n    \r\n    const addTopic = activeUser && activeUser.role === 'manager' && <AddStudyTopicBox onClick={() => { handleAddClick('studyTopics') }}/>;\r\n\r\n    const messagesView = messages ? Object.values(messages).map( (message, index) => \r\n        <div key={index}>\r\n            <MessageBox topic={{ 'headline': message.headline, 'content': message.content }} activeUser={activeUser}\r\n                onEditClick={() => { handleEditClick({ type: 'messages', index: index }) }}\r\n                onDeleteClick={() => { handleDeleteClick({ type: 'messages', index: index }) }} />\r\n        </div>\r\n    ) : null;\r\n    \r\n    const addMessage = activeUser && activeUser.role === 'manager' && <AddMessageBox onClick={() => { handleAddClick('messages') }}/>;\r\n\r\n    return (\r\n        <div className='p-daf-kesher'>\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        <div className='name'>{name}</div>\r\n                        <h2>{`דף קשר ${title}`}</h2>\r\n                        <div className='date'>{hebDate}</div>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        <div className='logo'><img src={logo} alt=\"logo\"/></div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={8} className='mb-3'>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <span>מה למדנו השבוע?</span>\r\n                                <FontAwesomeIcon className='view-icon' icon={faNewspaper}/>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                {topicsView}\r\n                                {addTopic}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <div>הודעות</div>\r\n                                <FontAwesomeIcon className='view-icon' icon={faCommentDots}/>\r\n                            </Card.Header>\r\n                            {messagesView}\r\n                            {addMessage}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <DafKesherEditorModal dafKesherId={dafKesherId} fullData={dafKesherData} data={contentToEdit} cardType='dafKesher' handleUpdate={handleUpdate} \r\n                showModal={showEditorModal} closeModal={() => setShowEditorModal(false)} cleanDataToEdit={() => { setContentToEdit('') }}/>\r\n            <DeleteWarningModal dafKesherId={dafKesherId} fullData={dafKesherData} data={contentToEdit} objectType={contentToEdit.type === 'studyTopics' ? 'חומר לימודי' : 'הודעה'}\r\n                showModal={showDeleteAlert} closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setContentToEdit('') }} handleUpdate={handleUpdate}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DafKesherPage;","\r\nfunction getGreeting() {\r\n    const date = new Date();\r\n    const hour = date.getHours();\r\n    \r\n    let greeting;\r\n    if (hour >=4 && hour <=10) {                // setting the greeting according to the day part\r\n        greeting = 'בוקר טוב';\r\n    } else if (hour >= 11 && hour <=16) {\r\n        greeting = 'צהריים טובים';\r\n    } else if (hour >= 17 && hour <=20) {\r\n        greeting = 'ערב טוב';\r\n    } else {\r\n        greeting = 'לילה טוב';\r\n    }\r\n    \r\n    return greeting;\r\n}\r\n\r\nexport default getGreeting;","import { Button, Nav, Navbar } from 'react-bootstrap';\r\nimport './TopNavbar.css';\r\nimport logo from '../../images/logo192.png';\r\nimport { useContext } from 'react';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport { useLocation } from 'react-router-dom';\r\nimport getGreeting from '../../utils/getGreeting';\r\n\r\nconst TopNavbar = ({ onLogout }) => {\r\n\r\n  const activeUser = useContext(ActiveUserContext);\r\n\r\n  const path = useLocation().pathname.split('/')[1];              // detecting the location in the site from the url to set the active link\r\n\r\n  const greeting = getGreeting();                                 // detecting the day part to dynamically greeting the user\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\">\r\n      <Navbar.Brand href=\"#/\" className='ml-2'>\r\n        <img src={logo} alt=\"Digital Garden logo\" className=\"d-inline-block align-top\"/>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className={activeUser ? \"ml-auto\" : \"mr-auto\"}>\r\n          \r\n          { activeUser ?                                          // hiding the links inside the site from guests\r\n          <>\r\n            <Nav.Link href=\"#/my-garden\" active={path === 'my-garden' ? true : false}>הגן שלי</Nav.Link>\r\n            <Nav.Link href=\"#/dapey-kesher\" active={path === 'dapey-kesher' ? true : false}>דפי קשר</Nav.Link>\r\n            <Nav.Link href=\"#/galleries\" active={path === 'galleries' ? true : false}>גלריות</Nav.Link>\r\n          </> : null}\r\n\r\n          <Nav.Link href=\"#/contact-us\" active={path === 'contact-us' ? true : false}>צור קשר</Nav.Link>\r\n        </Nav>\r\n        \r\n        { activeUser ?\r\n        <Nav>\r\n          <Navbar.Text>{`${greeting}, ${activeUser.fname}`}</Navbar.Text>\r\n          <Button as='a' variant='' onClick={onLogout}>התנתק</Button>\r\n        </Nav> : null}\r\n\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default TopNavbar;","import Parse from 'parse';\r\n\r\nasync function getGardenDetails(activeUser) {\r\n    const parseGan = await new Parse.Query(new Parse.Object.extend('Gan')).get(activeUser.gardenId);\r\n    const ganName = parseGan.get('name');\r\n    const ganLogo = parseGan.get('logo')._url;\r\n    const ganYear = parseGan.get('year');\r\n\r\n    const gardenDetails = {\r\n        'parseGarden':parseGan,\r\n        'id':parseGan.id,\r\n        'name':ganName,\r\n        'logo':ganLogo,\r\n        'year':ganYear\r\n    }\r\n    return (gardenDetails);\r\n}\r\n\r\nexport default getGardenDetails;","import Parse from 'parse';\r\nimport DafKesherModel from '../model/DafKesherModel';\r\nimport GalleryModel from '../model/GalleryModel';\r\n\r\nasync function getGardenData(parseGarden) {\r\n    const galleriesQuery = new Parse.Query(Parse.Object.extend('Gallery'));\r\n    const dapeyKesherQuery = new Parse.Query(Parse.Object.extend('DafKesher'));\r\n    galleriesQuery.equalTo(\"gan\", parseGarden);\r\n    dapeyKesherQuery.equalTo(\"gan\", parseGarden);\r\n\r\n    const galleriesResults = await galleriesQuery.find();\r\n    const dapeyKesherResults = await dapeyKesherQuery.find();\r\n\r\n    const galleriesArr = galleriesResults.map(gallery => new GalleryModel(gallery));\r\n    const dapeyKesherArr = dapeyKesherResults.map(dafKesher => new DafKesherModel(dafKesher));\r\n\r\n    const galleries = galleriesArr.reduce((gallery, item) => {\r\n        return {\r\n            ...gallery,\r\n            [item['id']]: item,\r\n          };\r\n    }, {});\r\n    const dapeyKesher = dapeyKesherArr.reduce((dafKesher, item) => {\r\n        return {\r\n            ...dafKesher,\r\n            [item['id']]: item,\r\n          };\r\n    }, {});\r\n    \r\n    return {galleries, dapeyKesher};\r\n}\r\n\r\nexport default getGardenData;","import Parse from 'parse';\r\nimport ImageModel from '../model/ImageModel';\r\n\r\nasync function getGalleriesImages(galleries) {\r\n\r\n    const imagesArr = await Promise.all(Object.values(galleries).map(async gallery => {\r\n\r\n        const imgQuery = new Parse.Query(Parse.Object.extend('Image'));\r\n        imgQuery.equalTo(\"gallery\", gallery.parseGallery);\r\n        \r\n        const results = await imgQuery.find();\r\n        const imagesArr = results.map(image => new ImageModel(image));\r\n        \r\n        const imagesObj = imagesArr.reduce((image, item) => {\r\n            return {\r\n                ...image,\r\n                [item['id']]: item,\r\n              };\r\n        }, {});\r\n\r\n        return {'id':gallery.id, 'images':imagesObj};\r\n    }));\r\n    \r\n    const galleriesImagesObj = imagesArr.reduce((gallery, item) => {\r\n        return {\r\n            ...gallery,\r\n            [item['id']]: item,\r\n        };\r\n    }, {});\r\n    \r\n    return (galleriesImagesObj);\r\n\r\n\r\n}\r\nexport default getGalleriesImages;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport MyGardenPage from './pages/MyGardenPage/MyGardenPage';\nimport DapeyKesherPage from './pages/DapeyKesherPage/DapeyKesherPage';\nimport GalleriesPage from './pages/GalleriesPage/GalleriesPage';\nimport ContactUsPage from './pages/ContactUsPage/ContactUsPage';\nimport { useEffect, useState } from 'react';\nimport ActiveUserContext from './utils/ActiveUserContext';\nimport ActiveGardenContext from './utils/ActiveGardenContext';\nimport Parse from 'parse';\nimport UserModel from './model/UserModel';\nimport GalleryPage from './pages/GalleryPage/GalleryPage';\nimport DafKesherPage from './pages/DafKesherPage/DafKesherPage';\nimport TopNavbar from './components/TopNavbar/TopNavbar';\nimport{ init } from 'emailjs-com';\nimport getGardenDetails from './utils/getGardenDetails';\nimport getGardenData from './utils/getGardenData';\nimport getGalleriesImages from './utils/getGalleriesImages';\n\nfunction App() {\n  const [activeUser, setActiveUser] = useState(Parse.User.current() ? new UserModel(Parse.User.current()) : null);\n  const [activeGarden, setActiveGarden] = useState(null);\n  const [gardenData, setGardenData] = useState(null);\n\n  useEffect(() => {\n    async function getGarden(){\n      const garden = await getGardenDetails(activeUser);\n      const data = await getGardenData(garden.parseGarden);\n      setActiveGarden(garden);\n      setGardenData(data);\n      \n      const images = await getGalleriesImages(data.galleries);\n      const newGalleries = {...data.galleries};\n      Object.keys(images).forEach(gallery => {\n        newGalleries[gallery].images = images[gallery].images;\n      });\n      const newData = {...data};\n      newData.galleries = newGalleries;\n      setGardenData(newData);\n    }\n    activeUser && getGarden();\n  },[activeUser]);\n  \n  init(\"user_AV4NvFTR6vJnUEHOtXINx\");\n  const handleLogin = (loggedinUser) => {\n    setActiveUser(loggedinUser);\n  }\n\n  const handleLogout = () => {\n    setActiveUser(null);\n    Parse.User.logOut();\n  }\n\n  const updateGardenData = (type, content) => {\n    const data = {...gardenData};\n    data[type] = content;\n    setGardenData(data);\n  }\n\n  return (\n    <>\n      <HashRouter>\n        <Switch>\n          <ActiveUserContext.Provider value={activeUser}>\n            <ActiveGardenContext.Provider value={activeGarden}>\n              <TopNavbar onLogout={handleLogout}/>\n              <Route exact path=\"/\"><HomePage onLogin={handleLogin} /></Route>\n              <Route exact path=\"/my-garden\"><MyGardenPage data={gardenData}/></Route>\n              <Route exact path=\"/dapey-kesher\"><DapeyKesherPage data={gardenData} onUpdate={updateGardenData}/></Route>\n              <Route exact path=\"/dapey-kesher/:id\"><DafKesherPage data={gardenData} onUpdate={updateGardenData}/></Route>\n              <Route exact path=\"/galleries\"><GalleriesPage data={gardenData} onUpdate={updateGardenData}/></Route>\n              <Route exact path=\"/galleries/:id\"><GalleryPage data={gardenData} onUpdate={updateGardenData}/></Route>\n              <Route exact path=\"/contact-us\"><ContactUsPage /></Route>\n            </ActiveGardenContext.Provider>\n          </ActiveUserContext.Provider>\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Parse from \"parse\";\n\nParse.serverURL = 'https://parseapi.back4app.com';\nParse.initialize(\n  'YjX6kib1y4ZL0wYCCXagO161JHCAZNLF8vz04iNh', // This is your Application ID\n  'YYhfXbq4guVCOl4BhV5Jcvfh43NNbDbIpAqI2LzG', // This is your Javascript key\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}