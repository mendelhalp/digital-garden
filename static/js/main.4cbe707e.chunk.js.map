{"version":3,"sources":["images/logo192.png","model/UserModel.jsx","utils/IsEnterPressed.jsx","utils/isEmailValid.jsx","components/LoginModal/LoginModal.jsx","utils/ActiveUserContext.jsx","pages/HomePage/HomePage.jsx","pages/MyGardenPage/MyGardenPage.jsx","components/DafKesherCard/DafKesherCard.jsx","utils/getHebrewDate.jsx","utils/getGardenDapeyKesher.jsx","utils/getGardenDetails.jsx","components/DafKesherCard/AddDafKesherCard.jsx","utils/createNewDafKesher.jsx","components/DafKesherCardEditorModal/DafKesherCardEditorModal.jsx","pages/DapeyKesherPage/DapeyKesherPage.jsx","utils/getGalleryMainImg.jsx","components/GalleryCard/GalleryCard.jsx","utils/getGardenGalleries.jsx","pages/GalleriesPage/GalleriesPage.jsx","pages/ContactUsPage/ContactUsPage.jsx","components/ImageCard/ImageCard.jsx","components/ImageModal/ImageModal.jsx","utils/getGalleryImages.jsx","utils/getGalleryDetails.jsx","pages/GalleryPage/GalleryPage.jsx","components/StudyTopicBox/StudyTopicBox.jsx","utils/getDafKesherDetails.jsx","images/book-icon.png","images/message-icon.png","utils/getRandomBgColor.jsx","components/MessageBox/MessageBox.jsx","components/MessageBox/AddMessageBox.jsx","components/StudyTopicBox/AddStudyTopicBox.jsx","pages/DafKesherPage/DafKesherPage.jsx","utils/getGreeting.jsx","components/TopNavbar/TopNavbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserModel","parseUser","this","id","email","get","fname","lname","gardenId","role","isEnterPressed","e","key","isEmailValid","test","LoginModal","props","showModal","handleCloseLogin","onLogin","useState","setEmail","pwd","setPwd","showError","setShowError","showEmailError","setShowEmailError","cleanFormFields","login","a","Parse","User","logIn","close","ifEnterPressed","event","useEffect","className","Modal","size","show","onHide","centered","Header","Title","Body","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","target","onKeyPress","Feedback","Alert","variant","Footer","Button","as","to","onClick","ActiveUserContext","createContext","HomePage","loginModalShow","setLoginModalShow","activeUser","useContext","redirectToMyGarden","setRedirectToMyGarden","src","logo","alt","user","MyGardenPage","DafKesherCard","dafKesher","title","hebDate","Card","Text","getHebrewDate","dateObj","require","hebrewDate","year","month","date","HebrewYearName","yearNum","yearName","tensNames","taf","parseInt","shin","reish","getHebrewYearName","hebrewMonthName","includes","isLeapYear","ganId","Query","Object","extend","Gan","dapeyKesherQuery","equalTo","descending","find","results","dapeyKesher","map","getGardenDapeyKesher","parseGan","ganName","ganLogo","_url","gardenDetails","getGardenDetails","AddDafKesherCard","parseGarden","DafKesher","myNewDafKesher","set","Date","save","then","result","console","log","error","createNewDafKesher","DafKesherCardEditorModal","data","setTitle","setDate","onSave","DapeyKesherPage","setDapeyKesher","garden","setGarden","showNewDafKesherModal","setShowNewDafKesherModal","getDapeyKesher","addDafKesher","Col","md","lg","dapeyKesherView","Container","Row","sm","name","galleryId","galleryQuery","parseGallery","query","count","numOfImgs","fullResult","mainImgUrl","Math","floor","random","getGalleryMainImg","GalleryCard","gallery","mainImg","setMainImg","getMainImg","Img","galleriesQuery","galleries","getGardenGalleries","GalleriesPage","setGalleries","getGalleries","galleriesView","ContactUsPage","setName","subject","setSubject","request","setRequest","useUserInfo","setUseUserInfo","files","setFiles","isFormValid","setIsFormValid","isFormSubmitted","setIsFormSubmitted","filesNames","i","length","split","filesAmount","Check","label","checked","File","data-browse","custom","multiple","disabled","ImageCard","image","url","desc","ImageModal","images","selectedImage","onImageChange","xs","Image","Gallery","imgQuery","getGalleryImages","galleryName","galleryMainImg","getGalleryDetails","GalleryPage","setImages","setGalleryName","showImageModal","setShowImageModal","setSelectedImage","useParams","getImages","imagesView","index","onImageSelect","modalView","CardColumns","StudyTopicBox","topic","headline","content","editIcon","deleteIcon","icon","faEdit","faTrashAlt","dafKesherId","getDafKesherDetails","getRandomBgColor","bgColors","MessageBox","bgColor","bg","text","AddMessageBox","AddStudyTopicBox","DafKesherPage","setData","header","setHeader","getData","topicsView","sdutyTopics","messagesView","messages","message","bookIcon","messageIcon","getGreeting","hour","getHours","TopNavbar","onLogout","path","useLocation","pathname","greeting","Navbar","collapseOnSelect","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","active","App","current","setActiveUser","Provider","logOut","exact","loggedinUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cbe707e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo192.f73b2edd.png\";","class UserModel {\r\n    constructor(parseUser){\r\n        this.id = parseUser.id;\r\n        this.email = parseUser.get('username');\r\n        this.fname = parseUser.get('fname');\r\n        this.lname = parseUser.get('lname');\r\n        this.gardenId = parseUser.get('gan').id;\r\n        this.role = parseUser.get('role');\r\n    }\r\n}\r\n\r\nexport default UserModel;","const isEnterPressed = (e) => e.key === 'Enter' ? true : false;\r\n\r\nexport default isEnterPressed;","\r\nfunction isEmailValid(email) {\r\n    return /.+@.+\\..+/.test(email)\r\n}\r\n\r\nexport default isEmailValid;","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Modal, Form, Alert } from 'react-bootstrap';\r\nimport Parse from 'parse';\r\nimport UserModel from '../../model/UserModel';\r\nimport isEnterPressed from '../../utils/IsEnterPressed';\r\nimport { Link } from 'react-router-dom';\r\nimport isEmailValid from '../../utils/isEmailValid';\r\n\r\nfunction LoginModal(props) {\r\n    const {showModal, handleCloseLogin, onLogin} = props;\r\n    const [email, setEmail] = useState('');\r\n    const [pwd, setPwd] = useState('');\r\n    const [showError, setShowError] = useState(false);\r\n    const [showEmailError, setShowEmailError] = useState(false);\r\n\r\n    function cleanFormFields () {\r\n        setEmail('');\r\n        setPwd('');\r\n        setShowError(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (pwd !== ''){\r\n            setShowError(false)\r\n        }\r\n    },[pwd]);\r\n    useEffect(() => {\r\n        setShowError(false);\r\n        if (!isEmailValid(email) && email !== '') {\r\n            setShowEmailError(true);\r\n        } else if (isEmailValid(email)) { \r\n            setShowEmailError(false);\r\n        }\r\n    },[email]);\r\n\r\n    async function login () {\r\n        try {\r\n            const parseUser = await Parse.User.logIn(email, pwd);\r\n            \r\n            // Trigger onLogin event and clean the fields\r\n            onLogin(new UserModel(parseUser));\r\n            handleCloseLogin();\r\n            cleanFormFields();\r\n            \r\n        } catch(error) {\r\n            // show an error alert\r\n            setPwd('');\r\n            setShowError(true);\r\n        }\r\n    }\r\n\r\n    function close () {\r\n        handleCloseLogin();\r\n        cleanFormFields();\r\n    }\r\n\r\n    function ifEnterPressed (event) {\r\n        if (isEnterPressed(event) && email){\r\n            login();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='c-login-modal'>\r\n            <Modal size='md' show={showModal} onHide={close} centered>\r\n                <Modal.Header>\r\n                    <Modal.Title>כניסה</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId='loginUserName'>\r\n                            <Form.Label>שם משתמש</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"דואר אלקטרוני\" value={email} className={showEmailError ? 'is-invalid' : null}\r\n                                onChange={e => { setEmail(e.target.value) }} onKeyPress={ifEnterPressed} />\r\n                            <Form.Control.Feedback type=\"invalid\">כתובת מייל לא תקינה</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='loginPwd'>\r\n                            <Form.Label>סיסמה</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"סיסמה\" value={pwd}\r\n                                onChange={e => {setPwd(e.target.value)}}  onKeyPress={ifEnterPressed}/>\r\n                        </Form.Group>\r\n                    </Form>\r\n                    {showError ? <Alert variant=\"danger\">מייל או סיסמה שגויים</Alert> : null}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button as='a' variant='link' className='ml-auto'><Link to={'/signup'}>עדיין לא רשומים?</Link></Button>\r\n                    <Button variant=\"secondary\" onClick={close}>סגירה</Button>\r\n                    <Button variant=\"warning\" onClick={login}>כניסה</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginModal;\r\n","import { createContext } from 'react';\r\n\r\nconst ActiveUserContext = createContext(null);\r\n\r\nexport default ActiveUserContext;","import './HomePage.css'\r\nimport logo from '../../images/logo192.png'\r\nimport { Button } from 'react-bootstrap';\r\nimport { useContext, useState } from 'react';\r\nimport LoginModal from '../../components/LoginModal/LoginModal';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\n\r\nconst HomePage = (props) => {\r\n    const [loginModalShow, setLoginModalShow] = useState(false);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [redirectToMyGarden, setRedirectToMyGarden] = useState(activeUser ? true : false);\r\n    const { onLogin } = props;\r\n\r\n    const handleLogin = (user) => {\r\n        onLogin(user);\r\n        setRedirectToMyGarden(true);\r\n    }\r\n    \r\n    const handleCloseLogin = () => {\r\n        setLoginModalShow(false);\r\n    }\r\n    \r\n    if (redirectToMyGarden) {\r\n        return <Redirect to=\"my-garden\"/>;\r\n    }\r\n    return (\r\n        <div className=\"p-home\">\r\n            <div className='main-content'>\r\n                <div className='logo'>\r\n                    <img className='logo-img' src={logo} alt=\"logo\"/>\r\n                </div>\r\n                <div className='main-text'>\r\n                    <div className='text'>\r\n                        <h2>הגן הדיגיטלי</h2>\r\n                        <h5>הקשר שלך עם ההורים</h5>\r\n                        <h5>נראה אחרת!</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='buttons'>\r\n                <Button variant=\"outline-warning\" size='lg' onClick={() => { setLoginModalShow(true) }}>כניסה</Button>{' '}\r\n                <Button variant=\"warning\" size='lg'>הרשמה</Button>\r\n            </div>\r\n            <LoginModal showModal={loginModalShow} handleCloseLogin={handleCloseLogin} onLogin={handleLogin}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import { useContext } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport ActiveUserContext from '../../utils/ActiveUserContext'\r\nimport './MyGardenPage.css'\r\n\r\nconst MyGardenPage = () => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-my-gan\">\r\n            my gan page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyGardenPage;","import './DafKesherCard.css'\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DafKesherCard = ({dafKesher}) => {\r\n    const {id, title, hebDate} = dafKesher;\r\n\r\n    return (\r\n        <div className='c-daf-kesher-card'>\r\n            <Card>\r\n                <Link to={'/dapey-kesher/'+id}>\r\n                    <Card.Title className='text-center'>{title}</Card.Title>\r\n                    <Card.Text className='text-center'>{hebDate}</Card.Text>\r\n                </Link>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DafKesherCard;","function isLeapYear(year) {\r\n    const restForLeapYears = [0, 3, 6, 8, 11, 14, 17];\r\n    return (restForLeapYears.includes(year % 19));\r\n}\r\n\r\nfunction getHebrewYearName(yearNum) {\r\n    const unitsNames = ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ז', 'ח', 'ט'];\r\n    const tensNames = ['י', 'כ', 'ל', 'מ', 'נ', 'ס', 'ע', 'פ', 'צ']\r\n\r\n    let yearName;\r\n    let year = yearNum % 1000;\r\n    const taf = parseInt(year / 400);\r\n    year = year % 400;\r\n    const shin = parseInt(year / 300);\r\n    year = year % 300;\r\n    const reish = parseInt(year / 200);\r\n    year = year % 200;\r\n    const kuf = parseInt(year / 100);\r\n    year = year % 100;\r\n\r\n    yearName = taf > 1 ? 'תת' : taf === 1 ? 'ת' : '';\r\n    yearName += shin === 1 ? 'ש' : '';\r\n    yearName += reish === 1 ? 'ר' : '';\r\n    yearName += kuf === 1 ? 'ק' : '';\r\n    if (year !== 0 && year % 10 !== 0) {\r\n        yearName += tensNames[parseInt(year / 10) - 1];\r\n        yearName += '\"';\r\n        yearName += unitsNames[year % 10 - 1];\r\n    } else if (year !== 0) {\r\n        yearName += '\"';\r\n        yearName += tensNames[parseInt(year / 10) - 1];\r\n    } else {\r\n        yearName += \"'\";\r\n    }\r\n\r\n    return(yearName)\r\n}\r\n\r\nfunction getHebrewDate(dateObj) {\r\n    const hebrewDate = require('hebrew-date');\r\n    const { year, month, date } = hebrewDate(dateObj);\r\n    \r\n    const monthNamesOfNonLeapYear = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\r\n    const monthNamesOfLeapYear = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א', 'אדר ב', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\r\n    \r\n    const dateNames = ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ז', 'ח', 'ט', 'י', 'י\"א', 'י\"ב', 'י\"ג', 'י\"ד'\r\n    , 'ט\"ו', 'ט\"ז', 'י\"ז', 'י\"ח', 'י\"ט', 'כ', 'כ\"א', 'כ\"ב', 'כ\"ג', 'כ\"ד', 'כ\"ה', 'כ\"ו', 'כ\"ז', 'כ\"ח', 'כ\"ט', 'ל'];\r\n    \r\n    const HebrewYearName = getHebrewYearName(year);\r\n    const hebrewMonthName = isLeapYear(year) ? monthNamesOfLeapYear[month -1] : monthNamesOfNonLeapYear[month -1];\r\n    const hebrewDateName = dateNames[date -1];\r\n    const hebrewDateStr = hebrewDateName + ' ' + hebrewMonthName + ' ' + HebrewYearName;\r\n\r\n    return (hebrewDateStr);\r\n}\r\n\r\nexport default getHebrewDate;","import Parse from 'parse';\r\nimport getHebrewDate from './getHebrewDate';\r\n\r\nasync function getGardenDapeyKesher(ganId) {\r\n\r\n    const Gan = await new Parse.Query(new Parse.Object.extend('Gan')).get(ganId);\r\n    const dapeyKesherQuery = new Parse.Query(Parse.Object.extend('DafKesher'));\r\n    dapeyKesherQuery.equalTo(\"gan\", Gan);\r\n    dapeyKesherQuery.descending(\"date\");\r\n\r\n    const results = await dapeyKesherQuery.find();\r\n\r\n    const dapeyKesher = results.map(dafKesher => {\r\n        return({\r\n            'id':dafKesher.id,\r\n            'title':dafKesher.get('title'),\r\n            'hebDate':getHebrewDate(dafKesher.get('date'))\r\n        })\r\n    });\r\n\r\n    return (dapeyKesher);\r\n}\r\nexport default getGardenDapeyKesher;","import Parse from 'parse';\r\n\r\nasync function getGardenDetails(activeUser) {\r\n    const parseUser = await new Parse.Query(new Parse.User()).get(activeUser.id);\r\n    const parseGan = await new Parse.Query(new Parse.Object.extend('Gan')).get(parseUser.get('gan').id);\r\n    const ganName = parseGan.get('name');\r\n    const ganLogo = parseGan.get('logo')._url;\r\n\r\n    const gardenDetails = {\r\n        'parseGarden':parseGan,\r\n        'id':parseGan.id,\r\n        'name':ganName,\r\n        'logo':ganLogo\r\n    }\r\n    return (gardenDetails);\r\n}\r\n\r\nexport default getGardenDetails;","import './AddDafKesherCard.css'\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst AddDafKesherCard = (props) => {\r\n\r\n    const {onClick} = props;\r\n\r\n    return (\r\n        <div className='c-add-daf-kesher-card'>\r\n            <Card onClick={onClick}>\r\n                <Card.Title className='text-center'>+</Card.Title>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddDafKesherCard;","import Parse from \"parse\";\r\n\r\nasync function createNewDafKesher(parseGarden, title, date) {\r\n\r\n    const DafKesher = Parse.Object.extend('DafKesher');\r\n    const myNewDafKesher = new DafKesher();\r\n\r\n    myNewDafKesher.set('title',title);\r\n    myNewDafKesher.set('gan', parseGarden);\r\n    myNewDafKesher.set('date', new Date(date));\r\n    myNewDafKesher.set('data', {\"sdutyTopics\":[], \"messages\":[]});\r\n\r\n    myNewDafKesher.save().then(\r\n    (result) => {\r\n        console.log('DafKesher created', result);\r\n    },\r\n    (error) => {\r\n        console.error('Error while creating DafKesher: ', error);\r\n    }\r\n    );\r\n    \r\n    return '';\r\n}\r\n\r\nexport default createNewDafKesher;","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Modal, Form, Alert } from 'react-bootstrap';\r\nimport createNewDafKesher from '../../utils/createNewDafKesher';\r\nimport isEnterPressed from '../../utils/IsEnterPressed';\r\n\r\nconst DafKesherCardEditorModal = (props) => {\r\n    const {data, parseGarden, showModal, handleCloseLogin} = props;\r\n    const [title, setTitle] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [showError, setShowError] = useState(false);\r\n    const [showEmailError, setShowEmailError] = useState(false);\r\n\r\n    useEffect(() => { \r\n        \r\n    },[]);\r\n\r\n    function cleanFormFields () {\r\n        setTitle('');\r\n        setDate('');\r\n        setShowError(false);\r\n    }\r\n\r\n\r\n    function close () {\r\n        handleCloseLogin();\r\n        cleanFormFields();\r\n    }\r\n\r\n    function onSave() {\r\n        if (!(title, date)) {\r\n            setShowError(true);\r\n        } else {\r\n            createNewDafKesher(parseGarden, title, date);\r\n            close()\r\n        }\r\n    }\r\n\r\n    function ifEnterPressed (event) {\r\n        if (isEnterPressed(event) && title && date){\r\n            onSave();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='c-daf-kesher-card-editor-modal'>\r\n            <Modal size='sm' show={showModal} onHide={close} centered>\r\n                <Modal.Header>\r\n                    <Modal.Title>יצירת דף קשר חדש</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId='title'>\r\n                            <Form.Label>כותרת</Form.Label>\r\n                            <Form.Control type=\"text\" value={title} onChange={e => { setTitle(e.target.value) }} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='date'>\r\n                            <Form.Label>תאריך</Form.Label>\r\n                            <Form.Control type=\"date\" value={date}\r\n                                onChange={e => {setDate(e.target.value)}}  onKeyPress={ifEnterPressed}/>\r\n                        </Form.Group>\r\n                    </Form>\r\n                    {showError ? <Alert variant=\"danger\">נא למלא את כל השדות</Alert> : null}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={close}>סגירה</Button>\r\n                    <Button variant=\"warning\" onClick={onSave}>שמירה</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DafKesherCardEditorModal;\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DafKesherCard from '../../components/DafKesherCard/DafKesherCard';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport './DapeyKesherPage.css';\r\nimport getGardenDapeyKesher from '../../utils/getGardenDapeyKesher';\r\nimport getGardenDetails from '../../utils/getGardenDetails';\r\nimport AddDafKesherCard from '../../components/DafKesherCard/AddDafKesherCard';\r\nimport DafKesherCardEditorModal from '../../components/DafKesherCardEditorModal/DafKesherCardEditorModal';\r\n\r\nconst DapeyKesherPage = () => {\r\n    const [dapeyKesher, setDapeyKesher] = useState([]);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [garden, setGarden] = useState('');\r\n    const [showNewDafKesherModal, setShowNewDafKesherModal] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        async function getDapeyKesher() {\r\n            const garden = await getGardenDetails(activeUser);\r\n            setGarden(garden);\r\n            const dapeyKesher = await getGardenDapeyKesher(garden.id);\r\n            setDapeyKesher(dapeyKesher);\r\n        }\r\n        \r\n        getDapeyKesher();\r\n    }, [showNewDafKesherModal])\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const addDafKesher = activeUser.role === 'manager' ?\r\n        <Col className='py-2' md={6} lg={3}>\r\n            <AddDafKesherCard onClick={() => { setShowNewDafKesherModal(true) }}/>\r\n        </Col>\r\n    : null;\r\n\r\n    const dapeyKesherView = dapeyKesher ? dapeyKesher.map(dafKesher =>\r\n        <Col className='py-2' md={6} lg={3} key={dafKesher.id}>\r\n            <DafKesherCard dafKesher={dafKesher}/>\r\n        </Col>\r\n    ) : null;\r\n\r\n\r\n    return (\r\n        <div className=\"p-dapey-kesher\">\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        <div className='name'>{garden.name}</div>\r\n                        <h2>דפי הקשר שלנו</h2>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {garden ? <div className='logo'><img src={garden.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row className='align-items-stretch'>\r\n                    {addDafKesher}\r\n                    {dapeyKesherView}\r\n                </Row>\r\n            </Container>\r\n            <DafKesherCardEditorModal parseGarden={garden.parseGarden} showModal={showNewDafKesherModal } handleCloseLogin={() => {setShowNewDafKesherModal(false)}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DapeyKesherPage;","import Parse from 'parse';\r\n\r\n\r\nasync function getGalleryMainImg(galleryId) {\r\n    \r\n    const galleryQuery = new Parse.Query(Parse.Object.extend('Gallery'));\r\n    const parseGallery = await galleryQuery.get(galleryId);\r\n    \r\n    const query = new Parse.Query(Parse.Object.extend('Image'));\r\n    query.equalTo('gallery', parseGallery);\r\n    const numOfImgs = await query.count();\r\n    const fullResult = await query.find();\r\n    query.equalTo('isPrimary', true);\r\n    const result = await query.find();\r\n\r\n    let mainImgUrl;\r\n    if (result[0]) {\r\n        mainImgUrl = result[0].get('file')._url;\r\n    } else if (fullResult && numOfImgs > 0) {\r\n        mainImgUrl = fullResult[Math.floor(Math.random() * numOfImgs)].get('file')._url;\r\n    } else {\r\n        const parseGan = parseGallery.get('gan');\r\n        const ganLogo = parseGan.get('logo')._url;\r\n        \r\n        mainImgUrl = ganLogo;\r\n    }\r\n\r\n    return (mainImgUrl);\r\n\r\n}\r\n\r\n\r\nexport default getGalleryMainImg;","import './GalleryCard.css'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport getGalleryMainImg from '../../utils/getGalleryMainImg';\r\n\r\nconst GalleryCard = ({gallery}) => {\r\n    const {id, name } = gallery;\r\n    const [mainImg, setMainImg] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function getMainImg() {\r\n            const mainImg = await getGalleryMainImg(id);\r\n            setMainImg(mainImg);\r\n        }\r\n        getMainImg()\r\n    });\r\n\r\n\r\n    return (\r\n        <div className='c-gallery-card'>\r\n            <Card>\r\n                <Link to={'/galleries/'+ id}>\r\n                    {mainImg ? <Card.Img variant='top' src={mainImg}/> : null}\r\n                    <Card.Title className='text-center'>{name}</Card.Title>\r\n                </Link>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GalleryCard;","import Parse from 'parse';\r\n\r\nasync function getGardenGalleries(ganId) {\r\n    const Gan = await new Parse.Query(new Parse.Object.extend('Gan')).get(ganId);\r\n    const galleriesQuery = new Parse.Query(Parse.Object.extend('Gallery'));\r\n    galleriesQuery.equalTo(\"gan\", Gan);\r\n\r\n    const results = await galleriesQuery.find();\r\n\r\n    const galleries = results.map(gallery => {\r\n        return({\r\n            'id':gallery.id,\r\n            'name':gallery.get('title')\r\n        })\r\n    });\r\n\r\n    return (galleries);\r\n}\r\nexport default getGardenGalleries;","import { useContext, useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport './GalleriesPage.css';\r\nimport GalleryCard from '../../components/GalleryCard/GalleryCard';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport getGardenGalleries from '../../utils/getGardenGalleries';\r\nimport getGardenDetails from '../../utils/getGardenDetails';\r\n\r\nconst GalleriesPage = () => {\r\n    const [galleries, setGalleries] = useState([]);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [garden, setGarden] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function getGalleries () {\r\n            const garden = await getGardenDetails(activeUser);\r\n            setGarden(garden);\r\n            const galleries = await getGardenGalleries(garden.id);\r\n            setGalleries(galleries);\r\n        }\r\n\r\n        getGalleries();\r\n    },[]);\r\n\r\n    const galleriesView = galleries ? galleries.map( gallery => {\r\n        return(<Col className='py-2' md={6} lg={3} key={gallery.id}>\r\n            <GalleryCard gallery={gallery}/>\r\n        </Col>)\r\n    }) : null;\r\n\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-galleries\">\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        {garden ? <div className='name'>{garden.name}</div> : null}\r\n                        <h2>הגלריות שלנו</h2>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {garden ? <div className='logo'><img src={garden.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {galleriesView}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GalleriesPage;","import { useContext, useEffect, useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport isEmailValid from '../../utils/isEmailValid';\r\nimport './ContactUsPage.css'\r\n\r\n\r\nconst ContactUsPage = () => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [name, setName] = useState(activeUser ? `${activeUser.fname} ${activeUser.lname}` : '');\r\n    const [email, setEmail] = useState(activeUser ? activeUser.email : '');\r\n    const [subject, setSubject] = useState('');\r\n    const [request, setRequest] = useState('');\r\n    const [useUserInfo, setUseUserInfo] = useState(activeUser ? true : false);\r\n    const [files, setFiles] = useState({});\r\n    const [showEmailError, setShowEmailError] = useState(false);\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n    const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n    \r\n    function sendForm () {\r\n        //send to email via parse...\r\n\r\n        setSubject('');\r\n        setRequest('');\r\n        setFiles({});\r\n        setIsFormSubmitted(true);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (name && isEmailValid(email) && subject && request) {\r\n            setIsFormValid(true);\r\n            setShowEmailError(false);\r\n        } else if (!isEmailValid(email) && email!=='') {\r\n            setShowEmailError(true);\r\n            if (isFormValid) {\r\n                setIsFormValid(false);\r\n            }\r\n        } else if (isEmailValid(email)) {\r\n            setShowEmailError(false);\r\n            if (isFormValid) {\r\n                setIsFormValid(false);\r\n            }\r\n        }\r\n    });\r\n    \r\n    function onSwitchMode() {\r\n        if (!useUserInfo) {\r\n            setName(`${activeUser.fname} ${activeUser.lname}`);\r\n            setEmail(activeUser.email);\r\n            setUseUserInfo(!useUserInfo);\r\n        } else {\r\n            setName('');\r\n            setEmail('');\r\n            setUseUserInfo(!useUserInfo);\r\n        }\r\n    }\r\n\r\n    function onFilesSelect(event) {\r\n        setFiles(event.target.files);\r\n    }\r\n\r\n    let filesNames= '';\r\n    if (files) { \r\n        for (let i =0 ; i < files.length ; i++){\r\n            if (i===0) {\r\n                filesNames += files[i].name.split('.')[0];\r\n            }else {\r\n                filesNames += `, ${files[i].name.split('.')[0]}`;\r\n            }\r\n        }\r\n    }\r\n\r\n    const filesAmount = files ? files.length : 0;\r\n\r\n    if (isFormSubmitted) {\r\n        return(\r\n            <div className=\"p-contact-us success\">\r\n                <h2>פנייתך נשלחה בהצלחה</h2>\r\n                <Button variant='info' onClick={() => {setIsFormSubmitted(false)}} >פנייה נוספת</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-contact-us\">\r\n            <h2>צור קשר</h2>\r\n            <Form>\r\n                <Form.Group controlId=\"formContactUsName\">\r\n                    <Form.Label>שם</Form.Label>\r\n                    {activeUser ? <Form.Check type='switch' variant='warning' id='formContactUsFileSwitch' label={useUserInfo ? 'משתמש בפרטים שלי' : 'השתמש בפרטים שלי'} checked={useUserInfo} onChange={onSwitchMode} /> : null}\r\n                    <Form.Control type=\"text\" value={name} onChange={e => {setName(e.target.value)}}/>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId=\"formContactUsEmail\">\r\n                    <Form.Label>דואר אלקטרוני</Form.Label>\r\n                    <Form.Control type=\"email\" value={email} className={showEmailError ? 'is-invalid' : null} onChange={e => { setEmail(e.target.value) }} />\r\n                    <Form.Control.Feedback type=\"invalid\">כתובת מייל לא תקינה</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formContactUsSubject\">\r\n                    <Form.Label>נושא</Form.Label>\r\n                    <Form.Control type=\"text\" value={subject}  onChange={e => {setSubject(e.target.value)}}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formContactUsRequest\">\r\n                    <Form.Label>תוכן הפניה</Form.Label>\r\n                    <Form.Control as=\"textarea\" value={request}  onChange={e => {setRequest(e.target.value)}}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.File id=\"formContactUsFile\" label={files ? filesNames : 'בחירת קבצים'} data-browse=\"בחירת קבצים\" custom multiple onChange={onFilesSelect}/>\r\n                    <Form.Text className=\"text-muted\">{filesAmount >0 ? `נבחרו ${filesAmount} קבצים` : 'ניתן לבחור מספר קבצים יחד'}</Form.Text>\r\n                </Form.Group>\r\n                <Button variant=\"warning\" type=\"button\" className='w-100' disabled={!isFormValid} onClick={sendForm}>\r\n                    שליחה\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactUsPage;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './ImageCard.css';\r\n\r\nconst ImageCard = ({image, onClick}) => {\r\n\r\n    return (\r\n        <div className='c-image-card'>\r\n            <Card onClick={onClick}>\r\n                {image ? <Card.Img variant=\"top\" src={image.url} /> : null}\r\n                {image.desc ? <Card.Footer>\r\n                        <small className=\"text-muted text-center d-block\">{image.desc}</small>\r\n                </Card.Footer> : null}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageCard;","import React from 'react';\r\nimport { Button, Col, Image, Modal } from 'react-bootstrap';\r\nimport './ImageModal.css'\r\n\r\nconst ImageModal = (props) => {\r\n    const { images, showModal, selectedImage, close, onImageChange } = props;\r\n\r\n    function nextImage() {\r\n        if (selectedImage === images.length - 1) {\r\n            onImageChange(0);\r\n        } else {\r\n            onImageChange(selectedImage + 1);\r\n        }\r\n    }\r\n\r\n    function prevImage() {\r\n        if (selectedImage === 0) {\r\n            onImageChange(images.length - 1);\r\n        } else {\r\n            onImageChange(selectedImage - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='c-image-modal'>\r\n            <Modal size='md' show={showModal} onHide={close} centered>\r\n                {/* <Modal.Header closeButton>{images[selectedImage].desc}</Modal.Header> */}\r\n                <Modal.Body className='p-0 row'>\r\n                    <Col xs={1} className='prev'>\r\n                        <a className='prev' variant='dark' onClick={prevImage}>&#10094;</a>\r\n                        {/* <Button className='prev' variant='dark' onClick={prevImage}>&#10094;</Button> */}\r\n                    </Col>\r\n                    <Col xs={10} className='p-0'>\r\n                        <Image src={images[selectedImage].url} />\r\n                        <Button onClick={close} className='modal-x-button' variant='outline-warning'>X</Button>\r\n                        <div className='modal-image-desc'>{images[selectedImage].desc}</div>\r\n                    </Col>\r\n                    <Col xs={1} className='next'>\r\n                        <a className='next' variant='dark' onClick={nextImage}>&#10095;</a>\r\n                        {/* <Button className='next' variant='dark' onClick={nextImage}>&#10095;</Button> */}\r\n                    </Col>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageModal;","import Parse from 'parse';\r\n\r\nasync function getGalleryImages(galleryId) {\r\n\r\n    const Gallery = await new Parse.Query(new Parse.Object.extend('Gallery')).get(galleryId);\r\n    const imgQuery = new Parse.Query(Parse.Object.extend('Image'));\r\n    imgQuery.equalTo(\"gallery\", Gallery);\r\n\r\n    const results = await imgQuery.find();\r\n\r\n    const images = results.map(image => {\r\n        const desc = image.get('desc') ? image.get('desc') : '';\r\n        const url = image.get('file')._url;\r\n        const id = image.id;\r\n\r\n        return({\r\n            'id':id,\r\n            'desc':desc,\r\n            'url':url\r\n        })\r\n    });\r\n\r\n    return (images);\r\n}\r\nexport default getGalleryImages;","import Parse from 'parse';\r\nimport getGalleryMainImg from './getGalleryMainImg';\r\n\r\nasync function getGalleryDetails(galleryId) {\r\n\r\n    const Gallery = await new Parse.Query(new Parse.Object.extend('Gallery')).get(galleryId);\r\n    const galleryName = Gallery.get('title');\r\n    const galleryMainImg = await getGalleryMainImg(galleryId);\r\n\r\n    return ({'parseGallery':Gallery, 'name':galleryName, 'mainImg': galleryMainImg});\r\n}\r\nexport default getGalleryDetails;","import React, { useState } from 'react';\r\nimport { CardColumns, Container } from 'react-bootstrap';\r\nimport './GalleryPage.css'\r\nimport { useParams } from 'react-router-dom';\r\nimport ImageCard from '../../components/ImageCard/ImageCard';\r\nimport ImageModal from '../../components/ImageModal/ImageModal';\r\nimport getGalleryImages from '../../utils/getGalleryImages';\r\nimport getGalleryDetails from '../../utils/getGalleryDetails';\r\n\r\nconst GalleryPage = () => {\r\n    const [images, setImages] = useState([]);\r\n    const [galleryName, setGalleryName] = useState('');\r\n    const [showImageModal, setShowImageModal] = useState(false);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n    const galleryId = useParams().id;\r\n\r\n    useState(() => {\r\n\r\n        async function getImages (){\r\n            const images = await getGalleryImages(galleryId);\r\n            const name = (await getGalleryDetails(galleryId)).name;\r\n            setImages(images);\r\n            setGalleryName(name);\r\n        }\r\n        \r\n        getImages();\r\n        \r\n    },[])\r\n    \r\n    function onImageSelect (index) {\r\n        setShowImageModal(true);\r\n        setSelectedImage(index);\r\n    }\r\n\r\n    function onImageChange (index){\r\n        setSelectedImage(index);\r\n    }\r\n\r\n    \r\n    const imagesView = images ? images.map((image, index) => <ImageCard image={image} key={image.id} onClick={() => onImageSelect(index)}/>) : null;\r\n\r\n    const modalView = selectedImage !==null ? <ImageModal images={images} showModal={showImageModal}\r\n        selectedImage={selectedImage} close={() => {setShowImageModal(false)}} onImageChange={onImageChange} /> : null;\r\n\r\n\r\n    return (\r\n        <div className='p-gallery'>\r\n            <h2>{galleryName}</h2>\r\n            <Container>\r\n                <CardColumns>\r\n                    {imagesView}\r\n                </CardColumns>\r\n            </Container>\r\n            {modalView}\r\n        </div>\r\n    )\r\n}\r\nexport default GalleryPage;","import './StudyTopicBox.css';\r\nimport React, { useContext } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst StudyTopicBox = ({topic}) => {\r\n    const { headline, content } = topic;\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    \r\n    let editIcon = null, deleteIcon = null;\r\n    if (activeUser.role = 'manager') {\r\n        editIcon = <FontAwesomeIcon className='edit-icon' icon={faEdit} />;\r\n        deleteIcon = <FontAwesomeIcon className='edit-icon' icon={faTrashAlt} />;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='c-study-topic-box mb-4'>\r\n            {deleteIcon}\r\n            {editIcon}\r\n            <Card.Title>{headline}</Card.Title>\r\n            <Card.Text>{content}</Card.Text>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StudyTopicBox;","import Parse from 'parse';\r\nimport getHebrewDate from './getHebrewDate';\r\n\r\nasync function getDafKesherDetails(dafKesherId) {\r\n    const DafKesher = await new Parse.Query(new Parse.Object.extend('DafKesher')).get(dafKesherId);\r\n    const data = DafKesher.get('data');\r\n    const title = DafKesher.get('title');\r\n    const hebDate = getHebrewDate(DafKesher.get('date'));\r\n\r\n\r\n    return ({'parseDafKesher':DafKesher, 'data':data, 'title':title, 'hebDate':hebDate})\r\n}\r\n\r\nexport default getDafKesherDetails;","export default __webpack_public_path__ + \"static/media/book-icon.38b0a9d3.png\";","export default __webpack_public_path__ + \"static/media/message-icon.12cbb3d2.png\";","\r\nfunction getRandomBgColor(props) {\r\n    \r\n    const bgColors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\r\n    const randomBgColor = bgColors[Math.floor(Math.random() * bgColors.length)];\r\n\r\n    return randomBgColor;\r\n}\r\n\r\nexport default getRandomBgColor;","import './MessageBox.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport getRandomBgColor from '../../utils/getRandomBgColor';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\n\r\nconst MessageBox = ({topic}) => {\r\n    const { headline, content } = topic;\r\n    const activeUser = useContext(ActiveUserContext);\r\n    \r\n    const bgColor = getRandomBgColor();\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    let editIcon = null, deleteIcon = null;\r\n    if (activeUser.role === 'manager') {\r\n        editIcon = <FontAwesomeIcon className='edit-icon' icon={faEdit} />;\r\n        deleteIcon = <FontAwesomeIcon className='edit-icon' icon={faTrashAlt} />;\r\n    }    \r\n\r\n    return (\r\n        <Card className='c-message-box m-2' bg={bgColor} text={bgColor === 'light' ? 'dark' : 'white'}>\r\n            <Card.Body>\r\n                {deleteIcon}\r\n                {editIcon}\r\n                <Card.Title>{headline}</Card.Title>\r\n                <Card.Text>{content}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MessageBox;","import './AddMessageBox.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\n\r\nconst AddMessageBox = () => {\r\n    \r\n    const activeUser = useContext(ActiveUserContext);\r\n    \r\n    \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    \r\n    return (\r\n        <Card className='c-add-message-box m-2 text-center' bg={'light'} text={'dark'}>\r\n            <Card.Body>\r\n                <Card.Title>+</Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default AddMessageBox;","import './AddStudyTopicBox.css';\r\nimport React, { useContext } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst AddStudyTopicBox = () => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <div className='c-add-study-topic-box text-center'>\r\n            <Card.Title>+</Card.Title>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddStudyTopicBox;","import './DafKesherPage.css'\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport StudyTopicBox from '../../components/StudyTopicBox/StudyTopicBox';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport getDafKesherDetails from '../../utils/getDafKesherDetails';\r\nimport getGardenDetails from '../../utils/getGardenDetails';\r\nimport bookIcon from '../../images/book-icon.png';\r\nimport messageIcon from '../../images/message-icon.png';\r\nimport MessageBox from '../../components/MessageBox/MessageBox';\r\nimport AddMessageBox from '../../components/MessageBox/AddMessageBox';\r\nimport AddStudyTopicBox from '../../components/StudyTopicBox/AddStudyTopicBox';\r\n\r\nfunction DafKesherPage() {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [data, setData] = useState({});\r\n    const [header, setHeader] = useState({});\r\n    \r\n    const dafKesherId = useParams().id;\r\n    \r\n        \r\n    useEffect(() => {\r\n        async function getData() {\r\n            const dafKesher = await getDafKesherDetails(dafKesherId);\r\n            const gardenDetails = (await getGardenDetails(activeUser));\r\n            const header = {\r\n                'title':dafKesher.title,\r\n                'hebDate':dafKesher.hebDate,\r\n                'logo':gardenDetails.logo,\r\n                'name':gardenDetails.name\r\n            };\r\n            setHeader(header);\r\n            setData(dafKesher.data);\r\n        }\r\n        getData();\r\n    },[]);\r\n\r\n\r\n    const topicsView = data.sdutyTopics ? data.sdutyTopics.map( (topic, index) => \r\n        <div key={index}>\r\n            <StudyTopicBox topic={{'headline':topic.headline, 'content':topic.content}}/>\r\n        </div>\r\n        ) : null;\r\n\r\n    const messagesView = data.messages ? data.messages.map( (message, index) => \r\n        <div key={index}>\r\n            <MessageBox topic={{'headline':message.headline, 'content':message.content}}/>\r\n        </div>\r\n        ) : null;\r\n\r\n    return (\r\n        <div className='p-daf-kesher'>\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        <div className='name'>{header.name}</div>\r\n                        <h2>{`דף קשר ${header.title}`}</h2>\r\n                        <div className='date'>{header.hebDate}</div>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {header.logo ? <div className='logo'><img src={header.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={8} className='mb-3'>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <span>מה למדנו השבוע?</span>\r\n                                <img src={bookIcon} alt=\"book icon\"/>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                {topicsView}\r\n                                {activeUser.role === 'manager' ? <AddStudyTopicBox/> : null}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <div>הודעות</div>\r\n                                <div><img src={messageIcon} alt=\"message icon\"/></div>\r\n                            </Card.Header>\r\n                            {messagesView}\r\n                            {activeUser.role === 'manager' ? <AddMessageBox/> : null}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DafKesherPage;","\r\nfunction getGreeting() {\r\n    const date = new Date();\r\n    const hour = date.getHours();\r\n    \r\n    let greeting;\r\n    if (hour >=4 && hour <=10) {\r\n        greeting = 'בוקר טוב';\r\n    } else if (hour >= 11 && hour <=16) {\r\n        greeting = 'צהריים טובים';\r\n    } else if (hour >= 17 && hour <=20) {\r\n        greeting = 'ערב טוב';\r\n    } else {\r\n        greeting = 'לילה טוב';\r\n    }\r\n    \r\n    return greeting;\r\n}\r\n\r\nexport default getGreeting;","import { Button, Nav, Navbar } from 'react-bootstrap';\r\nimport './TopNavbar.css';\r\nimport logo from '../../images/logo192.png';\r\nimport { useContext } from 'react';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport { useLocation } from 'react-router-dom';\r\nimport getGreeting from '../../utils/getGreeting';\r\n\r\nconst TopNavbar = ({ onLogout }) => {\r\n\r\n  const activeUser = useContext(ActiveUserContext);\r\n\r\n  const path = useLocation().pathname.split('/')[1];\r\n\r\n  const greeting = getGreeting();\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\">\r\n      <Navbar.Brand href=\"#/\" className='ml-2'>\r\n        <img src={logo} alt=\"Digital Garden logo\" className=\"d-inline-block align-top\"/>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className={activeUser ? \"ml-auto\" : \"mr-auto\"}>\r\n          \r\n          { activeUser ?\r\n          <>\r\n            <Nav.Link href=\"#/my-garden\" active={path === 'my-garden' ? true : false}>הגן שלי</Nav.Link>\r\n            <Nav.Link href=\"#/dapey-kesher\" active={path === 'dapey-kesher' ? true : false}>דפי קשר</Nav.Link>\r\n            <Nav.Link href=\"#/galleries\" active={path === 'galleries' ? true : false}>גלריות</Nav.Link>\r\n          </> : null}\r\n\r\n          <Nav.Link href=\"#/contact-us\" active={path === 'contact-us' ? true : false}>צור קשר</Nav.Link>\r\n        </Nav>\r\n        \r\n        { activeUser ?\r\n        <Nav>\r\n          <Navbar.Text>{`${greeting}, ${activeUser.fname}`}</Navbar.Text>\r\n          <Button as='a' variant='' onClick={onLogout}>התנתק</Button>\r\n        </Nav> : null}\r\n\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default TopNavbar;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport MyGardenPage from './pages/MyGardenPage/MyGardenPage';\nimport DapeyKesherPage from './pages/DapeyKesherPage/DapeyKesherPage';\nimport GalleriesPage from './pages/GalleriesPage/GalleriesPage';\nimport ContactUsPage from './pages/ContactUsPage/ContactUsPage';\nimport { useState } from 'react';\nimport ActiveUserContext from './utils/ActiveUserContext';\nimport Parse from 'parse';\nimport UserModel from './model/UserModel';\nimport GalleryPage from './pages/GalleryPage/GalleryPage';\nimport DafKesherPage from './pages/DafKesherPage/DafKesherPage';\nimport TopNavbar from './components/TopNavbar/TopNavbar';\n\nfunction App() {\n  const [activeUser, setActiveUser] = useState(\n    Parse.User.current() ? new UserModel(Parse.User.current()) : null);\n  \n  const handleLogin = (loggedinUser) => {\n    setActiveUser(loggedinUser);\n  }\n\n  const handleLogout = () => {\n    setActiveUser(null);\n    Parse.User.logOut();\n  }\n  \n\n  return (\n    <>\n      <HashRouter>\n        <Switch>\n          <ActiveUserContext.Provider value={activeUser}>\n            <TopNavbar onLogout={handleLogout}/>\n            <Route exact path=\"/\"><HomePage onLogin={handleLogin} /></Route>\n            <Route exact path=\"/my-garden\"><MyGardenPage /></Route>\n            <Route exact path=\"/dapey-kesher\"><DapeyKesherPage /></Route>\n            <Route exact path=\"/dapey-kesher/:id\"><DafKesherPage /></Route>\n            <Route exact path=\"/galleries\"><GalleriesPage /></Route>\n            <Route exact path=\"/galleries/:id\"><GalleryPage /></Route>\n            <Route exact path=\"/contact-us\"><ContactUsPage /></Route>\n          </ActiveUserContext.Provider>\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Parse from \"parse\";\n\nParse.serverURL = 'https://parseapi.back4app.com';\nParse.initialize(\n  'YjX6kib1y4ZL0wYCCXagO161JHCAZNLF8vz04iNh', // This is your Application ID\n  'YYhfXbq4guVCOl4BhV5Jcvfh43NNbDbIpAqI2LzG', // This is your Javascript key\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}