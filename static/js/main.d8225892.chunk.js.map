{"version":3,"sources":["images/logo192.png","model/UserModel.jsx","utils/IsEnterPressed.jsx","utils/isEmailValid.jsx","components/LoginModal/LoginModal.jsx","utils/ActiveUserContext.jsx","utils/addImage.jsx","utils/deleteImage.jsx","utils/addGarden.jsx","utils/signup.jsx","utils/isPasswordValid.jsx","components/SignupModal/SignupModal.jsx","pages/HomePage/HomePage.jsx","utils/getGalleryMainImg.jsx","components/GalleryCard/GalleryCard.jsx","utils/getHebrewDate.jsx","utils/getGardenDapeyKesher.jsx","utils/getGardenDetails.jsx","utils/getGardenGalleries.jsx","components/DafKesherCard/DafKesherCard.jsx","pages/MyGardenPage/MyGardenPage.jsx","components/AddMainCard/AddMainCard.jsx","utils/createNewDafKesher.jsx","utils/updateDafKesherDetails.jsx","utils/createNewGallery.jsx","utils/updateGalleryDetails.jsx","components/MainCardEditorModal/MainCardEditorModal.jsx","utils/deleteDafKesher.jsx","utils/deleteGallery.jsx","utils/updateDafKesherContent.jsx","components/DeleteWarningModal/DeleteWarningModal.jsx","pages/DapeyKesherPage/DapeyKesherPage.jsx","pages/GalleriesPage/GalleriesPage.jsx","pages/ContactUsPage/ContactUsPage.jsx","components/ImageCard/ImageCard.jsx","components/ImageModal/ImageModal.jsx","utils/getGalleryImages.jsx","utils/getGalleryDetails.jsx","components/ImageCard/AddImageCard.jsx","components/AddImage/AddImageModal.jsx","pages/GalleryPage/GalleryPage.jsx","components/StudyTopicBox/StudyTopicBox.jsx","utils/getDafKesherDetails.jsx","utils/getRandomBgColor.jsx","components/MessageBox/MessageBox.jsx","components/MessageBox/AddMessageBox.jsx","components/StudyTopicBox/AddStudyTopicBox.jsx","components/DafKesherEditorModal/DafKesherEditorModal.jsx","pages/DafKesherPage/DafKesherPage.jsx","utils/getGreeting.jsx","components/TopNavbar/TopNavbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserModel","parseUser","this","id","email","get","fname","lname","gardenId","role","isEnterPressed","e","key","isEmailValid","test","LoginModal","props","showModal","showSignupModal","handleCloseLogin","onLogin","useState","setEmail","pwd","setPwd","showError","setShowError","showEmailError","setShowEmailError","cleanFormFields","login","a","Parse","User","logIn","close","ifEnterPressed","event","useEffect","Modal","size","show","onHide","centered","className","Header","Title","Body","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","target","onKeyPress","Feedback","Alert","variant","Footer","Button","onClick","ActiveUserContext","createContext","image","galleryId","Query","Object","extend","parseGallery","Image","myNewImage","set","File","name","save","response","addImage","imageId","then","destroy","error","deleteImage","year","logo","Gan","myNewGarden","addGarden","parseGarden","user","signUp","res","console","log","signup","isPasswordValid","SignupModal","handleCloseSignup","activeUser","useContext","userFname","setUserFname","userLname","setUserLname","userEmail","setUserEmail","userPwd","setUserPwd","gardenName","setGardenName","gardenYear","setGardenYear","parentsEmail","setParentsEmail","parentsFname","setParentsFname","setLogo","logoUrl","setLogoUrl","logoId","setLogoId","showPwdError","setShowPwdError","isFormValid","setIsFormValid","showSignupSpinner","setShowSignupSpinner","showParentsLoginAlert","setShowParentsLoginAlert","garden","isRequierdFieldFull","to","files","_url","logoView","Card","Img","src","Heading","as","Row","Col","disabled","performSignup","split","Text","label","data-browse","accept","custom","multiple","Spinner","animation","aria-hidden","HomePage","showLoginModal","setShowLoginModal","setShowSignupModal","redirectToMyGarden","setRedirectToMyGarden","handleLogin","alt","galleryQuery","query","equalTo","count","numOfImgs","find","fullResult","result","mainImgUrl","Math","floor","random","parseGan","ganLogo","getGalleryMainImg","GalleryCard","gallery","handleEdit","handleDeleteClick","title","mainImg","setMainImg","getMainImg","icon","faEdit","faTrashAlt","unitsNames","tensNames","getHebrewDate","dateObj","monthNum","require","hebrewDate","month","date","HebrewYearName","yearNum","yearArr","taf","parseInt","i","push","length","splice","join","getHebrewYearName","hebrewMonthName","includes","dateNum","dateArr","dateName","getHebrewDateName","ganId","dapeyKesherQuery","descending","results","dapeyKesher","map","dafKesher","getGardenDapeyKesher","ganName","gardenDetails","getGardenDetails","galleriesQuery","galleries","getGardenGalleries","DafKesherCard","hebDate","MyGardenPage","setGarden","setGalleries","setDapeyKesher","getGardenData","dapeyKesherView","index","md","lg","galleriesView","Container","sm","faNewspaper","href","faChevronLeft","faImages","AddMainCard","DafKesher","myNewDafKesher","Date","createNewDafKesher","dafKesherId","updateDafKesherDetails","Gallery","myGallery","createNewGallery","updateGalleryDetails","MainCardEditorModal","modalTitle","data","cardType","closeModal","cleanDataToEdit","setTitle","setDate","onSave","toLocaleString","viewDate","deleteDafKesher","deleteGallery","content","updateDafKesherContent","DeleteWarningModal","fullData","objectType","handleClose","backdrop","keyboard","DapeyKesherPage","showMainCardEditorModal","setShowMainCardEditorModal","showDeleteAlert","setShowDeleteAlert","dafKesherToEdit","setDafKesherToEdit","getDapeyKesher","addDafKesher","GalleriesPage","galleryToEdit","setGalleryToEdit","getGalleries","addGallery","ContactUsPage","setName","subject","setSubject","request","setRequest","useUserInfo","setUseUserInfo","setFiles","filesUrl","setFilesUrl","isFormSubmitted","setIsFormSubmitted","filesArr","values","newFilesUrl","Promise","all","file","filesAmount","filesView","fileUrl","Check","checked","CardColumns","emailjs","send","from_name","from_email","topic","message","file_links","ImageCard","url","ImageModal","images","selectedImage","onImageChange","xs","faChevronRight","imgQuery","desc","getGalleryImages","galleryName","galleryMainImg","getGalleryDetails","AddImageCard","AddImageModal","galleryTitle","setImages","imagesId","setImagesId","imagesUrl","setImagesUrl","params","imagesArr","newImagesId","newImagesUrl","imagesAmount","imagesView","imageUrl","GalleryPage","setGalleryTitle","showImageModal","setShowImageModal","setSelectedImage","showAddImage","setShowAddImage","imageToEdit","setImageToEdit","useParams","getImages","onImageSelect","StudyTopicBox","onDeleteClick","onEditClick","headline","editIcon","getDafKesherDetails","getRandomBgColor","bgColors","MessageBox","bgColor","bg","text","AddMessageBox","AddStudyTopicBox","DafKesherEditorModal","setHeadline","setContent","rows","newData","DafKesherPage","setData","header","setHeader","showEditorModal","setShowEditorModal","contentToEdit","setContentToEdit","getData","handleAddClick","handleEditClick","topicsView","studyTopics","addTopic","messagesView","messages","addMessage","faCommentDots","getGreeting","hour","getHours","TopNavbar","onLogout","path","useLocation","pathname","greeting","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","active","App","current","setActiveUser","init","Provider","logOut","exact","loggedinUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8225892.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo192.f73b2edd.png\";","class UserModel {\r\n    constructor(parseUser){\r\n        this.id = parseUser.id;\r\n        this.email = parseUser.get('username');\r\n        this.fname = parseUser.get('fname');\r\n        this.lname = parseUser.get('lname');\r\n        this.gardenId = parseUser.get('gan').id;\r\n        this.role = parseUser.get('role');\r\n    }\r\n}\r\n\r\nexport default UserModel;","const isEnterPressed = (e) => e.key === 'Enter' ? true : false;\r\n\r\nexport default isEnterPressed;","\r\nfunction isEmailValid(email) {\r\n    return /.+@.+\\..+/.test(email)\r\n}\r\n\r\nexport default isEmailValid;","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Modal, Form, Alert } from 'react-bootstrap';\r\nimport Parse from 'parse';\r\nimport UserModel from '../../model/UserModel';\r\nimport isEnterPressed from '../../utils/IsEnterPressed';\r\nimport { Link } from 'react-router-dom';\r\nimport isEmailValid from '../../utils/isEmailValid';\r\n\r\nfunction LoginModal(props) {\r\n    const {showModal, showSignupModal, handleCloseLogin, onLogin} = props;\r\n    const [email, setEmail] = useState('');\r\n    const [pwd, setPwd] = useState('');\r\n    const [showError, setShowError] = useState(false);\r\n    const [showEmailError, setShowEmailError] = useState(false);\r\n\r\n    function cleanFormFields () {\r\n        setEmail('');\r\n        setPwd('');\r\n        setShowError(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (pwd !== ''){                                //hiding login error when retype password\r\n            setShowError(false)\r\n        }\r\n    },[pwd]);\r\n    useEffect(() => {\r\n        setShowError(false);                            //hiding login error when changing the email\r\n        if (!isEmailValid(email) && email !== '') {     //showing email pattern error if the email is not valid\r\n            setShowEmailError(true);\r\n        } else if (isEmailValid(email)) { \r\n            setShowEmailError(false);\r\n        }\r\n    },[email]);\r\n\r\n    async function login () {\r\n        try {\r\n            const parseUser = await Parse.User.logIn(email, pwd);\r\n            \r\n            // Trigger onLogin event and clean the fields\r\n            onLogin(new UserModel(parseUser));\r\n            handleCloseLogin();\r\n            cleanFormFields();\r\n            \r\n        } catch(error) {                                //showing login error & deleting the pwd field if the login failed\r\n            // show an error alert\r\n            setPwd('');\r\n            setShowError(true);\r\n        }\r\n    }\r\n\r\n    function close () {\r\n        handleCloseLogin();\r\n        cleanFormFields();\r\n    }\r\n\r\n    function ifEnterPressed (event) {                   //detecting if Enter pressed and executing login\r\n        if (isEnterPressed(event) && email){\r\n            login();\r\n        }\r\n    }\r\n\r\n    function showSignup(){\r\n        close();\r\n        showSignupModal();\r\n    }\r\n\r\n    return (\r\n        <Modal size='md' show={showModal} onHide={close} centered className='c-login-modal'>\r\n            <Modal.Header>\r\n                <Modal.Title>כניסה</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId='loginUserName'>\r\n                        <Form.Label>שם משתמש</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"דואר אלקטרוני\" value={email} className={showEmailError ? 'is-invalid' : null}\r\n                            onChange={e => { setEmail(e.target.value) }} onKeyPress={ifEnterPressed} />\r\n                        <Form.Control.Feedback type=\"invalid\">כתובת מייל לא תקינה</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='loginPwd'>\r\n                        <Form.Label>סיסמה</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"סיסמה\" value={pwd}\r\n                            onChange={e => {setPwd(e.target.value)}}  onKeyPress={ifEnterPressed}/>\r\n                    </Form.Group>\r\n                </Form>\r\n                {showError ? <Alert variant=\"danger\">מייל או סיסמה שגויים</Alert> : null}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant='link' className='ml-auto' onClick={showSignup}>עדיין לא רשומים?</Button>\r\n                <Button variant=\"secondary\" onClick={close}>סגירה</Button>\r\n                <Button variant=\"warning\" onClick={login}>כניסה</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default LoginModal;\r\n","import { createContext } from 'react';\r\n\r\nconst ActiveUserContext = createContext(null);\r\n\r\nexport default ActiveUserContext;","import Parse from 'parse';\r\n\r\nasync function addImage(image, galleryId) {\r\n    const parseGallery = await new Parse.Query(new Parse.Object.extend('Gallery')).get(galleryId);\r\n    \r\n    const Image = Parse.Object.extend('Image');\r\n    const myNewImage = new Image();\r\n    \r\n    myNewImage.set('file', new Parse.File(image.name, image));\r\n    \r\n    // myNewImage.set('isPrimary', true);\r\n    myNewImage.set('gallery', parseGallery);\r\n    \r\n    const response = await myNewImage.save();\r\n    \r\n    return response;\r\n}\r\n\r\nexport default addImage;","import Parse from \"parse\";\r\n\r\nasync function deleteImage(imageId) {\r\n\r\n    const Image = Parse.Object.extend('Image');\r\n    const query = new Parse.Query(Image);\r\n\r\n    query.get(imageId).then((image) => {\r\n        image.destroy().then(\r\n            (image) => {\r\n                // console.log('Image destroyed');\r\n            },\r\n            (error) => {\r\n                // console.error('Error while destroying Image: ', error);\r\n            }\r\n\r\n        );\r\n\r\n        \r\n        \r\n    });\r\n    return '';\r\n}\r\n\r\nexport default deleteImage;","import Parse from 'parse';\r\n\r\nasync function addGarden(name, year, logo) {\r\n    const Gan = Parse.Object.extend('Gan');\r\n    const myNewGarden = new Gan();\r\n\r\n    myNewGarden.set('name', name);\r\n    myNewGarden.set('year', year);\r\n    myNewGarden.set('logo', new Parse.File(logo.name, logo));\r\n    \r\n    const response = await myNewGarden.save();\r\n    \r\n    return response;\r\n}\r\n\r\nexport default addGarden;","import Parse from 'parse';\r\n\r\nasync function signup(email, pwd, role, fname, lname, gardenId) {\r\n    const parseGarden = await new Parse.Query(new Parse.Object.extend('Gan')).get(gardenId);\r\n    const user = new Parse.User()    \r\n\r\n    user.set('username', email);\r\n    user.set('email', email);\r\n    user.set('role', 'manager');\r\n    user.set('gan', parseGarden);\r\n    user.set('fname', fname);\r\n    role === 'manager' && user.set('lname', lname);\r\n    user.set('password', pwd);\r\n    \r\n    const res = await user.signUp();\r\n    console.log(res);\r\n    return res;\r\n}\r\n\r\nexport default signup;","\r\nfunction isPasswordValid(pwd) {\r\n    return /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/.test(pwd)\r\n}\r\n\r\nexport default isPasswordValid;","import { useContext, useEffect, useState } from 'react';\r\nimport { Button, Card, Form, Spinner, Col, Modal, Alert, Row } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport addImage from '../../utils/addImage';\r\nimport deleteImage from '../../utils/deleteImage';\r\nimport isEmailValid from '../../utils/isEmailValid';\r\nimport { Redirect } from 'react-router-dom';\r\nimport addGarden from '../../utils/addGarden';\r\nimport signup from '../../utils/signup';\r\nimport Parse from 'parse';\r\nimport UserModel from '../../model/UserModel';\r\nimport isPasswordValid from '../../utils/isPasswordValid';\r\n\r\n\r\nconst SignupModal = ({showModal, onLogin, handleCloseSignup}) => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [userFname, setUserFname] = useState('');\r\n    const [userLname, setUserLname] = useState('');\r\n    const [userEmail, setUserEmail] = useState('');\r\n    const [userPwd, setUserPwd] = useState('');\r\n    const [gardenName, setGardenName] = useState('');\r\n    const [gardenYear, setGardenYear] = useState('');\r\n    const [parentsEmail, setParentsEmail] = useState('');\r\n    const [parentsFname, setParentsFname] = useState('');\r\n    const [logo, setLogo] = useState('');\r\n    const [logoUrl, setLogoUrl] = useState('');\r\n    const [logoId, setLogoId] = useState('');\r\n    const [showEmailError, setShowEmailError] = useState(false);\r\n    const [showPwdError, setShowPwdError] = useState(false);\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n    const [showSignupSpinner, setShowSignupSpinner] = useState(false);\r\n    const [showParentsLoginAlert, setShowParentsLoginAlert] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        if (isRequierdFieldFull() && isEmailValid(userEmail) && isPasswordValid(userPwd)) {     // setting the form as valid - if all required fields filled &\r\n            setIsFormValid(true);                                                               //      email and pwd are valid\r\n            setShowEmailError(false);\r\n            setShowPwdError(false)\r\n        } else {\r\n            \r\n            if (!isEmailValid(userEmail) && userEmail !=='') {                  // showing error if the email is not valid\r\n                setShowEmailError(true);\r\n                if (isFormValid) {\r\n                    setIsFormValid(false);\r\n                }\r\n            } else if (isEmailValid(userEmail)) {\r\n                setShowEmailError(false);\r\n                if (isFormValid) {\r\n                    setIsFormValid(false);\r\n                }\r\n            }\r\n            \r\n            if (!isPasswordValid(userPwd) && userPwd !=='') {                   // showing error if the pwd is not valid\r\n                setShowPwdError(true);\r\n                if (isFormValid) {\r\n                    setIsFormValid(false);\r\n                }\r\n            } else if (isPasswordValid(userPwd)) {\r\n                setShowPwdError(false);\r\n                if (isFormValid) {\r\n                    setIsFormValid(false);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    async function login () {\r\n        try {\r\n            const parseUser = await Parse.User.logIn(userEmail, userPwd);   // performing login to the app\r\n            \r\n            onLogin(new UserModel(parseUser));                              // Trigger onLogin event on HomePage and cleaning the fields\r\n            close();\r\n            \r\n        } catch(error) {\r\n            console.log('error while login')\r\n        }\r\n    }\r\n\r\n    function close () {\r\n        handleCloseSignup();\r\n        logoId && deleteImage(logoId);                                      // deleting the temporary logo file after leaving the signup\r\n        cleanFields();\r\n    }\r\n    \r\n    function isRequierdFieldFull() {\r\n        if (userFname && userLname && userEmail && userPwd \r\n            && gardenName && gardenYear && parentsEmail && parentsFname) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    function cleanFields() {\r\n        setUserFname('');\r\n        setUserLname('');\r\n        setUserEmail('');\r\n        setUserPwd('');\r\n        setGardenName('');\r\n        setGardenYear('');\r\n        setParentsEmail('');\r\n        setParentsFname('');\r\n        setLogo('');\r\n        setLogoUrl('');\r\n        setShowSignupSpinner(false);\r\n        setShowParentsLoginAlert(false);\r\n    }\r\n\r\n    function signupClicked(){                                               // showing alert with parents login details after clicking signup\r\n        setShowSignupSpinner(true);\r\n        setShowParentsLoginAlert(true);\r\n    }\r\n\r\n    async function performSignup () {\r\n        //creat garden in parse\r\n        const garden = await addGarden(gardenName, gardenYear,logo);\r\n\r\n        //create parent in parse\r\n        await signup(parentsEmail, 'Dd123456', 'parent', parentsFname, '', garden.id);\r\n\r\n        //create manager in parse\r\n        await signup(userEmail, userPwd, 'manager', userFname, userFname, garden.id);\r\n\r\n        //login with the user\r\n        login();\r\n    }\r\n    \r\n    if (activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    \r\n    async function onFileSelect(event) {                                    // uploading temporary file to show preview\r\n        const logo = event.target.files[0];\r\n        setLogo(logo);\r\n        const res = await addImage(logo, 'fe0qzAHNtH');\r\n        setLogoUrl(res.get('file')._url);\r\n        setLogoId(res.id);\r\n    }\r\n\r\n    const logoView = logoUrl ?\r\n        <Card>\r\n            <Card.Img src={logoUrl}/>\r\n        </Card>\r\n    : null;\r\n\r\n    return (\r\n        <Modal size='md' show={showModal} onHide={close} centered className=\"c-signup-modal\">\r\n            <Modal.Header>\r\n                <Modal.Title>הרשמה לאתר הגן הדיגיטלי</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Alert show={showParentsLoginAlert} variant=\"info\">\r\n                    <Alert.Heading as='h5'>פרטי התחברות להורים</Alert.Heading>\r\n                    <hr />\r\n                    <Form as={Row}>\r\n                    <Form.Group as={Col} className='mb-0'>\r\n                        <Form.Label>שם משתמש</Form.Label>\r\n                        <Form.Control placeholder={parentsEmail} disabled />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} className='mb-0'>\r\n                        <Form.Label>סיסמה</Form.Label>\r\n                        <Form.Control placeholder=\"Dd123456\" disabled />\r\n                    </Form.Group>\r\n                    </Form>\r\n                    <hr />\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <Button onClick={() => {setShowParentsLoginAlert(false); performSignup()}} variant=\"outline-info\">\r\n                            רשמתי את הפרטים\r\n                        </Button>\r\n                    </div>\r\n                </Alert>\r\n                <Form>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formUserFname\">\r\n                            <Form.Label>שם</Form.Label>\r\n                            <Form.Control type=\"text\" value={userFname} onChange={e => {setUserFname(e.target.value)}}/>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formUserLname\">\r\n                            <Form.Label>משפחה</Form.Label>\r\n                            <Form.Control type=\"text\" value={userLname} onChange={e => {setUserLname(e.target.value)}}/>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    \r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formUserEmail\">\r\n                            <Form.Label>דואר אלקטרוני</Form.Label>              {/* onChanging this input it set the value of parentsEmail */}\r\n                            <Form.Control type=\"email\" value={userEmail} className={showEmailError ? 'is-invalid' : null} \r\n                                onChange={e => { setUserEmail(e.target.value); setParentsEmail(`horim@${e.target.value.split('@')[0]}.com`) }} />\r\n                            <Form.Control.Feedback type=\"invalid\">כתובת מייל לא תקינה</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formUserPwd\">\r\n                            <Form.Label>סיסמה</Form.Label>\r\n                            <Form.Control type=\"password\" value={userPwd} className={showPwdError ? 'is-invalid' : null} \r\n                            onChange={e => { setUserPwd(e.target.value) }} />\r\n                            <Form.Text className=\"text-muted\">סיסמה צריכה להיות מעל 8 תווים ולהכיל: אות גדולה, אות קטנה ומספר.</Form.Text>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    \r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGardenName\">\r\n                            <Form.Label>שם הגן</Form.Label>                     {/* onChanging this input it set the value of parentsFname */}\r\n                            <Form.Control type=\"text\" value={gardenName} \r\n                                onChange={e => {setGardenName(e.target.value); setParentsFname(`הורי ${e.target.value}`)}}/>\r\n                            <Form.Text className=\"text-muted\">לדוגמה: גן השושנים</Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGardenYear\">\r\n                            <Form.Label>שנת לימודים</Form.Label>\r\n                            <Form.Control type=\"text\" value={gardenYear} onChange={e => {setGardenYear(e.target.value)}}/>\r\n                            <Form.Text className=\"text-muted\">לדוגמה: תשפ\"א</Form.Text>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    \r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formParentsEmail\">\r\n                            <Form.Label>שם משתמש להורי הגן</Form.Label>\r\n                            <Form.Control type=\"text\" value={parentsEmail} onChange={e => {setParentsEmail(e.target.value)}}/>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formParentsFname\">\r\n                            <Form.Label>שם חשבון הורי הגן</Form.Label>\r\n                            <Form.Control type=\"text\" value={parentsFname} onChange={e => {setParentsFname(e.target.value)}}/>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <Form.File id=\"formGardenLogo\" label='' data-browse=\"בחירת לוגו\" accept=\"image/*\" custom multiple onChange={onFileSelect}/>\r\n                            <Form.Text className=\"text-muted\">{logo ? 'נבחרה תמונה' : 'מומלץ לבחור לוגו שיופיע בדפי הקשר'}</Form.Text>\r\n                        </Form.Group>\r\n                        {logo &&\r\n                            <Form.Group as={Col}>\r\n                                {logoView}\r\n                                {logo && logoView === null && \r\n                                        <div className='images-spinner row justify-content-center mt-3'>\r\n                                            <Spinner animation=\"border\" variant=\"warning\" />\r\n                                        </div>\r\n                                }\r\n                            </Form.Group>\r\n                        }\r\n                    </Form.Row>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer className='flex-nowrap'>\r\n                <Button variant=\"secondary\" className='w-50' onClick={close} disabled={showSignupSpinner}>סגירה</Button>\r\n                <Button variant=\"warning\" className='w-50' type=\"button\" disabled={!isFormValid} onClick={signupClicked}>\r\n                    <span className={showSignupSpinner && 'sr-only'}>הרשמה</span>\r\n                    {showSignupSpinner &&<Spinner\r\n                        as=\"span\"\r\n                        animation=\"border\"\r\n                        size=\"sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                        />}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SignupModal;","import './HomePage.css'\r\nimport logo from '../../images/logo192.png'\r\nimport { Button } from 'react-bootstrap';\r\nimport { useContext, useState } from 'react';\r\nimport LoginModal from '../../components/LoginModal/LoginModal';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport SignupModal from '../../components/SignupModal/SignupModal';\r\n\r\nconst HomePage = (props) => {\r\n    const [showLoginModal, setShowLoginModal] = useState(false);\r\n    const [showSignupModal, setShowSignupModal] = useState(false);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [redirectToMyGarden, setRedirectToMyGarden] = useState(activeUser ? true : false);\r\n    const { onLogin } = props;\r\n\r\n    function handleLogin(user) {\r\n        onLogin(user);\r\n        setRedirectToMyGarden(true);\r\n    }\r\n    \r\n    function handleCloseLogin() {\r\n        setShowLoginModal(false);\r\n    }\r\n    function handleCloseSignup() {\r\n        setShowSignupModal(false);\r\n    }\r\n    \r\n    if (redirectToMyGarden) {\r\n        return <Redirect to=\"my-garden\"/>;\r\n    }\r\n    return (\r\n        <div className=\"p-home\">\r\n            <div className='main-content'>\r\n                <div className='logo'>\r\n                    <img className='logo-img' src={logo} alt=\"logo\"/>\r\n                </div>\r\n                <div className='main-text'>\r\n                    <div className='text'>\r\n                        <h2>הגן הדיגיטלי</h2>\r\n                        <h5>הקשר שלך עם ההורים</h5>\r\n                        <h5>נראה אחרת!</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='buttons'>\r\n                <Button variant=\"outline-warning\" size='lg' onClick={() => { setShowLoginModal(true) }}>כניסה</Button>{' '}\r\n                <Button variant=\"warning\" size='lg' onClick={() => { setShowSignupModal(true) }}>הרשמה</Button>\r\n            </div>\r\n            <LoginModal showModal={showLoginModal} showSignupModal={() => {setShowSignupModal(true)}} \r\n                handleCloseLogin={handleCloseLogin} onLogin={handleLogin}/>\r\n            <SignupModal showModal={showSignupModal} handleCloseSignup={handleCloseSignup} onLogin={handleLogin} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import Parse from 'parse';\r\n\r\n\r\nasync function getGalleryMainImg(galleryId) {\r\n    \r\n    const galleryQuery = new Parse.Query(Parse.Object.extend('Gallery'));\r\n    const parseGallery = await galleryQuery.get(galleryId);\r\n    \r\n    const query = new Parse.Query(Parse.Object.extend('Image'));\r\n    query.equalTo('gallery', parseGallery);\r\n    const numOfImgs = await query.count();                                  // saving the amount of photos in the gallery\r\n    const fullResult = await query.find();                                  // saving all the images of the gallery\r\n    query.equalTo('isPrimary', true);\r\n    const result = await query.find();                                      // finding the primary image of the gallery\r\n\r\n    let mainImgUrl;\r\n    if (result[0]) {\r\n        mainImgUrl = result[0].get('file')._url;                            // if primary image of the gallery found - saving its url\r\n    } else if (fullResult && numOfImgs > 0) {                               // if no primary image of the gallery found & images existing - saving random url\r\n        mainImgUrl = fullResult[Math.floor(Math.random() * numOfImgs)].get('file')._url;\r\n    } else {\r\n        const parseGan = parseGallery.get('gan');                           // if no primary image of the gallery found & no images existing - use garden logo\r\n        const ganLogo = parseGan.get('logo')._url;\r\n        \r\n        mainImgUrl = ganLogo;\r\n    }\r\n\r\n    return (mainImgUrl);\r\n\r\n}\r\n\r\n\r\nexport default getGalleryMainImg;","import './GalleryCard.css'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport getGalleryMainImg from '../../utils/getGalleryMainImg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst GalleryCard = ({gallery, handleEdit, handleDeleteClick, activeUser}) => {\r\n    const {id, title } = gallery;\r\n    const [mainImg, setMainImg] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function getMainImg() {\r\n            const mainImg = await getGalleryMainImg(id);\r\n            setMainImg(mainImg);\r\n        }\r\n        getMainImg();\r\n    },[]);\r\n\r\n\r\n    return (\r\n        <div className='c-gallery-card'>\r\n            <Card>\r\n                <Link to={'/galleries/'+ id}>\r\n                    {mainImg ? <Card.Img variant='top' src={mainImg}/> : null}\r\n                    <Card.Title className='text-center'>{title}</Card.Title>\r\n                </Link>\r\n                {activeUser && activeUser.role === 'manager' && handleEdit &&       //showing edit icons only to garden owner\r\n                    <Card.Footer>\r\n                        <FontAwesomeIcon className='edit-icon' onClick={() => {handleEdit(gallery)}} icon={faEdit}/>\r\n                        <FontAwesomeIcon className='delete-icon' onClick={() => {handleDeleteClick(gallery)}} icon={faTrashAlt}/>\r\n                    </Card.Footer>\r\n                }\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GalleryCard;","const unitsNames = ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ז', 'ח', 'ט'];       // setting array of units for GIMATRIA\r\nconst tensNames = ['י', 'כ', 'ל', 'מ', 'נ', 'ס', 'ע', 'פ', 'צ'];        // setting array of tens for GIMATRIA\r\n\r\n\r\n// this function checking if the hebrew year is leap year\r\nfunction isLeapYear(year) {\r\n    const restForLeapYears = [0, 3, 6, 8, 11, 14, 17];\r\n    return (restForLeapYears.includes(year % 19));\r\n}\r\n\r\n// this function returns the hebrew year in hebrew letters\r\nfunction getHebrewYearName(yearNum) {\r\n\r\n    let year = yearNum % 1000;                                  // droping the thousands\r\n    let yearArr = [];\r\n    const taf = parseInt(year / 400);                           // dividing the Hundreds by 400, 300, 200, 100 and push the correct letter to the array\r\n    for (let i = 0; i < taf ; i++) {\r\n    yearArr.push('ת');\r\n    }\r\n    year = year % 400;\r\n    parseInt(year / 300) !== 0 && yearArr.push('ש');\r\n    year = year % 300;\r\n    parseInt(year / 200) !== 0 && yearArr.push('ר');\r\n    year = year % 200;\r\n    parseInt(year / 100) !== 0 && yearArr.push('ק');\r\n    year = year % 100;\r\n    \r\n    parseInt(year / 10) !== 0 && yearArr.push(tensNames[parseInt(year / 10) - 1]);      // calculating the tens & untits GIMATRIA\r\n    (year % 10) !== 0 && yearArr.push(unitsNames[year % 10 - 1]);\r\n\r\n    yearArr.length > 1 ? yearArr.splice(-1, 0, '\"') : yearArr.push(\"'\");    // adding QUOTATION MARK before the last letter, or APOSTROPHE when only 1 letter\r\n\r\n    const yearName = yearArr.join('');                                      // convertin the array to string\r\n\r\n    return(yearName)\r\n}\r\n\r\nfunction getHebrewMonthName(monthNum, yearNum) {\r\n    // setting array of hebrew months names for normal and leap year\r\n    const monthNamesOfNormalYear = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\r\n    const monthNamesOfLeapYear = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א', 'אדר ב', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\r\n    const monthName = isLeapYear(yearNum) ? monthNamesOfLeapYear[monthNum -1] : monthNamesOfNormalYear[monthNum -1];\r\n\r\n    return monthName;\r\n}\r\n\r\nfunction getHebrewDateName(dateNum) {\r\n    let dateArr = [];\r\n    parseInt(dateNum / 10) !== 0 && dateArr.push(tensNames[parseInt(dateNum / 10) - 1]);      // calculating the tens & untits GIMATRIA\r\n    (dateNum % 10) !== 0 && dateArr.push(unitsNames[dateNum % 10 - 1]);\r\n\r\n    dateArr.length > 1 ? dateArr.splice(-1, 0, '\"') : dateArr.push(\"'\");    // adding QUOTATION MARK before the last letter, or APOSTROPHE when only 1 letter\r\n\r\n    let dateName = dateArr.join('');                                        // convertin the array to string\r\n\r\n    if (dateName === 'י\"ה') {                                               // handling exeptions for ט\"ו & ט\"ז\r\n        dateName = 'ט\"ו'\r\n    } else if (dateName === 'י\"ו') {\r\n        dateName = 'ט\"ז'\r\n    }\r\n\r\n    return(dateName)\r\n}\r\n\r\nfunction getHebrewDate(dateObj) {\r\n    const hebrewDate = require('hebrew-date');\r\n    const { year, month, date } = hebrewDate(dateObj);\r\n    \r\n    const HebrewYearName = getHebrewYearName(year);\r\n    const hebrewMonthName = getHebrewMonthName(month, year);\r\n    const hebrewDateName = getHebrewDateName(date);\r\n    const hebrewDateStr = hebrewDateName + ' ' + hebrewMonthName + ' ' + HebrewYearName;\r\n\r\n    return (hebrewDateStr);\r\n}\r\n\r\nexport default getHebrewDate;","import Parse from 'parse';\r\nimport getHebrewDate from './getHebrewDate';\r\n\r\nasync function getGardenDapeyKesher(ganId) {\r\n\r\n    const Gan = await new Parse.Query(new Parse.Object.extend('Gan')).get(ganId);\r\n    const dapeyKesherQuery = new Parse.Query(Parse.Object.extend('DafKesher'));\r\n    dapeyKesherQuery.equalTo(\"gan\", Gan);\r\n    dapeyKesherQuery.descending(\"date\");\r\n\r\n    const results = await dapeyKesherQuery.find();\r\n\r\n    const dapeyKesher = results.map(dafKesher => {\r\n        return({\r\n            'id':dafKesher.id,\r\n            'title': dafKesher.get('title'),\r\n            'date':dafKesher.get('date'),\r\n            'hebDate':getHebrewDate(dafKesher.get('date'))\r\n        })\r\n    });\r\n\r\n    return (dapeyKesher);\r\n}\r\nexport default getGardenDapeyKesher;","import Parse from 'parse';\r\n\r\nasync function getGardenDetails(activeUser) {\r\n    const parseUser = await new Parse.Query(new Parse.User()).get(activeUser.id);\r\n    const parseGan = await new Parse.Query(new Parse.Object.extend('Gan')).get(parseUser.get('gan').id);\r\n    const ganName = parseGan.get('name');\r\n    const ganLogo = parseGan.get('logo')._url;\r\n\r\n    const gardenDetails = {\r\n        'parseGarden':parseGan,\r\n        'id':parseGan.id,\r\n        'name':ganName,\r\n        'logo':ganLogo\r\n    }\r\n    return (gardenDetails);\r\n}\r\n\r\nexport default getGardenDetails;","import Parse from 'parse';\r\n\r\nasync function getGardenGalleries(ganId) {\r\n    const Gan = await new Parse.Query(new Parse.Object.extend('Gan')).get(ganId);\r\n    const galleriesQuery = new Parse.Query(Parse.Object.extend('Gallery'));\r\n    galleriesQuery.equalTo(\"gan\", Gan);\r\n\r\n    const results = await galleriesQuery.find();\r\n\r\n    const galleries = results.map(gallery => {\r\n        return({\r\n            'id':gallery.id,\r\n            'title':gallery.get('title')\r\n        })\r\n    });\r\n\r\n    return (galleries);\r\n}\r\nexport default getGardenGalleries;","import './DafKesherCard.css'\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DafKesherCard = ({dafKesher, handleEdit, handleDeleteClick, activeUser}) => {\r\n    const { id, title, hebDate} = dafKesher;\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className='c-daf-kesher-card'>\r\n            <Card>\r\n                <Link to={'/dapey-kesher/' + id}>\r\n                    <Card.Title className='text-center'>{title}</Card.Title>\r\n                    <Card.Text className='text-center'>{hebDate}</Card.Text>\r\n                </Link>\r\n                {activeUser && activeUser.role === 'manager' && handleEdit &&\r\n                    <Card.Footer>\r\n                        <FontAwesomeIcon className='edit-icon' onClick={() => {handleEdit(dafKesher)}} icon={faEdit}/>\r\n                        <FontAwesomeIcon className='delete-icon' onClick={() => {handleDeleteClick(dafKesher)}} icon={faTrashAlt}/>\r\n                    </Card.Footer>\r\n                }\r\n            </Card>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DafKesherCard;","import { useContext, useEffect, useState } from 'react'\r\nimport { Card, Col, Container, Row, Spinner } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport ActiveUserContext from '../../utils/ActiveUserContext'\r\nimport GalleryCard from '../../components/GalleryCard/GalleryCard';\r\nimport getGardenDapeyKesher from '../../utils/getGardenDapeyKesher'\r\nimport getGardenDetails from '../../utils/getGardenDetails'\r\nimport getGardenGalleries from '../../utils/getGardenGalleries'\r\nimport './MyGardenPage.css'\r\nimport DafKesherCard from '../../components/DafKesherCard/DafKesherCard';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft, faImages, faNewspaper } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst MyGardenPage = () => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [garden, setGarden] = useState('');\r\n    const [galleries, setGalleries] = useState([]);\r\n    const [dapeyKesher, setDapeyKesher] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getGardenData() {\r\n            const garden = await getGardenDetails(activeUser);              // getting the garden data Asynchronously from the database\r\n            const dapeyKesher = await getGardenDapeyKesher(garden.id);      // getting the dapeyKesher and galleries details Asynchronously from the database\r\n            const galleries = await getGardenGalleries(garden.id);\r\n            setDapeyKesher(dapeyKesher);\r\n            setGalleries(galleries);\r\n            setGarden(garden);\r\n        }\r\n        getGardenData();\r\n    },[garden]);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const dapeyKesherView = dapeyKesher ? dapeyKesher.map((dafKesher, index) => {\r\n        \r\n        if (index < 6) {\r\n            return (\r\n                <Col className='py-2' md={12} lg={6} key={dafKesher.id}>\r\n                    <DafKesherCard dafKesher={dafKesher} activeUser={activeUser}/>\r\n                </Col>\r\n            )}\r\n    }) : null;\r\n\r\n    const galleriesView = galleries ? galleries.map((gallery, index) => {\r\n        \r\n        if (index < 4) {\r\n            return (\r\n                <Col className='py-2' md={12} lg={6} key={gallery.id}>\r\n                    <GalleryCard gallery={gallery} activeUser={activeUser}/>\r\n                </Col>\r\n            )}\r\n    }) : null;\r\n\r\n    if (!garden) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-my-gan\">\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        {garden ? <h2 className='name'>{garden.name}</h2> : null}\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {garden ? <div className='logo'><img src={garden.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} className='mb-3'>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <span>דפי קשר</span>\r\n                                <FontAwesomeIcon icon={faNewspaper}/>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    {dapeyKesherView}\r\n                                </Row>\r\n                            </Card.Body>\r\n                            <a href='#/dapey-kesher'>\r\n                                <Card.Footer className='text-center'>\r\n                                    <FontAwesomeIcon icon={faChevronLeft}/>\r\n                                </Card.Footer>\r\n                            </a>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6} className='mb-3'>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <span>גלריות</span>\r\n                                <FontAwesomeIcon icon={faImages}/>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    {galleriesView}\r\n                                </Row>\r\n                            </Card.Body>\r\n                            <a href='#/galleries'>\r\n                                <Card.Footer className='text-center'>\r\n                                <FontAwesomeIcon icon={faChevronLeft}/>\r\n                                </Card.Footer>\r\n                            </a>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyGardenPage;","import './AddMainCard.css'\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst AddMainCard = (props) => {\r\n\r\n    const {onClick} = props;\r\n\r\n    return (\r\n        <div className='c-add-main-card'>\r\n            <Card onClick={onClick}>\r\n                <Card.Title className='text-center'>+</Card.Title>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddMainCard;","import Parse from \"parse\";\r\n\r\nasync function createNewDafKesher(parseGarden, title, date) {\r\n\r\n    const DafKesher = Parse.Object.extend('DafKesher');\r\n    const myNewDafKesher = new DafKesher();\r\n\r\n    myNewDafKesher.set('title',title);\r\n    myNewDafKesher.set('gan', parseGarden);\r\n    myNewDafKesher.set('date', new Date(date));\r\n    myNewDafKesher.set('data', {\"studyTopics\":[], \"messages\":[]});\r\n\r\n    myNewDafKesher.save().then(\r\n    (result) => {\r\n        // console.log('DafKesher created', result);\r\n    },\r\n    (error) => {\r\n        // console.error('Error while creating DafKesher: ', error);\r\n    }\r\n    );\r\n    \r\n    return '';\r\n}\r\n\r\nexport default createNewDafKesher;","import Parse from \"parse\";\r\n\r\nasync function updateDafKesherDetails(dafKesherId, title, date) {\r\n\r\n    const DafKesher = Parse.Object.extend('DafKesher');\r\n    const query = new Parse.Query(DafKesher);\r\n\r\n    query.get(dafKesherId).then((dafKesher) => {\r\n        dafKesher.set('title', title);\r\n        dafKesher.set('date', new Date(date));\r\n        dafKesher.save().then(\r\n            (result) => {\r\n                // console.log('DafKesher updated');\r\n            },\r\n            (error) => {\r\n                // console.error('Error while updating DafKesher: ', error);\r\n            }\r\n\r\n        );\r\n\r\n        \r\n        \r\n    });\r\n    return '';\r\n}\r\n\r\nexport default updateDafKesherDetails;","import Parse from \"parse\";\r\n\r\nasync function createNewGallery(parseGarden, title) {\r\n\r\n    const Gallery = Parse.Object.extend('Gallery');\r\n    const myGallery = new Gallery();\r\n\r\n    myGallery.set('title',title);\r\n    myGallery.set('gan', parseGarden);\r\n\r\n    myGallery.save().then(\r\n    (result) => {\r\n        // console.log('Gallery created', result);\r\n    },\r\n    (error) => {\r\n        // console.error('Error while creating Gallery: ', error);\r\n    }\r\n    );\r\n    \r\n    return '';\r\n}\r\n\r\nexport default createNewGallery;","import Parse from \"parse\";\r\n\r\nasync function updateGalleryDetails(galleryId, title, date) {\r\n\r\n    const Gallery = Parse.Object.extend('Gallery');\r\n    const query = new Parse.Query(Gallery);\r\n\r\n    query.get(galleryId).then((gallery) => {\r\n        gallery.set('title', title);\r\n        gallery.save().then(\r\n            (result) => {\r\n                // console.log('Gallery updated');\r\n            },\r\n            (error) => {\r\n                // console.error('Error while updating Gallery: ', error);\r\n            }\r\n\r\n        );\r\n\r\n        \r\n        \r\n    });\r\n    return '';\r\n}\r\n\r\nexport default updateGalleryDetails;","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Modal, Form, Alert } from 'react-bootstrap';\r\nimport isEnterPressed from '../../utils/IsEnterPressed';\r\nimport createNewDafKesher from '../../utils/createNewDafKesher';\r\nimport updateDafKesherDetails from '../../utils/updateDafKesherDetails';\r\nimport createNewGallery from '../../utils/createNewGallery';\r\nimport updateGalleryDetails from '../../utils/updateGalleryDetails';\r\n\r\nconst MainCardEditorModal = (props) => {\r\n    const {data, cardType, parseGarden, showModal, closeModal, cleanDataToEdit} = props;\r\n    const [title, setTitle] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [showError, setShowError] = useState(false);\r\n    \r\n    useEffect(() => { \r\n        if (typeof data === 'object') {                     //if editing existing content - filling the fields with the original data \r\n            if (cardType === 'dafKesher') {\r\n                setTitle(data.title);\r\n\r\n                const date = data.date.toLocaleString().split('.');                             //converting dafKesher date to simple format \r\n                const viewDate = `${date[2].split(',')[0]}-${date[1].length === 1 ? '0' + \r\n                    date[1] : date[1]}-${date[0].length === 1 ? '0' + date[0] : date[0]}`;\r\n                setDate(viewDate);\r\n            } else if (cardType === 'gallery') {\r\n                setTitle(data.title);\r\n            }\r\n        } else {\r\n            setTitle('');\r\n            setDate('');\r\n        }\r\n    }, [data]);\r\n    \r\n    function close () {\r\n        setTitle('');\r\n        setDate('');        \r\n        closeModal();\r\n        setShowError(false);\r\n        cleanDataToEdit();\r\n    }\r\n\r\n    function onSave() {\r\n        if (cardType === 'dafKesher') {                         //detecting the type of Card (dafKesher/gallery)\r\n            if (!(title && date)) {\r\n                setShowError(true);\r\n            } else if (!data) {                                 //if adding new content - creating new row in the database\r\n                createNewDafKesher(parseGarden, title, date);\r\n                close()\r\n            } else {                                            //if updating existing content - updating the data in the database\r\n                updateDafKesherDetails(data.id, title, date);\r\n                close();\r\n            }\r\n        } else if (cardType === 'gallery') {\r\n            if (!title) {\r\n                setShowError(true);\r\n            } else if (!data) {\r\n                createNewGallery(parseGarden, title);\r\n                close()\r\n            } else {\r\n                updateGalleryDetails(data.id, title);\r\n                close();\r\n            }\r\n        }\r\n    }\r\n\r\n    function ifEnterPressed (event) {                           //detecting if Enter pressed - and executing login if all fields that required are filled\r\n        if (cardType === 'dafKesher') {\r\n            if (isEnterPressed(event) && title && date) {\r\n                onSave();\r\n            }\r\n        } else if (cardType === 'gallery') {\r\n            if (isEnterPressed(event) && title) {\r\n                onSave();\r\n            }\r\n        }\r\n    }\r\n\r\n    let modalTitle;                                             //setting the modal title depending on the situation (add/edit + dafKesher/gallery)\r\n    if (cardType === 'dafKesher') {\r\n        modalTitle = data ? 'עריכת פרטי דף קשר' : 'יצירת דף קשר חדש';\r\n    } else if (cardType === 'gallery') {\r\n        modalTitle = data ? 'עריכת פרטי גלריה' : 'יצירת גלריה חדשה';\r\n    }\r\n\r\n    return (\r\n        <Modal size='sm' show={showModal} onHide={close} centered className='c-main-card-editor-modal'>\r\n            <Modal.Header>\r\n                <Modal.Title>{modalTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId='title'>\r\n                        <Form.Label>כותרת</Form.Label>\r\n                        <Form.Control type=\"text\" value={title} onChange={e => { setTitle(e.target.value) }} onKeyPress={ifEnterPressed} />\r\n                    </Form.Group>\r\n                    {cardType === 'dafKesher' ? <Form.Group controlId='date'>\r\n                        <Form.Label>תאריך</Form.Label>\r\n                        <Form.Control type=\"date\" value={date}\r\n                            onChange={e => { setDate(e.target.value) }} onKeyPress={ifEnterPressed} />\r\n                    </Form.Group> : null}\r\n                </Form>\r\n                {showError ? <Alert variant=\"danger\">נא למלא את כל השדות</Alert> : null}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={close}>סגירה</Button>\r\n                <Button variant=\"warning\" onClick={onSave}>שמירה</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default MainCardEditorModal;\r\n","import Parse from \"parse\";\r\n\r\nasync function deleteDafKesher(dafKesherId) {\r\n\r\n    const DafKesher = Parse.Object.extend('DafKesher');\r\n    const query = new Parse.Query(DafKesher);\r\n\r\n    query.get(dafKesherId).then((dafKesher) => {\r\n        dafKesher.destroy().then(\r\n            (dafKesher) => {\r\n                // console.log('DafKesher destroyed');\r\n            },\r\n            (error) => {\r\n                // console.error('Error while destroying DafKesher: ', error);\r\n            }\r\n\r\n        );\r\n\r\n        \r\n        \r\n    });\r\n    return '';\r\n}\r\n\r\nexport default deleteDafKesher;","import Parse from \"parse\";\r\n\r\nasync function deleteGallery(galleryId) {\r\n\r\n    const Gallery = Parse.Object.extend('Gallery');\r\n    const query = new Parse.Query(Gallery);\r\n\r\n    query.get(galleryId).then((gallery) => {\r\n        gallery.destroy().then(\r\n            (gallery) => {\r\n                // console.log('Gallery destroyed');\r\n            },\r\n            (error) => {\r\n                // console.error('Error while destroying Gallery: ', error);\r\n            }\r\n\r\n        );\r\n\r\n        \r\n        \r\n    });\r\n    return '';\r\n}\r\n\r\nexport default deleteGallery;","import Parse from \"parse\";\r\n\r\nasync function updateDafKesherContent(dafKesherId, content) {\r\n\r\n    const DafKesher = Parse.Object.extend('DafKesher');\r\n    const query = new Parse.Query(DafKesher);\r\n\r\n    query.get(dafKesherId).then((dafKesher) => {\r\n        dafKesher.set('data', content);\r\n        dafKesher.save().then(\r\n            (result) => {\r\n                // console.log('DafKesher updated');\r\n            },\r\n            (error) => {\r\n                // console.error('Error while updating DafKesher: ', error);\r\n            }\r\n\r\n        );\r\n\r\n        \r\n        \r\n    });\r\n    return '';\r\n}\r\n\r\nexport default updateDafKesherContent;","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport deleteDafKesher from '../../utils/deleteDafKesher';\r\nimport deleteGallery from '../../utils/deleteGallery';\r\nimport deleteImage from '../../utils/deleteImage';\r\nimport updateDafKesherContent from '../../utils/updateDafKesherContent';\r\n\r\nfunction DeleteWarningModal(props) {\r\n    const {fullData, data, dafKesherId, objectType, showModal, closeModal, cleanDataToEdit} = props;\r\n    function handleClose() {\r\n        closeModal();\r\n        cleanDataToEdit();\r\n    }\r\n    console.log(data);\r\n    function deleteClick () {\r\n        if (objectType === 'דף קשר') {\r\n            deleteDafKesher(data.id).then(() => {\r\n                handleClose();\r\n            })\r\n        } else if (objectType === 'גלריה') {\r\n            deleteGallery(data.id).then(() => {\r\n                handleClose();\r\n            })\r\n        } else if (objectType === 'חומר לימודי' || objectType === 'הודעה') {\r\n            fullData[data.type].splice(data.index, 1);\r\n            updateDafKesherContent(dafKesherId, fullData).then(() => {\r\n                handleClose();\r\n            })\r\n        } else if (objectType === 'תמונה') {\r\n            deleteImage(data.id).then(() => {\r\n                handleClose();\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal size='md' show={showModal} onHide={handleClose} backdrop=\"static\" keyboard={false} centered className='c-delete-warning-modal'>\r\n            <Modal.Header>\r\n                <Modal.Title>מחיקת {objectType}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='text-center'>\r\n                <h5>הנך מנסה למחוק {objectType}{data.title && <span className='font-weight-bold'> {data.title}</span>},</h5>\r\n                <div>פעולה זו איננה ניתנת לביטול</div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>ביטול</Button>\r\n                <Button variant=\"warning\" onClick={deleteClick}>מחיקה</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default DeleteWarningModal;","import { useContext, useEffect, useState } from 'react';\r\nimport { Col, Container, Row, Spinner } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DafKesherCard from '../../components/DafKesherCard/DafKesherCard';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport './DapeyKesherPage.css';\r\nimport getGardenDapeyKesher from '../../utils/getGardenDapeyKesher';\r\nimport getGardenDetails from '../../utils/getGardenDetails';\r\nimport AddMainCard from '../../components/AddMainCard/AddMainCard';\r\nimport MainCardEditorModal from '../../components/MainCardEditorModal/MainCardEditorModal';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\n\r\nconst DapeyKesherPage = () => {\r\n    const [dapeyKesher, setDapeyKesher] = useState([]);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [garden, setGarden] = useState('');\r\n    const [showMainCardEditorModal, setShowMainCardEditorModal] = useState(false);\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [dafKesherToEdit, setDafKesherToEdit] = useState('');\r\n    \r\n    useEffect(() => {\r\n        async function getDapeyKesher() {                                           // getting the dapeyKesher details Asynchronously from the database\r\n            const garden = await getGardenDetails(activeUser);\r\n            const dapeyKesher = await getGardenDapeyKesher(garden.id);\r\n            setDapeyKesher(dapeyKesher);\r\n            setGarden(garden);\r\n        }\r\n        \r\n        getDapeyKesher();\r\n    }, [showMainCardEditorModal,showDeleteAlert])\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    function handleEdit(dafKesher) {\r\n        setDafKesherToEdit(dafKesher);\r\n        setShowMainCardEditorModal(true);\r\n    }\r\n\r\n    function handleDeleteClick(dafKesher) {\r\n        setDafKesherToEdit(dafKesher);\r\n        setShowDeleteAlert(true);\r\n    }\r\n\r\n    const addDafKesher = activeUser && activeUser.role === 'manager' ?\r\n        <Col className='py-2' md={6} lg={3}>\r\n            <AddMainCard onClick={() => { setShowMainCardEditorModal(true) }}/>\r\n        </Col>\r\n    : null;\r\n\r\n    const dapeyKesherView = dapeyKesher ? dapeyKesher.map(dafKesher =>\r\n        <Col className='py-2' md={6} lg={3} key={dafKesher.id}>\r\n            <DafKesherCard dafKesher={dafKesher} handleEdit={handleEdit} handleDeleteClick={handleDeleteClick} activeUser={activeUser}/>\r\n        </Col>\r\n    ) : null;\r\n\r\n    if (!garden) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-dapey-kesher\">\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        <div className='name'>{garden.name}</div>\r\n                        <h2>דפי הקשר שלנו</h2>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {garden ? <div className='logo'><img src={garden.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row className='align-items-stretch'>\r\n                    {addDafKesher}\r\n                    {dapeyKesherView}\r\n                </Row>\r\n            </Container>\r\n            <MainCardEditorModal data={dafKesherToEdit} parseGarden={garden.parseGarden} cardType='dafKesher'\r\n                showModal={showMainCardEditorModal} closeModal={() => { setShowMainCardEditorModal(false) }} cleanDataToEdit={() => { setDafKesherToEdit('') }} />\r\n            <DeleteWarningModal data={dafKesherToEdit} objectType='דף קשר' showModal={showDeleteAlert}\r\n                closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setDafKesherToEdit('') }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DapeyKesherPage;","import { useContext, useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport './GalleriesPage.css';\r\nimport GalleryCard from '../../components/GalleryCard/GalleryCard';\r\nimport { Col, Container, Row, Spinner } from 'react-bootstrap';\r\nimport getGardenGalleries from '../../utils/getGardenGalleries';\r\nimport getGardenDetails from '../../utils/getGardenDetails';\r\nimport MainCardEditorModal from '../../components/MainCardEditorModal/MainCardEditorModal';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\nimport AddMainCard from '../../components/AddMainCard/AddMainCard';\r\n\r\nconst GalleriesPage = () => {\r\n    const [galleries, setGalleries] = useState([]);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [garden, setGarden] = useState('');\r\n    const [showMainCardEditorModal, setShowMainCardEditorModal] = useState(false);\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [galleryToEdit, setGalleryToEdit] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function getGalleries () {                                            // getting the galleries details Asynchronously from the database\r\n            const garden = await getGardenDetails(activeUser);\r\n            const galleries = await getGardenGalleries(garden.id);\r\n            setGalleries(galleries);\r\n            setGarden(garden);\r\n        }\r\n\r\n        getGalleries();\r\n    },[showMainCardEditorModal,showDeleteAlert]);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    \r\n    function handleEdit(gallery) {\r\n        setGalleryToEdit(gallery);\r\n        setShowMainCardEditorModal(true);\r\n    }    \r\n\r\n    function handleDeleteClick(gallery) {\r\n        setGalleryToEdit(gallery);\r\n        setShowDeleteAlert(true);\r\n    }    \r\n\r\n    const addGallery = activeUser && activeUser.role === 'manager' ?\r\n        <Col className='py-2' md={6} lg={3}>\r\n            <AddMainCard onClick={() => { setShowMainCardEditorModal(true) }}/>\r\n        </Col>\r\n    : null;\r\n    \r\n    const galleriesView = galleries ? galleries.map(gallery => {\r\n        return(<Col className='py-2' md={6} lg={3} key={gallery.id}>\r\n            <GalleryCard gallery={gallery} handleEdit={handleEdit} handleDeleteClick={handleDeleteClick} activeUser={activeUser}/>\r\n        </Col>)        \r\n    }) : null;\r\n\r\n    if (!garden) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-galleries\">\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        {garden ? <div className='name'>{garden.name}</div> : null}\r\n                        <h2>הגלריות שלנו</h2>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {garden ? <div className='logo'><img src={garden.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {addGallery}\r\n                    {galleriesView}\r\n                </Row>\r\n            </Container>\r\n            <MainCardEditorModal data={galleryToEdit} parseGarden={garden.parseGarden} cardType='gallery'\r\n                showModal={showMainCardEditorModal} closeModal={() => { setShowMainCardEditorModal(false) }} cleanDataToEdit={() => { setGalleryToEdit('') }} />\r\n            <DeleteWarningModal data={galleryToEdit} objectType='גלריה' showModal={showDeleteAlert}\r\n                closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setGalleryToEdit('') }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GalleriesPage;","import { useContext, useEffect, useState } from 'react';\r\nimport { Button, CardColumns, Card, Form, Spinner } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport addImage from '../../utils/addImage';\r\nimport emailjs from 'emailjs-com';\r\nimport isEmailValid from '../../utils/isEmailValid';\r\nimport './ContactUsPage.css'\r\n\r\n\r\nconst ContactUsPage = () => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [name, setName] = useState(activeUser ? `${activeUser.fname} ${activeUser.lname}` : '');\r\n    const [email, setEmail] = useState(activeUser ? activeUser.email : '');\r\n    const [subject, setSubject] = useState('');\r\n    const [request, setRequest] = useState('');\r\n    const [useUserInfo, setUseUserInfo] = useState(activeUser ? true : false);\r\n    const [files, setFiles] = useState('');\r\n    const [filesUrl, setFilesUrl] = useState('');\r\n    const [showEmailError, setShowEmailError] = useState(false);\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n    const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n    \r\n    function sendForm () {                                      // sending the form to site's DevTeam and cleaning the fields\r\n        emailjs.send(\"service_5cx738e\",\"template_k3nemuh\",{\r\n            from_name: name,\r\n            from_email: email,\r\n            topic: subject,\r\n            message: request,\r\n            file_links: filesUrl,\r\n            });\r\n\r\n        setSubject('');\r\n        setRequest('');\r\n        setFiles('');\r\n        setFilesUrl('');\r\n        setIsFormSubmitted(true);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (name && isEmailValid(email) && subject && request) {        // setting the form as valid - if all required fields filled & email is valid\r\n            setIsFormValid(true);\r\n            setShowEmailError(false);\r\n        } else if (!isEmailValid(email) && email!=='') {                // showing error if the email is not valid\r\n            setShowEmailError(true);\r\n            if (isFormValid) {\r\n                setIsFormValid(false);\r\n            }\r\n        } else if (isEmailValid(email)) {\r\n            setShowEmailError(false);\r\n            if (isFormValid) {\r\n                setIsFormValid(false);\r\n            }\r\n        }\r\n    });\r\n    \r\n    function onSwitchMode() {                                           // giving the users option to automatically fill their details\r\n        if (!useUserInfo) {\r\n            setName(`${activeUser.fname} ${activeUser.lname}`);\r\n            setEmail(activeUser.email);\r\n            setUseUserInfo(!useUserInfo);\r\n        } else {\r\n            setName('');\r\n            setEmail('');\r\n            setUseUserInfo(!useUserInfo);\r\n        }\r\n    }\r\n    \r\n    async function onFilesSelect(event) {                               // uploading images to show the problem if needed\r\n        setFiles(event.target.files);\r\n        const filesArr = Object.values(event.target.files);\r\n        let newFilesUrl = [];\r\n        await Promise.all(filesArr.map(async file => {\r\n            const res = await addImage(file, 'fe0qzAHNtH');\r\n            newFilesUrl.push(res.get('file')._url);\r\n            debugger\r\n        }));\r\n        setFilesUrl(newFilesUrl);\r\n    }\r\n\r\n    const filesAmount = files ? files.length : 0;\r\n\r\n    const filesView = filesUrl ? filesUrl.map((fileUrl, index) =>\r\n        <Card key={index}>\r\n            <Card.Img src={fileUrl}/>\r\n        </Card>\r\n    ) : null;\r\n\r\n    if (isFormSubmitted) {                                              // showing success message after sending the form\r\n        return(\r\n            <div className=\"p-contact-us success\">\r\n                <h2>פנייתך נשלחה בהצלחה</h2>\r\n                <Button variant='info' onClick={() => {setIsFormSubmitted(false)}} >פנייה נוספת</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-contact-us\">\r\n            <h2>צור קשר</h2>\r\n            <Form>\r\n                <Form.Group controlId=\"formContactUsName\">\r\n                    <Form.Label>שם</Form.Label>\r\n                    {activeUser ? <Form.Check type='switch' variant='warning' id='formContactUsFileSwitch' label={useUserInfo ? 'משתמש בפרטים שלי' : 'השתמש בפרטים שלי'} checked={useUserInfo} onChange={onSwitchMode} /> : null}\r\n                    <Form.Control type=\"text\" value={name} onChange={e => {setName(e.target.value)}}/>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId=\"formContactUsEmail\">\r\n                    <Form.Label>דואר אלקטרוני</Form.Label>\r\n                    <Form.Control type=\"email\" value={email} className={showEmailError ? 'is-invalid' : null} onChange={e => { setEmail(e.target.value) }} />\r\n                    <Form.Control.Feedback type=\"invalid\">כתובת מייל לא תקינה</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formContactUsSubject\">\r\n                    <Form.Label>נושא</Form.Label>\r\n                    <Form.Control type=\"text\" value={subject}  onChange={e => {setSubject(e.target.value)}}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formContactUsRequest\">\r\n                    <Form.Label>תוכן הפניה</Form.Label>\r\n                    <Form.Control as=\"textarea\" value={request}  onChange={e => {setRequest(e.target.value)}}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.File id=\"formContactUsFile\" label='' data-browse=\"בחירת קבצים\" accept=\"image/*\" custom multiple onChange={onFilesSelect}/>\r\n                    <Form.Text className=\"text-muted\">{filesAmount >0 ? `נבחרו ${filesAmount} קבצים` : 'ניתן לבחור מספר קבצים'}</Form.Text>\r\n                    <CardColumns>\r\n                        {filesView}\r\n                    </CardColumns>\r\n                    {files && filesView === null && \r\n                        <div className='images-spinner row justify-content-center mt-3'>\r\n                            <Spinner animation=\"border\" variant=\"warning\" />\r\n                        </div>\r\n                    }\r\n                </Form.Group>\r\n                <Button variant=\"warning\" type=\"button\" className='w-100' disabled={!isFormValid} onClick={sendForm}>\r\n                    שליחה\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactUsPage;","import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './ImageCard.css';\r\n\r\nconst ImageCard = (props) => {\r\n    const { image, onClick, activeUser, handleDeleteClick } = props;\r\n    return (\r\n        <div className='c-image-card'>\r\n            <Card>\r\n                {image ? <Card.Img variant=\"top\" src={image.url}  onClick={onClick} /> : null}\r\n                {activeUser && activeUser.role === 'manager' &&                                     //showing edit icons only to garden owner\r\n                    <Card.Footer>\r\n                        <FontAwesomeIcon icon={faTrashAlt} onClick={() => {handleDeleteClick(image)}}/>\r\n                    </Card.Footer>}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageCard;","import { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Col, Image, Modal } from 'react-bootstrap';\r\nimport './ImageModal.css'\r\n\r\nconst ImageModal = (props) => {\r\n    const { images, showModal, selectedImage, close, onImageChange } = props;\r\n\r\n    //enabling loop browsing\r\n    function nextImage() {\r\n        if (selectedImage === images.length - 1) {\r\n            onImageChange(0);\r\n        } else {\r\n            onImageChange(selectedImage + 1);\r\n        }\r\n    }\r\n\r\n    function prevImage() {\r\n        if (selectedImage === 0) {\r\n            onImageChange(images.length - 1);\r\n        } else {\r\n            onImageChange(selectedImage - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal size='md' show={showModal} onHide={close} centered className='c-image-modal'>\r\n            <Modal.Body className='p-0 row'>\r\n                <Col xs={1} className='prev'>\r\n                    <a className='prev' variant='dark' onClick={prevImage}><FontAwesomeIcon icon={faChevronRight}/></a>\r\n                </Col>\r\n                <Col xs={10} className='p-0'>\r\n                    <Image src={images[selectedImage].url} />\r\n                    <Button onClick={close} className='modal-x-button' variant='outline-warning'>X</Button>\r\n                </Col>\r\n                <Col xs={1} className='next'>\r\n                    <a className='next' variant='dark' onClick={nextImage}><FontAwesomeIcon icon={faChevronLeft}/></a>\r\n                </Col>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ImageModal;","import Parse from 'parse';\r\n\r\nasync function getGalleryImages(galleryId) {\r\n\r\n    const Gallery = await new Parse.Query(new Parse.Object.extend('Gallery')).get(galleryId);\r\n    const imgQuery = new Parse.Query(Parse.Object.extend('Image'));\r\n    imgQuery.equalTo(\"gallery\", Gallery);\r\n\r\n    const results = await imgQuery.find();\r\n\r\n    const images = results.map(image => {\r\n        const desc = image.get('desc') ? image.get('desc') : '';\r\n        const url = image.get('file')._url;\r\n        const id = image.id;\r\n\r\n        return({\r\n            'id':id,\r\n            'desc':desc,\r\n            'url':url\r\n        })\r\n    });\r\n\r\n    return (images);\r\n}\r\nexport default getGalleryImages;","import Parse from 'parse';\r\nimport getGalleryMainImg from './getGalleryMainImg';\r\n\r\nasync function getGalleryDetails(galleryId) {\r\n\r\n    const Gallery = await new Parse.Query(new Parse.Object.extend('Gallery')).get(galleryId);\r\n    const galleryName = Gallery.get('title');\r\n    const galleryMainImg = await getGalleryMainImg(galleryId);\r\n\r\n    return ({'parseGallery':Gallery, 'title':galleryName, 'mainImg': galleryMainImg});\r\n}\r\nexport default getGalleryDetails;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './AddImageCard.css';\r\n\r\nconst AddImageCard = (props) => {\r\n    const { onClick } = props;\r\n\r\n    return (\r\n        <Card className='c-add-image-card' onClick={onClick}>\r\n            <Card.Title>+</Card.Title>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default AddImageCard;","\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { Button, Card, CardColumns, Form, Modal, Spinner } from 'react-bootstrap';\r\nimport addImage from '../../utils/addImage';\r\nimport deleteImage from '../../utils/deleteImage';\r\n\r\nfunction AddImageModal(props) {\r\n    const {galleryTitle, galleryId, showModal, closeModal} = props;\r\n    const [images, setImages] = useState('');\r\n    const [imagesId, setImagesId] = useState([]);\r\n    const [imagesUrl, setImagesUrl] = useState([]);\r\n\r\n    function handleClose(params) {\r\n        closeModal();\r\n        setImages('');\r\n        setImagesId([]);\r\n        setImagesUrl([]);\r\n    }\r\n    \r\n    async function onFilesSelect(event) {\r\n        setImages(event.target.files);\r\n        const imagesArr = Object.values(event.target.files);\r\n        let newImagesId = [];\r\n        let newImagesUrl = [];\r\n        await Promise.all(imagesArr.map(async image => {\r\n            const res = await addImage(image, galleryId);\r\n            newImagesId.push(res.id);\r\n            newImagesUrl.push(res.get('file')._url);\r\n            \r\n        }));\r\n        setImagesId(newImagesId);\r\n        setImagesUrl(newImagesUrl);\r\n    }\r\n    \r\n    function closeClicked() {\r\n        imagesId && imagesId.map(image => {\r\n            deleteImage(image);\r\n        });\r\n        handleClose();\r\n    }\r\n    \r\n    function addClicked() {\r\n        handleClose();\r\n    }\r\n    \r\n    const imagesAmount = images ? images.length : 0;\r\n\r\n    const imagesView = imagesUrl ? imagesUrl.map((imageUrl, index) =>\r\n        <Card key={index}>\r\n            <Card.Img src={imageUrl}/>\r\n        </Card>\r\n    ) : null;\r\n\r\n    return (\r\n        <Modal className='c-add-image-modal' size={'md'} show={showModal} onHide={handleClose} centered backdrop=\"static\" keyboard={false}>\r\n            <Modal.Header>\r\n                <Modal.Title>הוספת תמונות לגלריה <span className='font-weight-bold'>{galleryTitle}</span></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group>\r\n                    <Form.File id=\"formFiles\" label={images ? 'filesNames' : 'בחירת קבצים'} data-browse=\"בחירת קבצים\" accept=\"image/*\" custom multiple onChange={onFilesSelect}/>\r\n                    <Form.Text className=\"text-muted\">{imagesAmount >0 ? `נבחרו ${imagesAmount} קבצים` : 'ניתן לבחור מספר קבצים יחד'}</Form.Text>\r\n                    <CardColumns>\r\n                        {imagesView}\r\n                    </CardColumns>\r\n                    {images && imagesView.length === 0 && \r\n                        <div className='images-spinner row justify-content-center mt-3'>\r\n                            <Spinner animation=\"border\" variant=\"warning\" />\r\n                        </div>\r\n                    }\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={closeClicked} disabled={images && imagesView.length === 0}>ביטול</Button>\r\n                <Button variant=\"warning\" onClick={addClicked} disabled={imagesView.length === 0}>הוספה</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AddImageModal;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { CardColumns, Container, Spinner } from 'react-bootstrap';\r\nimport './GalleryPage.css'\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport ImageCard from '../../components/ImageCard/ImageCard';\r\nimport ImageModal from '../../components/ImageModal/ImageModal';\r\nimport getGalleryImages from '../../utils/getGalleryImages';\r\nimport getGalleryDetails from '../../utils/getGalleryDetails';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\nimport AddImageCard from '../../components/ImageCard/AddImageCard';\r\nimport AddImageModal from '../../components/AddImage/AddImageModal';\r\n\r\nconst GalleryPage = () => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [images, setImages] = useState([]);\r\n    const [galleryTitle, setGalleryTitle] = useState('');\r\n    const [showImageModal, setShowImageModal] = useState(false);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [showAddImage, setShowAddImage] = useState(false);\r\n    const [imageToEdit, setImageToEdit] = useState('');\r\n\r\n    const galleryId = useParams().id;\r\n\r\n    useEffect(() => {\r\n        async function getImages (){                                        // getting the gallery images Asynchronously from the database\r\n            const images = await getGalleryImages(galleryId);\r\n            const title = (await getGalleryDetails(galleryId)).title;\r\n            setImages(images);\r\n            setGalleryTitle(title);\r\n        }\r\n        \r\n        getImages();\r\n        \r\n    },[showDeleteAlert, showAddImage, imageToEdit])\r\n    \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    \r\n    function onImageSelect (index) {\r\n        setShowImageModal(true);\r\n        setSelectedImage(index);\r\n    }\r\n\r\n    function onImageChange (index){\r\n        setSelectedImage(index);\r\n    }\r\n\r\n    function handleDeleteClick(image) {\r\n        setImageToEdit(image);\r\n        setShowDeleteAlert(true);\r\n    } \r\n    \r\n    const addImage = activeUser && activeUser.role === 'manager' && <AddImageCard onClick={() => {setShowAddImage(true)}}/>;\r\n\r\n    const imagesView = images && images.map((image, index) =>\r\n        <ImageCard image={image} key={image.id} activeUser={activeUser} onClick={() => onImageSelect(index)} handleDeleteClick={handleDeleteClick}/>);\r\n\r\n    if (!galleryTitle) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n\r\n    return (\r\n        <div className='p-gallery'>\r\n            <h2>{galleryTitle}</h2>\r\n            <Container>\r\n                <CardColumns>\r\n                    {addImage}\r\n                    {imagesView}\r\n                </CardColumns>\r\n            </Container>\r\n            {selectedImage !== null && images.length>0 &&\r\n                <ImageModal images={images} showModal={showImageModal} selectedImage={selectedImage} \r\n                close={() => { setShowImageModal(false) }} onImageChange={onImageChange} />}\r\n            <DeleteWarningModal data={imageToEdit} objectType='תמונה' showModal={showDeleteAlert}\r\n                closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setImageToEdit('') }} />\r\n            {images && <AddImageModal galleryTitle={galleryTitle} galleryId={galleryId} showModal={showAddImage} \r\n                closeModal={() => {setShowAddImage(false)}}/>}\r\n        </div>\r\n    )\r\n}\r\nexport default GalleryPage;","import './StudyTopicBox.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst StudyTopicBox = ({topic, activeUser, onDeleteClick, onEditClick}) => {\r\n    const { headline, content } = topic;\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const editIcon = \r\n        <div>\r\n            <FontAwesomeIcon className='edit-icon' icon={faEdit} onClick={onEditClick} />;\r\n            <FontAwesomeIcon className='edit-icon' icon={faTrashAlt} onClick={onDeleteClick} />;\r\n        </div>\r\n\r\n    return (\r\n        <div className='c-study-topic-box mb-4'>\r\n            {activeUser && activeUser.role === 'manager' && editIcon}\r\n            <Card.Title>{headline}</Card.Title>\r\n            <Card.Text>{content}</Card.Text>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StudyTopicBox;","import Parse from 'parse';\r\nimport getHebrewDate from './getHebrewDate';\r\n\r\nasync function getDafKesherDetails(dafKesherId) {\r\n    const DafKesher = await new Parse.Query(new Parse.Object.extend('DafKesher')).get(dafKesherId);\r\n    const data = DafKesher.get('data');\r\n    const title = DafKesher.get('title');\r\n    const hebDate = getHebrewDate(DafKesher.get('date'));\r\n\r\n\r\n    return ({'parseDafKesher':DafKesher, 'data':data, 'title':title, 'hebDate':hebDate})\r\n}\r\n\r\nexport default getDafKesherDetails;","\r\nfunction getRandomBgColor() {\r\n    \r\n    //returns random bootstrap variant name\r\n\r\n    const bgColors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\r\n    const randomBgColor = bgColors[Math.floor(Math.random() * bgColors.length)];\r\n\r\n    return randomBgColor;\r\n}\r\n\r\nexport default getRandomBgColor;","import './MessageBox.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport getRandomBgColor from '../../utils/getRandomBgColor';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst MessageBox = ({topic, activeUser, onDeleteClick, onEditClick}) => {\r\n    const { headline, content } = topic;\r\n    \r\n    const bgColor = getRandomBgColor();\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const editIcon = \r\n        <div>\r\n            <FontAwesomeIcon className='edit-icon' icon={faEdit} onClick={onEditClick} />\r\n            <FontAwesomeIcon className='edit-icon' icon={faTrashAlt} onClick={onDeleteClick} />\r\n        </div>;\r\n\r\n    return (\r\n        <Card className='c-message-box m-2' bg={bgColor} text={bgColor === 'light' ? 'dark' : 'white'}>\r\n            <Card.Body>\r\n                {activeUser && activeUser.role === 'manager' && editIcon}\r\n                <Card.Title>{headline}</Card.Title>\r\n                <Card.Text>{content}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MessageBox;","import './AddMessageBox.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\n\r\nconst AddMessageBox = ({onClick}) => {\r\n    \r\n    const activeUser = useContext(ActiveUserContext);\r\n    \r\n    \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    \r\n    return (\r\n        <Card className='c-add-message-box m-2 text-center' bg={'light'} text={'dark'} onClick={onClick}>\r\n            <Card.Body>\r\n                <Card.Title>+</Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default AddMessageBox;","import './AddStudyTopicBox.css';\r\nimport React, { useContext } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst AddStudyTopicBox = ({onClick}) => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <div className='c-add-study-topic-box text-center' onClick={onClick}>\r\n            <Card.Title>+</Card.Title>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddStudyTopicBox;","import React, { useEffect, useState } from 'react';\r\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\r\nimport updateDafKesherContent from '../../utils/updateDafKesherContent';\r\n\r\n\r\nconst DafKesherEditorModal = (props) => {\r\n    const { dafKesherId, fullData, data, showModal, closeModal, cleanDataToEdit } = props;\r\n    const [headline, setHeadline] = useState();\r\n    const [content, setContent] = useState();\r\n    const [showError, setShowError] = useState(false);\r\n\r\n    useEffect(() => { \r\n        const type = typeof data;\r\n        if (type === 'object') {                                //if editing existing content - filling the fields with the original data \r\n            setHeadline(fullData[data.type][data.index].headline);\r\n            setContent(fullData[data.type][data.index].content);\r\n        } else {                                                //if adding new content - showing empty fields\r\n            setHeadline('');\r\n            setContent('');\r\n        }\r\n    }, [data]);\r\n\r\n    function close () {\r\n        closeModal();\r\n        setShowError(false);\r\n        cleanDataToEdit();\r\n    }\r\n\r\n    function onSave() {\r\n        if (!(headline && content)) {\r\n            setShowError(true);\r\n        } else if (typeof data !== 'object') {                  //if adding new content - push new content object\r\n            let newData = { ...fullData };\r\n            newData[data].push({ headline: headline, content: content });\r\n            updateDafKesherContent(dafKesherId, newData);\r\n            close()\r\n        } else {                                                //if editing existing content - saving the changes\r\n            let newData = { ...fullData };\r\n            newData[data.type][data.index].headline = headline;\r\n            newData[data.type][data.index].content = content;\r\n            updateDafKesherContent(dafKesherId, newData);\r\n            close();\r\n        }\r\n    }\r\n\r\n\r\n    const modalTitle = (typeof data) === 'object' ? 'עריכת תוכן דף קשר' : 'הוספת תוכן חדש'; //setting the modal title depending on the situation (add/edit)\r\n\r\n    return (\r\n        <Modal size='md' show={showModal} onHide={close} centered className='c-daf-kesher-editor-modal'>\r\n            <Modal.Header>\r\n                <Modal.Title>{modalTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form>\r\n                <Form.Group controlId='headline'>\r\n                    <Form.Label>כותרת</Form.Label>\r\n                    <Form.Control type=\"text\" value={headline} onChange={e => { setHeadline(e.target.value) }} />\r\n                </Form.Group>\r\n                <Form.Group controlId='content'>\r\n                    <Form.Label>תוכן</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={5} value={content} onChange={e => {setContent(e.target.value)}} />\r\n                </Form.Group>\r\n                </Form>\r\n                {showError ? <Alert variant=\"danger\">נא למלא את כל השדות</Alert> : null}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={close}>סגירה</Button>\r\n                <Button variant=\"warning\" onClick={onSave}>שמירה</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default DafKesherEditorModal;","import './DafKesherPage.css'\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Card, Col, Container, Row, Spinner } from 'react-bootstrap';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport StudyTopicBox from '../../components/StudyTopicBox/StudyTopicBox';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport getDafKesherDetails from '../../utils/getDafKesherDetails';\r\nimport getGardenDetails from '../../utils/getGardenDetails';\r\nimport MessageBox from '../../components/MessageBox/MessageBox';\r\nimport AddMessageBox from '../../components/MessageBox/AddMessageBox';\r\nimport AddStudyTopicBox from '../../components/StudyTopicBox/AddStudyTopicBox';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\nimport DafKesherEditorModal from '../../components/DafKesherEditorModal/DafKesherEditorModal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCommentDots, faNewspaper } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction DafKesherPage() {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [data, setData] = useState('');\r\n    const [header, setHeader] = useState('');\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [showEditorModal, setShowEditorModal] = useState(false);\r\n    const [contentToEdit, setContentToEdit] = useState('');\r\n    \r\n    const dafKesherId = useParams().id;\r\n    \r\n    useEffect(() => {\r\n        async function getData() {                                          // getting the dafKesher and garden data Asynchronously from the database\r\n            const dafKesher = await getDafKesherDetails(dafKesherId);\r\n            const gardenDetails = (await getGardenDetails(activeUser));\r\n            const header = {\r\n                'title': dafKesher.title,\r\n                'hebDate': dafKesher.hebDate,\r\n                'logo': gardenDetails.logo,\r\n                'name': gardenDetails.name\r\n            };\r\n            setHeader(header);\r\n            setData(dafKesher.data);\r\n        }\r\n        getData();\r\n    }, []);\r\n    \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    \r\n    function handleAddClick(contentToEdit) {\r\n        setContentToEdit(contentToEdit);\r\n        setShowEditorModal(true);\r\n    }\r\n\r\n    function handleEditClick(contentToEdit) {\r\n        setContentToEdit(contentToEdit);\r\n        setShowEditorModal(true);\r\n    }\r\n\r\n    function handleDeleteClick(contentToEdit) {\r\n        setContentToEdit(contentToEdit);\r\n        setShowDeleteAlert(true);\r\n    }\r\n\r\n    const topicsView = data.studyTopics ? data.studyTopics.map( (topic, index) => \r\n        <div key={index}>\r\n            <StudyTopicBox topic={{ 'headline': topic.headline, 'content': topic.content }} activeUser={activeUser}\r\n                onEditClick={() => { handleEditClick({ type: 'studyTopics', index: index }) }}\r\n                onDeleteClick={() => { handleDeleteClick({ type: 'studyTopics', index: index }) }} />\r\n        </div>\r\n    ) : null;\r\n    \r\n    const addTopic = activeUser && activeUser.role === 'manager' && <AddStudyTopicBox onClick={() => { handleAddClick('studyTopics') }}/>;\r\n\r\n    const messagesView = data.messages ? data.messages.map( (message, index) => \r\n        <div key={index}>\r\n            <MessageBox topic={{ 'headline': message.headline, 'content': message.content }} activeUser={activeUser}\r\n                onEditClick={() => { handleEditClick({ type: 'messages', index: index }) }}\r\n                onDeleteClick={() => { handleDeleteClick({ type: 'messages', index: index }) }} />\r\n        </div>\r\n    ) : null;\r\n    \r\n    const addMessage = activeUser && activeUser.role === 'manager' && <AddMessageBox onClick={() => { handleAddClick('messages') }}/>;\r\n\r\n    if (data.length === 0) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n\r\n    return (\r\n        <div className='p-daf-kesher'>\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        <div className='name'>{header.name}</div>\r\n                        <h2>{`דף קשר ${header.title}`}</h2>\r\n                        <div className='date'>{header.hebDate}</div>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {header.logo ? <div className='logo'><img src={header.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={8} className='mb-3'>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <span>מה למדנו השבוע?</span>\r\n                                <FontAwesomeIcon className='view-icon' icon={faNewspaper}/>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                {topicsView}\r\n                                {addTopic}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <div>הודעות</div>\r\n                                <FontAwesomeIcon className='view-icon' icon={faCommentDots}/>\r\n                            </Card.Header>\r\n                            {messagesView}\r\n                            {addMessage}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <DafKesherEditorModal dafKesherId={dafKesherId} fullData={data} data={contentToEdit} cardType='dafKesher'\r\n                showModal={showEditorModal} closeModal={() => setShowEditorModal(false)} cleanDataToEdit={() => { setContentToEdit('') }}/>\r\n            <DeleteWarningModal dafKesherId={dafKesherId} fullData={data} data={contentToEdit} objectType={contentToEdit.type === 'studyTopics' ? 'חומר לימודי' : 'הודעה'}\r\n                showModal={showDeleteAlert} closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setContentToEdit('') }} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DafKesherPage;","\r\nfunction getGreeting() {\r\n    const date = new Date();\r\n    const hour = date.getHours();\r\n    \r\n    let greeting;\r\n    if (hour >=4 && hour <=10) {                // setting the greeting according to the day part\r\n        greeting = 'בוקר טוב';\r\n    } else if (hour >= 11 && hour <=16) {\r\n        greeting = 'צהריים טובים';\r\n    } else if (hour >= 17 && hour <=20) {\r\n        greeting = 'ערב טוב';\r\n    } else {\r\n        greeting = 'לילה טוב';\r\n    }\r\n    \r\n    return greeting;\r\n}\r\n\r\nexport default getGreeting;","import { Button, Nav, Navbar } from 'react-bootstrap';\r\nimport './TopNavbar.css';\r\nimport logo from '../../images/logo192.png';\r\nimport { useContext } from 'react';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport { useLocation } from 'react-router-dom';\r\nimport getGreeting from '../../utils/getGreeting';\r\n\r\nconst TopNavbar = ({ onLogout }) => {\r\n\r\n  const activeUser = useContext(ActiveUserContext);\r\n\r\n  const path = useLocation().pathname.split('/')[1];              // detecting the location in the site from the url to set the active link\r\n\r\n  const greeting = getGreeting();                                 // detecting the day part to dynamically greeting the user\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\">\r\n      <Navbar.Brand href=\"#/\" className='ml-2'>\r\n        <img src={logo} alt=\"Digital Garden logo\" className=\"d-inline-block align-top\"/>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className={activeUser ? \"ml-auto\" : \"mr-auto\"}>\r\n          \r\n          { activeUser ?                                          // hiding the links inside the site from guests\r\n          <>\r\n            <Nav.Link href=\"#/my-garden\" active={path === 'my-garden' ? true : false}>הגן שלי</Nav.Link>\r\n            <Nav.Link href=\"#/dapey-kesher\" active={path === 'dapey-kesher' ? true : false}>דפי קשר</Nav.Link>\r\n            <Nav.Link href=\"#/galleries\" active={path === 'galleries' ? true : false}>גלריות</Nav.Link>\r\n          </> : null}\r\n\r\n          <Nav.Link href=\"#/contact-us\" active={path === 'contact-us' ? true : false}>צור קשר</Nav.Link>\r\n        </Nav>\r\n        \r\n        { activeUser ?\r\n        <Nav>\r\n          <Navbar.Text>{`${greeting}, ${activeUser.fname}`}</Navbar.Text>\r\n          <Button as='a' variant='' onClick={onLogout}>התנתק</Button>\r\n        </Nav> : null}\r\n\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default TopNavbar;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport MyGardenPage from './pages/MyGardenPage/MyGardenPage';\nimport DapeyKesherPage from './pages/DapeyKesherPage/DapeyKesherPage';\nimport GalleriesPage from './pages/GalleriesPage/GalleriesPage';\nimport ContactUsPage from './pages/ContactUsPage/ContactUsPage';\nimport { useState } from 'react';\nimport ActiveUserContext from './utils/ActiveUserContext';\nimport Parse from 'parse';\nimport UserModel from './model/UserModel';\nimport GalleryPage from './pages/GalleryPage/GalleryPage';\nimport DafKesherPage from './pages/DafKesherPage/DafKesherPage';\nimport TopNavbar from './components/TopNavbar/TopNavbar';\nimport{ init } from 'emailjs-com';\n\nfunction App() {\n  const [activeUser, setActiveUser] = useState(Parse.User.current() ? new UserModel(Parse.User.current()) : null);\n  \n  init(\"user_AV4NvFTR6vJnUEHOtXINx\");\n  const handleLogin = (loggedinUser) => {\n    setActiveUser(loggedinUser);\n  }\n\n  const handleLogout = () => {\n    setActiveUser(null);\n    Parse.User.logOut();\n  }\n\n  return (\n    <>\n      <HashRouter>\n        <Switch>\n          <ActiveUserContext.Provider value={activeUser}>\n            <TopNavbar onLogout={handleLogout}/>\n            <Route exact path=\"/\"><HomePage onLogin={handleLogin} /></Route>\n            <Route exact path=\"/my-garden\"><MyGardenPage /></Route>\n            <Route exact path=\"/dapey-kesher\"><DapeyKesherPage /></Route>\n            <Route exact path=\"/dapey-kesher/:id\"><DafKesherPage /></Route>\n            <Route exact path=\"/galleries\"><GalleriesPage /></Route>\n            <Route exact path=\"/galleries/:id\"><GalleryPage /></Route>\n            <Route exact path=\"/contact-us\"><ContactUsPage /></Route>\n          </ActiveUserContext.Provider>\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Parse from \"parse\";\n\nParse.serverURL = 'https://parseapi.back4app.com';\nParse.initialize(\n  'YjX6kib1y4ZL0wYCCXagO161JHCAZNLF8vz04iNh', // This is your Application ID\n  'YYhfXbq4guVCOl4BhV5Jcvfh43NNbDbIpAqI2LzG', // This is your Javascript key\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}