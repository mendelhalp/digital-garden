[{"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\index.js":"1","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\App.js":"2","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\reportWebVitals.js":"3","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\HomePage\\HomePage.jsx":"4","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\DapeyKesherPage\\DapeyKesherPage.jsx":"5","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\GalleriesPage\\GalleriesPage.jsx":"6","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\ContactUsPage\\ContactUsPage.jsx":"7","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\MyGardenPage\\MyGardenPage.jsx":"8","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\TopNavbar\\TopNavbar.jsx":"9","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\LoginModal\\LoginModal.jsx":"10","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\ActiveUserContext.jsx":"11","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\model\\UserModel.jsx":"12","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\IsEnterPressed.jsx":"13","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\GalleryCard\\GalleryCard.jsx":"14","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\GalleryPage\\GalleryPage.jsx":"15","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\ImageCard\\ImageCard.jsx":"16","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\ImageModal\\ImageModal.jsx":"17","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGalleryMainImg.jsx":"18","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\DafKesherPage\\DafKesherPage.jsx":"19","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\DafKesherCard\\DafKesherCard.jsx":"20","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getHebrewDate.jsx":"21","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\StudyTopicBox\\StudyTopicBox.jsx":"22","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGalleryImages.jsx":"23","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGardenGalleries.jsx":"24","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGardenDapeyKesher.jsx":"25","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGardenDetails.jsx":"26","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGalleryDetails.jsx":"27","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getDafKesherDetails.jsx":"28","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\MessageBox\\MessageBox.jsx":"29","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\isEmailValid.jsx":"30","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGreeting.jsx":"31","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getRandomBgColor.jsx":"32","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\MessageBox\\AddMessageBox.jsx":"33","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\StudyTopicBox\\AddStudyTopicBox.jsx":"34","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\createNewDafKesher.jsx":"35","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\updateDafKesherDetails.jsx":"36","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\deleteDafKesher.jsx":"37","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\DeleteWarningModal\\DeleteWarningModal.jsx":"38","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\updateDafKesherContent.jsx":"39","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\DafKesherEditorModal\\DafKesherEditorModal.jsx":"40","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\AddMainCard\\AddMainCard.jsx":"41","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\MainCardEditorModal\\MainCardEditorModal.jsx":"42","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\createNewGallery.jsx":"43","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\updateGalleryDetails.jsx":"44","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\deleteGallery.jsx":"45","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\deleteImage.jsx":"46","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\ImageCard\\AddImageCard.jsx":"47","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\AddImage\\AddImageModal.jsx":"48","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\addImage.jsx":"49","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\SignupPage\\SignupPage.jsx":"50"},{"size":541,"mtime":1610290742446,"results":"51","hashOfConfig":"52"},{"size":2061,"mtime":1611613634447,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":499162500000,"results":"54","hashOfConfig":"52"},{"size":1910,"mtime":1611615139965,"results":"55","hashOfConfig":"52"},{"size":3853,"mtime":1611583169990,"results":"56","hashOfConfig":"52"},{"size":3777,"mtime":1611583149824,"results":"57","hashOfConfig":"52"},{"size":6008,"mtime":1611614606543,"results":"58","hashOfConfig":"52"},{"size":4751,"mtime":1611587831276,"results":"59","hashOfConfig":"52"},{"size":1764,"mtime":1611197036009,"results":"60","hashOfConfig":"52"},{"size":3554,"mtime":1611577145056,"results":"61","hashOfConfig":"52"},{"size":125,"mtime":1610531444127,"results":"62","hashOfConfig":"52"},{"size":353,"mtime":1611139628213,"results":"63","hashOfConfig":"52"},{"size":97,"mtime":1610537972161,"results":"64","hashOfConfig":"52"},{"size":1541,"mtime":1611584000154,"results":"65","hashOfConfig":"52"},{"size":3573,"mtime":1611578248530,"results":"66","hashOfConfig":"52"},{"size":819,"mtime":1611492214117,"results":"67","hashOfConfig":"52"},{"size":1640,"mtime":1611587039530,"results":"68","hashOfConfig":"52"},{"size":972,"mtime":1611247347276,"results":"69","hashOfConfig":"52"},{"size":6270,"mtime":1611587808185,"results":"70","hashOfConfig":"52"},{"size":1293,"mtime":1611584605883,"results":"71","hashOfConfig":"52"},{"size":2345,"mtime":1610964243978,"results":"72","hashOfConfig":"52"},{"size":1035,"mtime":1611480317259,"results":"73","hashOfConfig":"52"},{"size":688,"mtime":1610986369798,"results":"74","hashOfConfig":"52"},{"size":552,"mtime":1611487226960,"results":"75","hashOfConfig":"52"},{"size":769,"mtime":1611439592715,"results":"76","hashOfConfig":"52"},{"size":570,"mtime":1611229334901,"results":"77","hashOfConfig":"52"},{"size":465,"mtime":1611486703253,"results":"78","hashOfConfig":"52"},{"size":505,"mtime":1611224575013,"results":"79","hashOfConfig":"52"},{"size":1258,"mtime":1611480393067,"results":"80","hashOfConfig":"52"},{"size":103,"mtime":1611140524536,"results":"81","hashOfConfig":"52"},{"size":481,"mtime":1611157890633,"results":"82","hashOfConfig":"52"},{"size":297,"mtime":1611216110350,"results":"83","hashOfConfig":"52"},{"size":680,"mtime":1611456321056,"results":"84","hashOfConfig":"52"},{"size":593,"mtime":1611456336551,"results":"85","hashOfConfig":"52"},{"size":681,"mtime":1611486025730,"results":"86","hashOfConfig":"52"},{"size":695,"mtime":1611457769647,"results":"87","hashOfConfig":"52"},{"size":590,"mtime":1611487466436,"results":"88","hashOfConfig":"52"},{"size":2203,"mtime":1611578213434,"results":"89","hashOfConfig":"52"},{"size":644,"mtime":1611457757809,"results":"90","hashOfConfig":"52"},{"size":2928,"mtime":1611576780019,"results":"91","hashOfConfig":"52"},{"size":407,"mtime":1611583109366,"results":"92","hashOfConfig":"52"},{"size":4309,"mtime":1611576714959,"results":"93","hashOfConfig":"52"},{"size":524,"mtime":1611487488863,"results":"94","hashOfConfig":"52"},{"size":623,"mtime":1611487501493,"results":"95","hashOfConfig":"52"},{"size":566,"mtime":1611489093629,"results":"96","hashOfConfig":"52"},{"size":542,"mtime":1611491926686,"results":"97","hashOfConfig":"52"},{"size":345,"mtime":1611511151449,"results":"98","hashOfConfig":"52"},{"size":3239,"mtime":1611614592525,"results":"99","hashOfConfig":"52"},{"size":542,"mtime":1611593590008,"results":"100","hashOfConfig":"52"},{"size":7958,"mtime":1611618628456,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"fx3npl",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\index.js",[],["212","213"],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\App.js",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\reportWebVitals.js",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\HomePage\\HomePage.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\DapeyKesherPage\\DapeyKesherPage.jsx",["214"],"import { useContext, useEffect, useState } from 'react';\r\nimport { Col, Container, Row, Spinner } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DafKesherCard from '../../components/DafKesherCard/DafKesherCard';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport './DapeyKesherPage.css';\r\nimport getGardenDapeyKesher from '../../utils/getGardenDapeyKesher';\r\nimport getGardenDetails from '../../utils/getGardenDetails';\r\nimport AddMainCard from '../../components/AddMainCard/AddMainCard';\r\nimport MainCardEditorModal from '../../components/MainCardEditorModal/MainCardEditorModal';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\n\r\nconst DapeyKesherPage = () => {\r\n    const [dapeyKesher, setDapeyKesher] = useState([]);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [garden, setGarden] = useState('');\r\n    const [showMainCardEditorModal, setShowMainCardEditorModal] = useState(false);\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [dafKesherToEdit, setDafKesherToEdit] = useState('');\r\n    \r\n    useEffect(() => {\r\n        async function getDapeyKesher() {\r\n            const garden = await getGardenDetails(activeUser);\r\n            const dapeyKesher = await getGardenDapeyKesher(garden.id);\r\n            setDapeyKesher(dapeyKesher);\r\n            setGarden(garden);\r\n        }\r\n        \r\n        getDapeyKesher();\r\n    }, [showMainCardEditorModal,showDeleteAlert])\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    function handleEdit(dafKesher) {\r\n        setDafKesherToEdit(dafKesher);\r\n        setShowMainCardEditorModal(true);\r\n    }\r\n\r\n    function handleDeleteClick(dafKesher) {\r\n        setDafKesherToEdit(dafKesher);\r\n        setShowDeleteAlert(true);\r\n    }\r\n\r\n    const addDafKesher = activeUser && activeUser.role === 'manager' ?\r\n        <Col className='py-2' md={6} lg={3}>\r\n            <AddMainCard onClick={() => { setShowMainCardEditorModal(true) }}/>\r\n        </Col>\r\n    : null;\r\n\r\n    const dapeyKesherView = dapeyKesher ? dapeyKesher.map(dafKesher =>\r\n        <Col className='py-2' md={6} lg={3} key={dafKesher.id}>\r\n            <DafKesherCard dafKesher={dafKesher} handleEdit={handleEdit} handleDeleteClick={handleDeleteClick} activeUser={activeUser}/>\r\n        </Col>\r\n    ) : null;\r\n\r\n    if (!garden) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-dapey-kesher\">\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        <div className='name'>{garden.name}</div>\r\n                        <h2>דפי הקשר שלנו</h2>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {garden ? <div className='logo'><img src={garden.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row className='align-items-stretch'>\r\n                    {addDafKesher}\r\n                    {dapeyKesherView}\r\n                </Row>\r\n            </Container>\r\n            <MainCardEditorModal data={dafKesherToEdit} parseGarden={garden.parseGarden} cardType='dafKesher'\r\n                showModal={showMainCardEditorModal} closeModal={() => { setShowMainCardEditorModal(false) }} cleanDataToEdit={() => { setDafKesherToEdit('') }} />\r\n            <DeleteWarningModal data={dafKesherToEdit} objectType='דף קשר' showModal={showDeleteAlert}\r\n                closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setDafKesherToEdit('') }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DapeyKesherPage;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\GalleriesPage\\GalleriesPage.jsx",["215"],"import { useContext, useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport './GalleriesPage.css';\r\nimport GalleryCard from '../../components/GalleryCard/GalleryCard';\r\nimport { Col, Container, Row, Spinner } from 'react-bootstrap';\r\nimport getGardenGalleries from '../../utils/getGardenGalleries';\r\nimport getGardenDetails from '../../utils/getGardenDetails';\r\nimport MainCardEditorModal from '../../components/MainCardEditorModal/MainCardEditorModal';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\nimport AddMainCard from '../../components/AddMainCard/AddMainCard';\r\n\r\nconst GalleriesPage = () => {\r\n    const [galleries, setGalleries] = useState([]);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [garden, setGarden] = useState('');\r\n    const [showMainCardEditorModal, setShowMainCardEditorModal] = useState(false);\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [galleryToEdit, setGalleryToEdit] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function getGalleries () {\r\n            const garden = await getGardenDetails(activeUser);\r\n            const galleries = await getGardenGalleries(garden.id);\r\n            setGalleries(galleries);\r\n            setGarden(garden);\r\n        }\r\n\r\n        getGalleries();\r\n    },[showMainCardEditorModal,showDeleteAlert]);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    \r\n    function handleEdit(gallery) {\r\n        setGalleryToEdit(gallery);\r\n        setShowMainCardEditorModal(true);\r\n    }    \r\n\r\n    function handleDeleteClick(gallery) {\r\n        setGalleryToEdit(gallery);\r\n        setShowDeleteAlert(true);\r\n    }    \r\n\r\n    const addGallery = activeUser && activeUser.role === 'manager' ?\r\n        <Col className='py-2' md={6} lg={3}>\r\n            <AddMainCard onClick={() => { setShowMainCardEditorModal(true) }}/>\r\n        </Col>\r\n    : null;\r\n    \r\n    const galleriesView = galleries ? galleries.map(gallery => {\r\n        return(<Col className='py-2' md={6} lg={3} key={gallery.id}>\r\n            <GalleryCard gallery={gallery} handleEdit={handleEdit} handleDeleteClick={handleDeleteClick} activeUser={activeUser}/>\r\n        </Col>)        \r\n    }) : null;\r\n\r\n    if (!garden) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-galleries\">\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        {garden ? <div className='name'>{garden.name}</div> : null}\r\n                        <h2>הגלריות שלנו</h2>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {garden ? <div className='logo'><img src={garden.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {addGallery}\r\n                    {galleriesView}\r\n                </Row>\r\n            </Container>\r\n            <MainCardEditorModal data={galleryToEdit} parseGarden={garden.parseGarden} cardType='gallery'\r\n                showModal={showMainCardEditorModal} closeModal={() => { setShowMainCardEditorModal(false) }} cleanDataToEdit={() => { setGalleryToEdit('') }} />\r\n            <DeleteWarningModal data={galleryToEdit} objectType='גלריה' showModal={showDeleteAlert}\r\n                closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setGalleryToEdit('') }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GalleriesPage;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\ContactUsPage\\ContactUsPage.jsx",["216"],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\MyGardenPage\\MyGardenPage.jsx",["217","218","219"],"import { useContext, useEffect, useState } from 'react'\r\nimport { Card, Col, Container, Row, Spinner } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\nimport ActiveUserContext from '../../utils/ActiveUserContext'\r\nimport GalleryCard from '../../components/GalleryCard/GalleryCard';\r\nimport getGardenDapeyKesher from '../../utils/getGardenDapeyKesher'\r\nimport getGardenDetails from '../../utils/getGardenDetails'\r\nimport getGardenGalleries from '../../utils/getGardenGalleries'\r\nimport './MyGardenPage.css'\r\nimport DafKesherCard from '../../components/DafKesherCard/DafKesherCard';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft, faImages, faNewspaper } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst MyGardenPage = () => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [garden, setGarden] = useState('');\r\n    const [galleries, setGalleries] = useState([]);\r\n    const [dapeyKesher, setDapeyKesher] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getGardenData() {\r\n            const garden = await getGardenDetails(activeUser);\r\n            const dapeyKesher = await getGardenDapeyKesher(garden.id);\r\n            const galleries = await getGardenGalleries(garden.id);\r\n            setDapeyKesher(dapeyKesher);\r\n            setGalleries(galleries);\r\n            setGarden(garden);\r\n        }\r\n        getGardenData();\r\n    },[garden]);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    const dapeyKesherView = dapeyKesher ? dapeyKesher.map((dafKesher, index) => {\r\n        \r\n        if (index < 6) {\r\n            return (\r\n                <Col className='py-2' md={12} lg={6} key={dafKesher.id}>\r\n                    <DafKesherCard dafKesher={dafKesher} activeUser={activeUser}/>\r\n                </Col>\r\n            )}\r\n    }) : null;\r\n\r\n    const galleriesView = galleries ? galleries.map((gallery, index) => {\r\n        \r\n        if (index < 4) {\r\n            return (\r\n                <Col className='py-2' md={12} lg={6} key={gallery.id}>\r\n                    <GalleryCard gallery={gallery} activeUser={activeUser}/>\r\n                </Col>\r\n            )}\r\n    }) : null;\r\n\r\n    if (!garden) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-my-gan\">\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        {garden ? <h2 className='name'>{garden.name}</h2> : null}\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {garden ? <div className='logo'><img src={garden.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} className='mb-3'>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <span>דפי קשר</span>\r\n                                <FontAwesomeIcon icon={faNewspaper}/>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    {dapeyKesherView}\r\n                                </Row>\r\n                            </Card.Body>\r\n                            <a href='#/dapey-kesher'>\r\n                                <Card.Footer className='text-center'>\r\n                                    <FontAwesomeIcon icon={faChevronLeft}/>\r\n                                </Card.Footer>\r\n                            </a>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6} className='mb-3'>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <span>גלריות</span>\r\n                                <FontAwesomeIcon icon={faImages}/>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    {galleriesView}\r\n                                </Row>\r\n                            </Card.Body>\r\n                            <a href='#/galleries'>\r\n                                <Card.Footer className='text-center'>\r\n                                <FontAwesomeIcon icon={faChevronLeft}/>\r\n                                </Card.Footer>\r\n                            </a>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyGardenPage;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\TopNavbar\\TopNavbar.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\LoginModal\\LoginModal.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\ActiveUserContext.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\model\\UserModel.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\IsEnterPressed.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\GalleryCard\\GalleryCard.jsx",["220"],"import './GalleryCard.css'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport getGalleryMainImg from '../../utils/getGalleryMainImg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst GalleryCard = ({gallery, handleEdit, handleDeleteClick, activeUser}) => {\r\n    const {id, title } = gallery;\r\n    const [mainImg, setMainImg] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function getMainImg() {\r\n            const mainImg = await getGalleryMainImg(id);\r\n            setMainImg(mainImg);\r\n        }\r\n        getMainImg();\r\n    },[]);\r\n\r\n\r\n    return (\r\n        <div className='c-gallery-card'>\r\n            <Card>\r\n                <Link to={'/galleries/'+ id}>\r\n                    {mainImg ? <Card.Img variant='top' src={mainImg}/> : null}\r\n                    <Card.Title className='text-center'>{title}</Card.Title>\r\n                </Link>\r\n                {activeUser && activeUser.role === 'manager' && handleEdit &&\r\n                    <Card.Footer>\r\n                        <FontAwesomeIcon className='edit-icon' onClick={() => {handleEdit(gallery)}} icon={faEdit}/>\r\n                        <FontAwesomeIcon className='delete-icon' onClick={() => {handleDeleteClick(gallery)}} icon={faTrashAlt}/>\r\n                    </Card.Footer>\r\n                }\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GalleryCard;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\GalleryPage\\GalleryPage.jsx",["221"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { CardColumns, Container, Spinner } from 'react-bootstrap';\r\nimport './GalleryPage.css'\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport ImageCard from '../../components/ImageCard/ImageCard';\r\nimport ImageModal from '../../components/ImageModal/ImageModal';\r\nimport getGalleryImages from '../../utils/getGalleryImages';\r\nimport getGalleryDetails from '../../utils/getGalleryDetails';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\nimport AddImageCard from '../../components/ImageCard/AddImageCard';\r\nimport AddImageModal from '../../components/AddImage/AddImageModal';\r\n\r\nconst GalleryPage = () => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [images, setImages] = useState([]);\r\n    const [galleryTitle, setGalleryTitle] = useState('');\r\n    const [showImageModal, setShowImageModal] = useState(false);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [showAddImage, setShowAddImage] = useState(false);\r\n    const [imageToEdit, setImageToEdit] = useState('');\r\n\r\n    const galleryId = useParams().id;\r\n\r\n    useEffect(() => {\r\n        async function getImages (){\r\n            const images = await getGalleryImages(galleryId);\r\n            const title = (await getGalleryDetails(galleryId)).title;\r\n            setImages(images);\r\n            setGalleryTitle(title);\r\n        }\r\n        \r\n        getImages();\r\n        \r\n    },[showDeleteAlert, showAddImage, imageToEdit])\r\n    \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    \r\n    function onImageSelect (index) {\r\n        setShowImageModal(true);\r\n        setSelectedImage(index);\r\n    }\r\n\r\n    function onImageChange (index){\r\n        setSelectedImage(index);\r\n    }\r\n\r\n    function handleDeleteClick(image) {\r\n        setImageToEdit(image);\r\n        setShowDeleteAlert(true);\r\n    } \r\n    \r\n    const addImage = activeUser && activeUser.role === 'manager' && <AddImageCard onClick={() => {setShowAddImage(true)}}/>;\r\n\r\n    const imagesView = images && images.map((image, index) =>\r\n        <ImageCard image={image} key={image.id} activeUser={activeUser} onClick={() => onImageSelect(index)} handleDeleteClick={handleDeleteClick}/>);\r\n\r\n    if (!galleryTitle) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n\r\n    return (\r\n        <div className='p-gallery'>\r\n            <h2>{galleryTitle}</h2>\r\n            <Container>\r\n                <CardColumns>\r\n                    {addImage}\r\n                    {imagesView}\r\n                </CardColumns>\r\n            </Container>\r\n            {selectedImage !== null && images.length>0 &&\r\n                <ImageModal images={images} showModal={showImageModal} selectedImage={selectedImage} close={() => { setShowImageModal(false) }} onImageChange={onImageChange} />}\r\n            <DeleteWarningModal data={imageToEdit} objectType='תמונה' showModal={showDeleteAlert}\r\n                closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setImageToEdit('') }} />\r\n            {images && <AddImageModal galleryTitle={galleryTitle} galleryId={galleryId} showModal={showAddImage} closeModal={() => {setShowAddImage(false)}}/>}\r\n        </div>\r\n    )\r\n}\r\nexport default GalleryPage;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\ImageCard\\ImageCard.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\ImageModal\\ImageModal.jsx",["222","223"],"import { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Col, Image, Modal } from 'react-bootstrap';\r\nimport './ImageModal.css'\r\n\r\nconst ImageModal = (props) => {\r\n    const { images, showModal, selectedImage, close, onImageChange } = props;\r\n\r\n    function nextImage() {\r\n        if (selectedImage === images.length - 1) {\r\n            onImageChange(0);\r\n        } else {\r\n            onImageChange(selectedImage + 1);\r\n        }\r\n    }\r\n\r\n    function prevImage() {\r\n        if (selectedImage === 0) {\r\n            onImageChange(images.length - 1);\r\n        } else {\r\n            onImageChange(selectedImage - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal size='md' show={showModal} onHide={close} centered className='c-image-modal'>\r\n            <Modal.Body className='p-0 row'>\r\n                <Col xs={1} className='prev'>\r\n                    <a className='prev' variant='dark' onClick={prevImage}><FontAwesomeIcon icon={faChevronRight}/></a>\r\n                </Col>\r\n                <Col xs={10} className='p-0'>\r\n                    <Image src={images[selectedImage].url} />\r\n                    <Button onClick={close} className='modal-x-button' variant='outline-warning'>X</Button>\r\n                </Col>\r\n                <Col xs={1} className='next'>\r\n                    <a className='next' variant='dark' onClick={nextImage}><FontAwesomeIcon icon={faChevronLeft}/></a>\r\n                </Col>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ImageModal;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGalleryMainImg.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\DafKesherPage\\DafKesherPage.jsx",["224"],"import './DafKesherPage.css'\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Card, Col, Container, Row, Spinner } from 'react-bootstrap';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport StudyTopicBox from '../../components/StudyTopicBox/StudyTopicBox';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport getDafKesherDetails from '../../utils/getDafKesherDetails';\r\nimport getGardenDetails from '../../utils/getGardenDetails';\r\nimport MessageBox from '../../components/MessageBox/MessageBox';\r\nimport AddMessageBox from '../../components/MessageBox/AddMessageBox';\r\nimport AddStudyTopicBox from '../../components/StudyTopicBox/AddStudyTopicBox';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\nimport DafKesherEditorModal from '../../components/DafKesherEditorModal/DafKesherEditorModal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCommentDots, faNewspaper } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction DafKesherPage() {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [data, setData] = useState('');\r\n    const [header, setHeader] = useState('');\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [showEditorModal, setShowEditorModal] = useState(false);\r\n    const [contentToEdit, setContentToEdit] = useState('');\r\n    \r\n    const dafKesherId = useParams().id;\r\n    \r\n    useEffect(() => {\r\n        async function getData() {\r\n            const dafKesher = await getDafKesherDetails(dafKesherId);\r\n            const gardenDetails = (await getGardenDetails(activeUser));\r\n            const header = {\r\n                'title': dafKesher.title,\r\n                'hebDate': dafKesher.hebDate,\r\n                'logo': gardenDetails.logo,\r\n                'name': gardenDetails.name\r\n            };\r\n            setHeader(header);\r\n            setData(dafKesher.data);\r\n        }\r\n        getData();\r\n    }, []);\r\n    \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    \r\n    function handleAddClick(contentToEdit) {\r\n        setContentToEdit(contentToEdit);\r\n        setShowEditorModal(true);\r\n    }\r\n\r\n    function handleEditClick(contentToEdit) {\r\n        setContentToEdit(contentToEdit);\r\n        setShowEditorModal(true);\r\n    }\r\n\r\n    function handleDeleteClick(contentToEdit) {\r\n        setContentToEdit(contentToEdit);\r\n        setShowDeleteAlert(true);\r\n    }\r\n\r\n    const topicsView = data.studyTopics ? data.studyTopics.map( (topic, index) => \r\n        <div key={index}>\r\n            <StudyTopicBox topic={{ 'headline': topic.headline, 'content': topic.content }} activeUser={activeUser}\r\n                onEditClick={() => { handleEditClick({ type: 'studyTopics', index: index }) }}\r\n                onDeleteClick={() => { handleDeleteClick({ type: 'studyTopics', index: index }) }} />\r\n        </div>\r\n    ) : null;\r\n    \r\n    const addTopic = activeUser && activeUser.role === 'manager' && <AddStudyTopicBox onClick={() => { handleAddClick('studyTopics') }}/>;\r\n\r\n    const messagesView = data.messages ? data.messages.map( (message, index) => \r\n        <div key={index}>\r\n            <MessageBox topic={{ 'headline': message.headline, 'content': message.content }} activeUser={activeUser}\r\n                onEditClick={() => { handleEditClick({ type: 'messages', index: index }) }}\r\n                onDeleteClick={() => { handleDeleteClick({ type: 'messages', index: index }) }} />\r\n        </div>\r\n    ) : null;\r\n    \r\n    const addMessage = activeUser && activeUser.role === 'manager' && <AddMessageBox onClick={() => { handleAddClick('messages') }}/>;\r\n\r\n    if (data.length === 0) {\r\n        return <div className='images-spinner row justify-content-center mt-3'>\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n    }\r\n\r\n    return (\r\n        <div className='p-daf-kesher'>\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        <div className='name'>{header.name}</div>\r\n                        <h2>{`דף קשר ${header.title}`}</h2>\r\n                        <div className='date'>{header.hebDate}</div>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {header.logo ? <div className='logo'><img src={header.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={8} className='mb-3'>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <span>מה למדנו השבוע?</span>\r\n                                <FontAwesomeIcon className='view-icon' icon={faNewspaper}/>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                {topicsView}\r\n                                {addTopic}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <div>הודעות</div>\r\n                                <FontAwesomeIcon className='view-icon' icon={faCommentDots}/>\r\n                            </Card.Header>\r\n                            {messagesView}\r\n                            {addMessage}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <DafKesherEditorModal dafKesherId={dafKesherId} fullData={data} data={contentToEdit} cardType='dafKesher'\r\n                showModal={showEditorModal} closeModal={() => setShowEditorModal(false)} cleanDataToEdit={() => { setContentToEdit('') }}/>\r\n            <DeleteWarningModal dafKesherId={dafKesherId} fullData={data} data={contentToEdit} objectType={contentToEdit.type === 'studyTopics' ? 'חומר לימודי' : 'הודעה'}\r\n                showModal={showDeleteAlert} closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setContentToEdit('') }} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DafKesherPage;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\DafKesherCard\\DafKesherCard.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getHebrewDate.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\StudyTopicBox\\StudyTopicBox.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGalleryImages.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGardenGalleries.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGardenDapeyKesher.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGardenDetails.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGalleryDetails.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getDafKesherDetails.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\MessageBox\\MessageBox.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\isEmailValid.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGreeting.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getRandomBgColor.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\MessageBox\\AddMessageBox.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\StudyTopicBox\\AddStudyTopicBox.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\createNewDafKesher.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\updateDafKesherDetails.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\deleteDafKesher.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\DeleteWarningModal\\DeleteWarningModal.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\updateDafKesherContent.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\DafKesherEditorModal\\DafKesherEditorModal.jsx",["225"],"import React, { useEffect, useState } from 'react';\r\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\r\nimport updateDafKesherContent from '../../utils/updateDafKesherContent';\r\n\r\n\r\nconst DafKesherEditorModal = (props) => {\r\n    const { dafKesherId, fullData, data, showModal, closeModal, cleanDataToEdit } = props;\r\n    const [headline, setHeadline] = useState();\r\n    const [content, setContent] = useState();\r\n    const [showError, setShowError] = useState(false);\r\n\r\n    useEffect(() => { \r\n        const type = typeof data;\r\n        if (type === 'object') {\r\n            setHeadline(fullData[data.type][data.index].headline);\r\n            setContent(fullData[data.type][data.index].content);\r\n        } else {\r\n            setHeadline('');\r\n            setContent('');\r\n        }\r\n    }, [data]);\r\n\r\n    function close () {\r\n        closeModal();\r\n        setShowError(false);\r\n        cleanDataToEdit();\r\n    }\r\n\r\n    function onSave() {\r\n        if (!(headline && content)) {\r\n            setShowError(true);\r\n        } else if (typeof data !== 'object') {\r\n            let newData = { ...fullData };\r\n            newData[data].push({ headline: headline, content: content });\r\n            updateDafKesherContent(dafKesherId, newData);\r\n            close()\r\n        } else {\r\n            let newData = { ...fullData };\r\n            newData[data.type][data.index].headline = headline;\r\n            newData[data.type][data.index].content = content;\r\n            updateDafKesherContent(dafKesherId, newData);\r\n            close();\r\n        }\r\n    }\r\n\r\n\r\n    const modalTitle = (typeof data) === 'object' ? 'עריכת תוכן דף קשר' : 'הוספת תוכן חדש';\r\n\r\n    return (\r\n        <Modal size='md' show={showModal} onHide={close} centered className='c-daf-kesher-editor-modal'>\r\n            <Modal.Header>\r\n                <Modal.Title>{modalTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form>\r\n                <Form.Group controlId='headline'>\r\n                    <Form.Label>כותרת</Form.Label>\r\n                    <Form.Control type=\"text\" value={headline} onChange={e => { setHeadline(e.target.value) }} />\r\n                </Form.Group>\r\n                <Form.Group controlId='content'>\r\n                    <Form.Label>תוכן</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={5} value={content} onChange={e => {setContent(e.target.value)}} />\r\n                </Form.Group>\r\n                </Form>\r\n                {showError ? <Alert variant=\"danger\">נא למלא את כל השדות</Alert> : null}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={close}>סגירה</Button>\r\n                <Button variant=\"warning\" onClick={onSave}>שמירה</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default DafKesherEditorModal;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\AddMainCard\\AddMainCard.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\MainCardEditorModal\\MainCardEditorModal.jsx",["226"],"import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Modal, Form, Alert } from 'react-bootstrap';\r\nimport isEnterPressed from '../../utils/IsEnterPressed';\r\nimport createNewDafKesher from '../../utils/createNewDafKesher';\r\nimport updateDafKesherDetails from '../../utils/updateDafKesherDetails';\r\nimport createNewGallery from '../../utils/createNewGallery';\r\nimport updateGalleryDetails from '../../utils/updateGalleryDetails';\r\n\r\nconst MainCardEditorModal = (props) => {\r\n    const {data, cardType, parseGarden, showModal, closeModal, cleanDataToEdit} = props;\r\n    const [title, setTitle] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [showError, setShowError] = useState(false);\r\n    \r\n    useEffect(() => { \r\n        if (typeof data === 'object') {\r\n            if (cardType === 'dafKesher') {\r\n                setTitle(data.title);\r\n\r\n                const date = data.date.toLocaleString().split('.');\r\n                const viewDate = `${date[2].split(',')[0]}-${date[1].length === 1 ? '0' + date[1] : date[1]}-${date[0].length === 1 ? '0' + date[0] : date[0]}`;\r\n                setDate(viewDate);\r\n            } else if (cardType === 'gallery') {\r\n                setTitle(data.title);\r\n            }\r\n        } else {\r\n            setTitle('');\r\n            setDate('');\r\n        }\r\n    }, [data]);\r\n    \r\n    function close () {\r\n        setTitle('');\r\n        setDate('');        \r\n        closeModal();\r\n        setShowError(false);\r\n        cleanDataToEdit();\r\n    }\r\n\r\n    function onSave() {\r\n        if (cardType === 'dafKesher') {\r\n            if (!(title && date)) {\r\n                setShowError(true);\r\n            } else if (!data) {\r\n                createNewDafKesher(parseGarden, title, date);\r\n                close()\r\n            } else {\r\n                updateDafKesherDetails(data.id, title, date);\r\n                close();\r\n            }\r\n        } else if (cardType === 'gallery') {\r\n            if (!title) {\r\n                setShowError(true);\r\n            } else if (!data) {\r\n                createNewGallery(parseGarden, title);\r\n                close()\r\n            } else {\r\n                updateGalleryDetails(data.id, title);\r\n                close();\r\n            }\r\n        }\r\n    }\r\n\r\n    function ifEnterPressed (event) {\r\n        if (cardType === 'dafKesher') {\r\n            if (isEnterPressed(event) && title && date) {\r\n                onSave();\r\n            }\r\n        } else if (cardType === 'gallery') {\r\n            if (isEnterPressed(event) && title) {\r\n                onSave();\r\n            }\r\n        }\r\n    }\r\n\r\n    let modalTitle;\r\n    if (cardType === 'dafKesher') {\r\n        modalTitle = data ? 'עריכת פרטי דף קשר' : 'יצירת דף קשר חדש';\r\n    } else if (cardType === 'gallery') {\r\n        modalTitle = data ? 'עריכת פרטי גלריה' : 'יצירת גלריה חדשה';\r\n    }\r\n\r\n    return (\r\n        <Modal size='sm' show={showModal} onHide={close} centered className='c-main-card-editor-modal'>\r\n            <Modal.Header>\r\n                <Modal.Title>{modalTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId='title'>\r\n                        <Form.Label>כותרת</Form.Label>\r\n                        <Form.Control type=\"text\" value={title} onChange={e => { setTitle(e.target.value) }} onKeyPress={ifEnterPressed} />\r\n                    </Form.Group>\r\n                    {cardType === 'dafKesher' ? <Form.Group controlId='date'>\r\n                        <Form.Label>תאריך</Form.Label>\r\n                        <Form.Control type=\"date\" value={date}\r\n                            onChange={e => { setDate(e.target.value) }} onKeyPress={ifEnterPressed} />\r\n                    </Form.Group> : null}\r\n                </Form>\r\n                {showError ? <Alert variant=\"danger\">נא למלא את כל השדות</Alert> : null}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={close}>סגירה</Button>\r\n                <Button variant=\"warning\" onClick={onSave}>שמירה</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default MainCardEditorModal;\r\n","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\createNewGallery.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\updateGalleryDetails.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\deleteGallery.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\deleteImage.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\ImageCard\\AddImageCard.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\AddImage\\AddImageModal.jsx",["227","228","229"],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\addImage.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\SignupPage\\SignupPage.jsx",["230","231","232"],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":30,"column":8,"nodeType":"239","endLine":30,"endColumn":49,"suggestions":"240"},{"ruleId":"237","severity":1,"message":"238","line":30,"column":7,"nodeType":"239","endLine":30,"endColumn":48,"suggestions":"241"},{"ruleId":"237","severity":1,"message":"242","line":39,"column":5,"nodeType":"243","endLine":39,"endColumn":14,"suggestions":"244"},{"ruleId":"237","severity":1,"message":"238","line":30,"column":7,"nodeType":"239","endLine":30,"endColumn":15,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":36,"column":78,"nodeType":"248","messageId":"249","endLine":36,"endColumn":80},{"ruleId":"246","severity":1,"message":"247","line":46,"column":70,"nodeType":"248","messageId":"249","endLine":46,"endColumn":72},{"ruleId":"237","severity":1,"message":"250","line":19,"column":7,"nodeType":"239","endLine":19,"endColumn":9,"suggestions":"251"},{"ruleId":"237","severity":1,"message":"252","line":36,"column":7,"nodeType":"239","endLine":36,"endColumn":51,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":30,"column":21,"nodeType":"256","endLine":30,"endColumn":76},{"ruleId":"254","severity":1,"message":"255","line":37,"column":21,"nodeType":"256","endLine":37,"endColumn":76},{"ruleId":"237","severity":1,"message":"257","line":41,"column":8,"nodeType":"239","endLine":41,"endColumn":10,"suggestions":"258"},{"ruleId":"237","severity":1,"message":"259","line":21,"column":8,"nodeType":"239","endLine":21,"endColumn":14,"suggestions":"260"},{"ruleId":"237","severity":1,"message":"261","line":31,"column":8,"nodeType":"239","endLine":31,"endColumn":14,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":2,"column":17,"nodeType":"243","messageId":"265","endLine":2,"endColumn":26},{"ruleId":"263","severity":1,"message":"266","line":2,"column":28,"nodeType":"243","messageId":"265","endLine":2,"endColumn":35},{"ruleId":"246","severity":1,"message":"267","line":36,"column":40,"nodeType":"248","messageId":"268","endLine":36,"endColumn":42},{"ruleId":"263","severity":1,"message":"269","line":4,"column":8,"nodeType":"243","messageId":"265","endLine":4,"endColumn":16},{"ruleId":"263","severity":1,"message":"270","line":5,"column":8,"nodeType":"243","messageId":"265","endLine":5,"endColumn":15},{"ruleId":"237","severity":1,"message":"271","line":27,"column":5,"nodeType":"243","endLine":27,"endColumn":14,"suggestions":"272"},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activeUser'. Either include it or remove the dependency array.","ArrayExpression",["275"],["276"],"React Hook useEffect contains a call to 'setIsFormValid'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [name, email, subject, request, isFormValid] as a second argument to the useEffect Hook.","Identifier",["277"],["278"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["279"],"React Hook useEffect has a missing dependency: 'galleryId'. Either include it or remove the dependency array.",["280"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'activeUser' and 'dafKesherId'. Either include them or remove the dependency array.",["281"],"React Hook useEffect has a missing dependency: 'fullData'. Either include it or remove the dependency array.",["282"],"React Hook useEffect has a missing dependency: 'cardType'. Either include it or remove the dependency array.",["283"],"no-unused-vars","'useEffect' is defined but never used.","unusedVar","'useMemo' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'addImage' is defined but never used.","'emailjs' is defined but never used.","React Hook useEffect contains a call to 'setIsFormValid'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isRequierdFieldFull, userEmail, isFormValid] as a second argument to the useEffect Hook.",["284"],"no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},{"desc":"285","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},"Update the dependencies array to be: [showMainCardEditorModal, showDeleteAlert, activeUser]",{"range":"304","text":"305"},{"range":"306","text":"305"},"Add dependencies array: [name, email, subject, request, isFormValid]",{"range":"307","text":"308"},"Update the dependencies array to be: [activeUser, garden]",{"range":"309","text":"310"},"Update the dependencies array to be: [id]",{"range":"311","text":"312"},"Update the dependencies array to be: [showDeleteAlert, showAddImage, imageToEdit, galleryId]",{"range":"313","text":"314"},"Update the dependencies array to be: [activeUser, dafKesherId]",{"range":"315","text":"316"},"Update the dependencies array to be: [data, fullData]",{"range":"317","text":"318"},"Update the dependencies array to be: [cardType, data]",{"range":"319","text":"320"},"Add dependencies array: [isRequierdFieldFull, userEmail, isFormValid]",{"range":"321","text":"322"},[1473,1514],"[showMainCardEditorModal, showDeleteAlert, activeUser]",[1427,1468],[2049,2049],", [name, email, subject, request, isFormValid]",[1431,1439],"[activeUser, garden]",[731,733],"[id]",[1640,1684],"[showDeleteAlert, showAddImage, imageToEdit, galleryId]",[2006,2008],"[activeUser, dafKesherId]",[805,811],"[data, fullData]",[1366,1372],"[cardType, data]",[1771,1771],", [isRequierdFieldFull, userEmail, isFormValid]"]