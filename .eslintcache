[{"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\index.js":"1","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\App.js":"2","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\reportWebVitals.js":"3","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\HomePage\\HomePage.jsx":"4","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\DapeyKesherPage\\DapeyKesherPage.jsx":"5","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\GalleriesPage\\GalleriesPage.jsx":"6","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\ContactUsPage\\ContactUsPage.jsx":"7","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\MyGardenPage\\MyGardenPage.jsx":"8","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\TopNavbar\\TopNavbar.jsx":"9","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\LoginModal\\LoginModal.jsx":"10","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\ActiveUserContext.jsx":"11","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\model\\UserModel.jsx":"12","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\IsEnterPressed.jsx":"13","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\GalleryCard\\GalleryCard.jsx":"14","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\GalleryPage\\GalleryPage.jsx":"15","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\ImageCard\\ImageCard.jsx":"16","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\ImageModal\\ImageModal.jsx":"17","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGalleryMainImg.jsx":"18","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\DafKesherPage\\DafKesherPage.jsx":"19","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\DafKesherCard\\DafKesherCard.jsx":"20","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getHebrewDate.jsx":"21","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\StudyTopicBox\\StudyTopicBox.jsx":"22","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGalleryImages.jsx":"23","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGardenGalleries.jsx":"24","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGardenDapeyKesher.jsx":"25","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGardenDetails.jsx":"26","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGalleryDetails.jsx":"27","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getDafKesherDetails.jsx":"28","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\MessageBox\\MessageBox.jsx":"29","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\isEmailValid.jsx":"30","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGreeting.jsx":"31","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getRandomBgColor.jsx":"32","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\MessageBox\\AddMessageBox.jsx":"33","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\StudyTopicBox\\AddStudyTopicBox.jsx":"34","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\createNewDafKesher.jsx":"35","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\updateDafKesherDetails.jsx":"36","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\deleteDafKesher.jsx":"37","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\DeleteWarningModal\\DeleteWarningModal.jsx":"38","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\updateDafKesherContent.jsx":"39","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\DafKesherEditorModal\\DafKesherEditorModal.jsx":"40","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\AddMainCard\\AddMainCard.jsx":"41","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\MainCardEditorModal\\MainCardEditorModal.jsx":"42","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\createNewGallery.jsx":"43","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\updateGalleryDetails.jsx":"44","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\deleteGallery.jsx":"45","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\deleteImage.jsx":"46","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\ImageCard\\AddImageCard.jsx":"47","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\AddImage\\AddImageModal.jsx":"48","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\addImage.jsx":"49"},{"size":541,"mtime":1610290742446,"results":"50","hashOfConfig":"51"},{"size":1869,"mtime":1611447430842,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":499162500000,"results":"53","hashOfConfig":"51"},{"size":1893,"mtime":1611155658339,"results":"54","hashOfConfig":"51"},{"size":3642,"mtime":1611484877241,"results":"55","hashOfConfig":"51"},{"size":3566,"mtime":1611510016827,"results":"56","hashOfConfig":"51"},{"size":5065,"mtime":1611228475019,"results":"57","hashOfConfig":"51"},{"size":461,"mtime":1610964836732,"results":"58","hashOfConfig":"51"},{"size":1764,"mtime":1611197036009,"results":"59","hashOfConfig":"51"},{"size":3689,"mtime":1611222360314,"results":"60","hashOfConfig":"51"},{"size":125,"mtime":1610531444127,"results":"61","hashOfConfig":"51"},{"size":353,"mtime":1611139628213,"results":"62","hashOfConfig":"51"},{"size":97,"mtime":1610537972161,"results":"63","hashOfConfig":"51"},{"size":1527,"mtime":1611488636429,"results":"64","hashOfConfig":"51"},{"size":3324,"mtime":1611529148901,"results":"65","hashOfConfig":"51"},{"size":819,"mtime":1611492214117,"results":"66","hashOfConfig":"51"},{"size":1426,"mtime":1611511782045,"results":"67","hashOfConfig":"51"},{"size":972,"mtime":1611247347276,"results":"68","hashOfConfig":"51"},{"size":5980,"mtime":1611488423387,"results":"69","hashOfConfig":"51"},{"size":1336,"mtime":1611480088683,"results":"70","hashOfConfig":"51"},{"size":2345,"mtime":1610964243978,"results":"71","hashOfConfig":"51"},{"size":1035,"mtime":1611480317259,"results":"72","hashOfConfig":"51"},{"size":688,"mtime":1610986369798,"results":"73","hashOfConfig":"51"},{"size":552,"mtime":1611487226960,"results":"74","hashOfConfig":"51"},{"size":769,"mtime":1611439592715,"results":"75","hashOfConfig":"51"},{"size":570,"mtime":1611229334901,"results":"76","hashOfConfig":"51"},{"size":465,"mtime":1611486703253,"results":"77","hashOfConfig":"51"},{"size":505,"mtime":1611224575013,"results":"78","hashOfConfig":"51"},{"size":1258,"mtime":1611480393067,"results":"79","hashOfConfig":"51"},{"size":103,"mtime":1611140524536,"results":"80","hashOfConfig":"51"},{"size":481,"mtime":1611157890633,"results":"81","hashOfConfig":"51"},{"size":297,"mtime":1611216110350,"results":"82","hashOfConfig":"51"},{"size":680,"mtime":1611456321056,"results":"83","hashOfConfig":"51"},{"size":593,"mtime":1611456336551,"results":"84","hashOfConfig":"51"},{"size":681,"mtime":1611486025730,"results":"85","hashOfConfig":"51"},{"size":695,"mtime":1611457769647,"results":"86","hashOfConfig":"51"},{"size":590,"mtime":1611487466436,"results":"87","hashOfConfig":"51"},{"size":2140,"mtime":1611492359507,"results":"88","hashOfConfig":"51"},{"size":644,"mtime":1611457757809,"results":"89","hashOfConfig":"51"},{"size":3049,"mtime":1611512355003,"results":"90","hashOfConfig":"51"},{"size":407,"mtime":1611496736831,"results":"91","hashOfConfig":"51"},{"size":4432,"mtime":1611495561888,"results":"92","hashOfConfig":"51"},{"size":524,"mtime":1611487488863,"results":"93","hashOfConfig":"51"},{"size":623,"mtime":1611487501493,"results":"94","hashOfConfig":"51"},{"size":566,"mtime":1611489093629,"results":"95","hashOfConfig":"51"},{"size":542,"mtime":1611491926686,"results":"96","hashOfConfig":"51"},{"size":345,"mtime":1611511151449,"results":"97","hashOfConfig":"51"},{"size":3115,"mtime":1611527063421,"results":"98","hashOfConfig":"51"},{"size":573,"mtime":1611520481481,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"fx3npl",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"102"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\index.js",[],["209","210"],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\App.js",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\reportWebVitals.js",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\HomePage\\HomePage.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\DapeyKesherPage\\DapeyKesherPage.jsx",["211"],"import { useContext, useEffect, useState } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DafKesherCard from '../../components/DafKesherCard/DafKesherCard';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport './DapeyKesherPage.css';\r\nimport getGardenDapeyKesher from '../../utils/getGardenDapeyKesher';\r\nimport getGardenDetails from '../../utils/getGardenDetails';\r\nimport AddMainCard from '../../components/AddMainCard/AddMainCard';\r\nimport MainCardEditorModal from '../../components/MainCardEditorModal/MainCardEditorModal';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\n\r\nconst DapeyKesherPage = () => {\r\n    const [dapeyKesher, setDapeyKesher] = useState([]);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [garden, setGarden] = useState('');\r\n    const [showMainCardEditorModal, setShowMainCardEditorModal] = useState(false);\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [dafKesherToEdit, setDafKesherToEdit] = useState('');\r\n    \r\n    useEffect(() => {\r\n        async function getDapeyKesher() {\r\n            const garden = await getGardenDetails(activeUser);\r\n            setGarden(garden);\r\n            const dapeyKesher = await getGardenDapeyKesher(garden.id);\r\n            setDapeyKesher(dapeyKesher);\r\n        }\r\n        \r\n        getDapeyKesher();\r\n    }, [showMainCardEditorModal,showDeleteAlert])\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    function handleEdit(dafKesher) {\r\n        setDafKesherToEdit(dafKesher);\r\n        setShowMainCardEditorModal(true);\r\n    }\r\n\r\n    function handleDeleteClick(dafKesher) {\r\n        setDafKesherToEdit(dafKesher);\r\n        setShowDeleteAlert(true);\r\n    }\r\n\r\n    const addDafKesher = activeUser && activeUser.role === 'manager' ?\r\n        <Col className='py-2' md={6} lg={3}>\r\n            <AddMainCard onClick={() => { setShowMainCardEditorModal(true) }}/>\r\n        </Col>\r\n    : null;\r\n\r\n    const dapeyKesherView = dapeyKesher ? dapeyKesher.map(dafKesher =>\r\n        <Col className='py-2' md={6} lg={3} key={dafKesher.id}>\r\n            <DafKesherCard dafKesher={dafKesher} handleEdit={handleEdit} handleDeleteClick={handleDeleteClick} activeUser={activeUser}/>\r\n        </Col>\r\n    ) : null;\r\n\r\n\r\n    return (\r\n        <div className=\"p-dapey-kesher\">\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        <div className='name'>{garden.name}</div>\r\n                        <h2>דפי הקשר שלנו</h2>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {garden ? <div className='logo'><img src={garden.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row className='align-items-stretch'>\r\n                    {addDafKesher}\r\n                    {dapeyKesherView}\r\n                </Row>\r\n            </Container>\r\n            <MainCardEditorModal data={dafKesherToEdit} parseGarden={garden.parseGarden} cardType='dafKesher'\r\n                showModal={showMainCardEditorModal} closeModal={() => { setShowMainCardEditorModal(false) }} cleanDataToEdit={() => { setDafKesherToEdit('') }} />\r\n            <DeleteWarningModal data={dafKesherToEdit} objectType='דף קשר' showModal={showDeleteAlert}\r\n                closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setDafKesherToEdit('') }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DapeyKesherPage;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\GalleriesPage\\GalleriesPage.jsx",["212"],"import { useContext, useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport './GalleriesPage.css';\r\nimport GalleryCard from '../../components/GalleryCard/GalleryCard';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport getGardenGalleries from '../../utils/getGardenGalleries';\r\nimport getGardenDetails from '../../utils/getGardenDetails';\r\nimport MainCardEditorModal from '../../components/MainCardEditorModal/MainCardEditorModal';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\nimport AddMainCard from '../../components/AddMainCard/AddMainCard';\r\n\r\nconst GalleriesPage = () => {\r\n    const [galleries, setGalleries] = useState([]);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [garden, setGarden] = useState('');\r\n    const [showMainCardEditorModal, setShowMainCardEditorModal] = useState(false);\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [galleryToEdit, setGalleryToEdit] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function getGalleries () {\r\n            const garden = await getGardenDetails(activeUser);\r\n            setGarden(garden);\r\n            const galleries = await getGardenGalleries(garden.id);\r\n            setGalleries(galleries);\r\n        }\r\n\r\n        getGalleries();\r\n    },[showMainCardEditorModal,showDeleteAlert]);\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    \r\n    function handleEdit(gallery) {\r\n        setGalleryToEdit(gallery);\r\n        setShowMainCardEditorModal(true);\r\n    }    \r\n\r\n    function handleDeleteClick(gallery) {\r\n        setGalleryToEdit(gallery);\r\n        setShowDeleteAlert(true);\r\n    }    \r\n\r\n    const addGallery = activeUser && activeUser.role === 'manager' ?\r\n        <Col className='py-2' md={6} lg={3}>\r\n            <AddMainCard onClick={() => { setShowMainCardEditorModal(true) }}/>\r\n        </Col>\r\n    : null;\r\n    \r\n    const galleriesView = galleries ? galleries.map(gallery => {\r\n        return(<Col className='py-2' md={6} lg={3} key={gallery.id}>\r\n            <GalleryCard gallery={gallery} handleEdit={handleEdit} handleDeleteClick={handleDeleteClick} activeUser={activeUser}/>\r\n        </Col>)        \r\n    }) : null;\r\n\r\n\r\n    return (\r\n        <div className=\"p-galleries\">\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        {garden ? <div className='name'>{garden.name}</div> : null}\r\n                        <h2>הגלריות שלנו</h2>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {garden ? <div className='logo'><img src={garden.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {addGallery}\r\n                    {galleriesView}\r\n                </Row>\r\n            </Container>\r\n            <MainCardEditorModal data={galleryToEdit} parseGarden={garden.parseGarden} cardType='gallery'\r\n                showModal={showMainCardEditorModal} closeModal={() => { setShowMainCardEditorModal(false) }} cleanDataToEdit={() => { setGalleryToEdit('') }} />\r\n            <DeleteWarningModal data={galleryToEdit} objectType='גלריה' showModal={showDeleteAlert}\r\n                closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setGalleryToEdit('') }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GalleriesPage;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\ContactUsPage\\ContactUsPage.jsx",["213"],"import { useContext, useEffect, useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport isEmailValid from '../../utils/isEmailValid';\r\nimport './ContactUsPage.css'\r\n\r\n\r\nconst ContactUsPage = () => {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [name, setName] = useState(activeUser ? `${activeUser.fname} ${activeUser.lname}` : '');\r\n    const [email, setEmail] = useState(activeUser ? activeUser.email : '');\r\n    const [subject, setSubject] = useState('');\r\n    const [request, setRequest] = useState('');\r\n    const [useUserInfo, setUseUserInfo] = useState(activeUser ? true : false);\r\n    const [files, setFiles] = useState({});\r\n    const [showEmailError, setShowEmailError] = useState(false);\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n    const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n    \r\n    function sendForm () {\r\n        //send to email via parse...\r\n\r\n        setSubject('');\r\n        setRequest('');\r\n        setFiles({});\r\n        setIsFormSubmitted(true);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (name && isEmailValid(email) && subject && request) {\r\n            setIsFormValid(true);\r\n            setShowEmailError(false);\r\n        } else if (!isEmailValid(email) && email!=='') {\r\n            setShowEmailError(true);\r\n            if (isFormValid) {\r\n                setIsFormValid(false);\r\n            }\r\n        } else if (isEmailValid(email)) {\r\n            setShowEmailError(false);\r\n            if (isFormValid) {\r\n                setIsFormValid(false);\r\n            }\r\n        }\r\n    });\r\n    \r\n    function onSwitchMode() {\r\n        if (!useUserInfo) {\r\n            setName(`${activeUser.fname} ${activeUser.lname}`);\r\n            setEmail(activeUser.email);\r\n            setUseUserInfo(!useUserInfo);\r\n        } else {\r\n            setName('');\r\n            setEmail('');\r\n            setUseUserInfo(!useUserInfo);\r\n        }\r\n    }\r\n\r\n    function onFilesSelect(event) {\r\n        setFiles(event.target.files);\r\n    }\r\n\r\n    let filesNames= '';\r\n    if (files) { \r\n        for (let i =0 ; i < files.length ; i++){\r\n            if (i===0) {\r\n                filesNames += files[i].name.split('.')[0];\r\n            }else {\r\n                filesNames += `, ${files[i].name.split('.')[0]}`;\r\n            }\r\n        }\r\n    }\r\n\r\n    const filesAmount = files ? files.length : 0;\r\n\r\n    if (isFormSubmitted) {\r\n        return(\r\n            <div className=\"p-contact-us success\">\r\n                <h2>פנייתך נשלחה בהצלחה</h2>\r\n                <Button variant='info' onClick={() => {setIsFormSubmitted(false)}} >פנייה נוספת</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-contact-us\">\r\n            <h2>צור קשר</h2>\r\n            <Form>\r\n                <Form.Group controlId=\"formContactUsName\">\r\n                    <Form.Label>שם</Form.Label>\r\n                    {activeUser ? <Form.Check type='switch' variant='warning' id='formContactUsFileSwitch' label={useUserInfo ? 'משתמש בפרטים שלי' : 'השתמש בפרטים שלי'} checked={useUserInfo} onChange={onSwitchMode} /> : null}\r\n                    <Form.Control type=\"text\" value={name} onChange={e => {setName(e.target.value)}}/>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId=\"formContactUsEmail\">\r\n                    <Form.Label>דואר אלקטרוני</Form.Label>\r\n                    <Form.Control type=\"email\" value={email} className={showEmailError ? 'is-invalid' : null} onChange={e => { setEmail(e.target.value) }} />\r\n                    <Form.Control.Feedback type=\"invalid\">כתובת מייל לא תקינה</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formContactUsSubject\">\r\n                    <Form.Label>נושא</Form.Label>\r\n                    <Form.Control type=\"text\" value={subject}  onChange={e => {setSubject(e.target.value)}}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formContactUsRequest\">\r\n                    <Form.Label>תוכן הפניה</Form.Label>\r\n                    <Form.Control as=\"textarea\" value={request}  onChange={e => {setRequest(e.target.value)}}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.File id=\"formContactUsFile\" label={files ? filesNames : 'בחירת קבצים'} data-browse=\"בחירת קבצים\" custom multiple onChange={onFilesSelect}/>\r\n                    <Form.Text className=\"text-muted\">{filesAmount >0 ? `נבחרו ${filesAmount} קבצים` : 'ניתן לבחור מספר קבצים יחד'}</Form.Text>\r\n                </Form.Group>\r\n                <Button variant=\"warning\" type=\"button\" className='w-100' disabled={!isFormValid} onClick={sendForm}>\r\n                    שליחה\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactUsPage;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\MyGardenPage\\MyGardenPage.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\TopNavbar\\TopNavbar.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\LoginModal\\LoginModal.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\ActiveUserContext.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\model\\UserModel.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\IsEnterPressed.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\GalleryCard\\GalleryCard.jsx",["214"],"import './GalleryCard.css'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport getGalleryMainImg from '../../utils/getGalleryMainImg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst GalleryCard = ({gallery, handleEdit, handleDeleteClick, activeUser}) => {\r\n    const {id, title } = gallery;\r\n    const [mainImg, setMainImg] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function getMainImg() {\r\n            const mainImg = await getGalleryMainImg(id);\r\n            setMainImg(mainImg);\r\n        }\r\n        getMainImg();\r\n    },[]);\r\n\r\n\r\n    return (\r\n        <div className='c-gallery-card'>\r\n            <Card>\r\n                <Link to={'/galleries/'+ id}>\r\n                    {mainImg ? <Card.Img variant='top' src={mainImg}/> : null}\r\n                    <Card.Title className='text-center'>{title}</Card.Title>\r\n                </Link>\r\n                {activeUser && activeUser.role === 'manager' &&\r\n                    <Card.Footer>\r\n                        <FontAwesomeIcon className='edit-icon' onClick={() => {handleEdit(gallery)}} icon={faEdit}/>\r\n                        <FontAwesomeIcon className='delete-icon' onClick={() => {handleDeleteClick(gallery)}} icon={faTrashAlt}/>\r\n                    </Card.Footer>\r\n                }\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GalleryCard;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\GalleryPage\\GalleryPage.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\ImageCard\\ImageCard.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\ImageModal\\ImageModal.jsx",["215","216"],"import React from 'react';\r\nimport { Button, Col, Image, Modal } from 'react-bootstrap';\r\nimport './ImageModal.css'\r\n\r\nconst ImageModal = (props) => {\r\n    const { images, showModal, selectedImage, close, onImageChange } = props;\r\n\r\n    function nextImage() {\r\n        if (selectedImage === images.length - 1) {\r\n            onImageChange(0);\r\n        } else {\r\n            onImageChange(selectedImage + 1);\r\n        }\r\n    }\r\n\r\n    function prevImage() {\r\n        if (selectedImage === 0) {\r\n            onImageChange(images.length - 1);\r\n        } else {\r\n            onImageChange(selectedImage - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal size='md' show={showModal} onHide={close} centered className='c-image-modal'>\r\n            <Modal.Body className='p-0 row'>\r\n                <Col xs={1} className='prev'>\r\n                    <a className='prev' variant='dark' onClick={prevImage}>&#10094;</a>\r\n                </Col>\r\n                <Col xs={10} className='p-0'>\r\n                    <Image src={images[selectedImage].url} />\r\n                    <Button onClick={close} className='modal-x-button' variant='outline-warning'>X</Button>\r\n                </Col>\r\n                <Col xs={1} className='next'>\r\n                    <a className='next' variant='dark' onClick={nextImage}>&#10095;</a>\r\n                </Col>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ImageModal;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGalleryMainImg.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\pages\\DafKesherPage\\DafKesherPage.jsx",["217"],"import './DafKesherPage.css'\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport StudyTopicBox from '../../components/StudyTopicBox/StudyTopicBox';\r\nimport ActiveUserContext from '../../utils/ActiveUserContext';\r\nimport getDafKesherDetails from '../../utils/getDafKesherDetails';\r\nimport getGardenDetails from '../../utils/getGardenDetails';\r\nimport bookIcon from '../../images/book-icon.png';\r\nimport messageIcon from '../../images/message-icon.png';\r\nimport MessageBox from '../../components/MessageBox/MessageBox';\r\nimport AddMessageBox from '../../components/MessageBox/AddMessageBox';\r\nimport AddStudyTopicBox from '../../components/StudyTopicBox/AddStudyTopicBox';\r\nimport DeleteWarningModal from '../../components/DeleteWarningModal/DeleteWarningModal';\r\nimport DafKesherEditorModal from '../../components/DafKesherEditorModal/DafKesherEditorModal';\r\n\r\nfunction DafKesherPage() {\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [data, setData] = useState({});\r\n    const [header, setHeader] = useState({});\r\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\r\n    const [showEditorModal, setShowEditorModal] = useState(false);\r\n    const [contentToEdit, setContentToEdit] = useState('');\r\n    \r\n    const dafKesherId = useParams().id;\r\n    \r\n    useEffect(() => {\r\n        async function getData() {\r\n            const dafKesher = await getDafKesherDetails(dafKesherId);\r\n            const gardenDetails = (await getGardenDetails(activeUser));\r\n            const header = {\r\n                'title': dafKesher.title,\r\n                'hebDate': dafKesher.hebDate,\r\n                'logo': gardenDetails.logo,\r\n                'name': gardenDetails.name\r\n            };\r\n            setHeader(header);\r\n            setData(dafKesher.data);\r\n        }\r\n        getData();\r\n    }, []);\r\n    \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    \r\n    function handleAddClick(contentToEdit) {\r\n        setContentToEdit(contentToEdit);\r\n        setShowEditorModal(true);\r\n    }\r\n\r\n    function handleEditClick(contentToEdit) {\r\n        setContentToEdit(contentToEdit);\r\n        setShowEditorModal(true);\r\n    }\r\n\r\n    function handleDeleteClick(contentToEdit) {\r\n        setContentToEdit(contentToEdit);\r\n        setShowDeleteAlert(true);\r\n    }\r\n\r\n    const topicsView = data.studyTopics ? data.studyTopics.map( (topic, index) => \r\n        <div key={index}>\r\n            <StudyTopicBox topic={{ 'headline': topic.headline, 'content': topic.content }} activeUser={activeUser}\r\n                onEditClick={() => { handleEditClick({ type: 'studyTopics', index: index }) }}\r\n                onDeleteClick={() => { handleDeleteClick({ type: 'studyTopics', index: index }) }} />\r\n        </div>\r\n    ) : null;\r\n    \r\n    const addTopic = activeUser && activeUser.role === 'manager' && <AddStudyTopicBox onClick={() => { handleAddClick('studyTopics') }}/>;\r\n\r\n    const messagesView = data.messages ? data.messages.map( (message, index) => \r\n        <div key={index}>\r\n            <MessageBox topic={{ 'headline': message.headline, 'content': message.content }} activeUser={activeUser}\r\n                onEditClick={() => { handleEditClick({ type: 'messages', index: index }) }}\r\n                onDeleteClick={() => { handleDeleteClick({ type: 'messages', index: index }) }} />\r\n        </div>\r\n    ) : null;\r\n    \r\n    const addMessage = activeUser && activeUser.role === 'manager' && <AddMessageBox onClick={() => { handleAddClick('messages') }}/>;\r\n\r\n    return (\r\n        <div className='p-daf-kesher'>\r\n            <Container>\r\n                <Row className='mx-0 header'>\r\n                    <Col sm={9}>\r\n                        <div className='name'>{header.name}</div>\r\n                        <h2>{`דף קשר ${header.title}`}</h2>\r\n                        <div className='date'>{header.hebDate}</div>\r\n                    </Col>\r\n                    <Col sm={3} className='p-0'>\r\n                        {header.logo ? <div className='logo'><img src={header.logo} alt=\"logo\"/></div> : null}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={8} className='mb-3'>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <span>מה למדנו השבוע?</span>\r\n                                <img src={bookIcon} alt=\"book icon\"/>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                {topicsView}\r\n                                {addTopic}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <Card.Header as='h5'>\r\n                                <div>הודעות</div>\r\n                                <div><img src={messageIcon} alt=\"message icon\"/></div>\r\n                            </Card.Header>\r\n                            {messagesView}\r\n                            {addMessage}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <DafKesherEditorModal dafKesherId={dafKesherId} fullData={data} data={contentToEdit} cardType='dafKesher'\r\n                showModal={showEditorModal} closeModal={() => setShowEditorModal(false)} cleanDataToEdit={() => { setContentToEdit('') }}/>\r\n            <DeleteWarningModal dafKesherId={dafKesherId} fullData={data} data={contentToEdit} objectType={contentToEdit.type === 'studyTopics' ? 'חומר לימודי' : 'הודעה'}\r\n                showModal={showDeleteAlert} closeModal={() => setShowDeleteAlert(false)} cleanDataToEdit={() => { setContentToEdit('') }} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DafKesherPage;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\DafKesherCard\\DafKesherCard.jsx",["218","219","220"],"import './DafKesherCard.css'\r\nimport React, { useState } from 'react';\r\nimport { Button, Card, Modal } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DafKesherCard = ({dafKesher, handleEdit, handleDeleteClick, activeUser}) => {\r\n    const { id, title, hebDate} = dafKesher;\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className='c-daf-kesher-card'>\r\n            <Card>\r\n                <Link to={'/dapey-kesher/' + id}>\r\n                    <Card.Title className='text-center'>{title}</Card.Title>\r\n                    <Card.Text className='text-center'>{hebDate}</Card.Text>\r\n                </Link>\r\n                {activeUser && activeUser.role === 'manager' &&\r\n                    <Card.Footer>\r\n                        <FontAwesomeIcon className='edit-icon' onClick={() => {handleEdit(dafKesher)}} icon={faEdit}/>\r\n                        <FontAwesomeIcon className='delete-icon' onClick={() => {handleDeleteClick(dafKesher)}} icon={faTrashAlt}/>\r\n                    </Card.Footer>\r\n                }\r\n            </Card>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DafKesherCard;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getHebrewDate.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\StudyTopicBox\\StudyTopicBox.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGalleryImages.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGardenGalleries.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGardenDapeyKesher.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGardenDetails.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGalleryDetails.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getDafKesherDetails.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\MessageBox\\MessageBox.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\isEmailValid.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getGreeting.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\getRandomBgColor.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\MessageBox\\AddMessageBox.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\StudyTopicBox\\AddStudyTopicBox.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\createNewDafKesher.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\updateDafKesherDetails.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\deleteDafKesher.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\DeleteWarningModal\\DeleteWarningModal.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\updateDafKesherContent.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\DafKesherEditorModal\\DafKesherEditorModal.jsx",["221"],"import React, { useEffect, useState } from 'react';\r\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\r\nimport updateDafKesherContent from '../../utils/updateDafKesherContent';\r\n\r\n\r\nconst DafKesherEditorModal = (props) => {\r\n    const { dafKesherId, fullData, data, showModal, closeModal, cleanDataToEdit } = props;\r\n    const [headline, setHeadline] = useState();\r\n    const [content, setContent] = useState();\r\n    const [showError, setShowError] = useState(false);\r\n\r\n    useEffect(() => { \r\n        const type = typeof data;\r\n        if (type === 'object') {\r\n            setHeadline(fullData[data.type][data.index].headline);\r\n            setContent(fullData[data.type][data.index].content);\r\n        } else {\r\n            setHeadline('');\r\n            setContent('');\r\n        }\r\n    }, [data]);\r\n\r\n    function close () {\r\n        closeModal();\r\n        setShowError(false);\r\n        cleanDataToEdit();\r\n    }\r\n\r\n    function onSave() {\r\n        if (!(headline && content)) {\r\n            setShowError(true);\r\n        } else if (typeof data !== 'object') {\r\n            let newData = { ...fullData };\r\n            newData[data].push({ headline: headline, content: content });\r\n            updateDafKesherContent(dafKesherId, newData);\r\n            close()\r\n        } else {\r\n            let newData = { ...fullData };\r\n            newData[data.type][data.index].headline = headline;\r\n            newData[data.type][data.index].content = content;\r\n            updateDafKesherContent(dafKesherId, newData);\r\n            close();\r\n        }\r\n    }\r\n\r\n\r\n    const modalTitle = (typeof data) === 'object' ? 'עריכת תוכן דף קשר' : 'הוספת תוכן חדש';\r\n\r\n    return (\r\n        <div className='c-daf-kesher-editor-modal'>\r\n            <Modal size='md' show={showModal} onHide={close} centered>\r\n                <Modal.Header>\r\n                    <Modal.Title>{modalTitle}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId='headline'>\r\n                        <Form.Label>כותרת</Form.Label>\r\n                        <Form.Control type=\"text\" value={headline} onChange={e => { setHeadline(e.target.value) }} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='content'>\r\n                        <Form.Label>תוכן</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={5} value={content} onChange={e => {setContent(e.target.value)}} />\r\n                    </Form.Group>\r\n                    </Form>\r\n                    {showError ? <Alert variant=\"danger\">נא למלא את כל השדות</Alert> : null}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={close}>סגירה</Button>\r\n                    <Button variant=\"warning\" onClick={onSave}>שמירה</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DafKesherEditorModal;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\AddMainCard\\AddMainCard.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\MainCardEditorModal\\MainCardEditorModal.jsx",["222"],"import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Button, Modal, Form, Alert } from 'react-bootstrap';\r\nimport isEnterPressed from '../../utils/IsEnterPressed';\r\nimport createNewDafKesher from '../../utils/createNewDafKesher';\r\nimport updateDafKesherDetails from '../../utils/updateDafKesherDetails';\r\nimport createNewGallery from '../../utils/createNewGallery';\r\nimport updateGalleryDetails from '../../utils/updateGalleryDetails';\r\n\r\nconst MainCardEditorModal = (props) => {\r\n    const {data, cardType, parseGarden, showModal, closeModal, cleanDataToEdit} = props;\r\n    const [title, setTitle] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [showError, setShowError] = useState(false);\r\n    \r\n    useEffect(() => { \r\n        if (typeof data === 'object') {\r\n            if (cardType === 'dafKesher') {\r\n                setTitle(data.title);\r\n\r\n                const date = data.date.toLocaleString().split('.');\r\n                const viewDate = `${date[2].split(',')[0]}-${date[1].length === 1 ? '0' + date[1] : date[1]}-${date[0].length === 1 ? '0' + date[0] : date[0]}`;\r\n                setDate(viewDate);\r\n            } else if (cardType === 'gallery') {\r\n                setTitle(data.title);\r\n            }\r\n        } else {\r\n            setTitle('');\r\n            setDate('');\r\n        }\r\n    }, [data]);\r\n    \r\n    function close () {\r\n        setTitle('');\r\n        setDate('');        \r\n        closeModal();\r\n        setShowError(false);\r\n        cleanDataToEdit();\r\n    }\r\n\r\n    function onSave() {\r\n        if (cardType === 'dafKesher') {\r\n            if (!(title && date)) {\r\n                setShowError(true);\r\n            } else if (!data) {\r\n                createNewDafKesher(parseGarden, title, date);\r\n                close()\r\n            } else {\r\n                updateDafKesherDetails(data.id, title, date);\r\n                close();\r\n            }\r\n        } else if (cardType === 'gallery') {\r\n            if (!title) {\r\n                setShowError(true);\r\n            } else if (!data) {\r\n                createNewGallery(parseGarden, title);\r\n                close()\r\n            } else {\r\n                updateGalleryDetails(data.id, title);\r\n                close();\r\n            }\r\n        }\r\n    }\r\n\r\n    function ifEnterPressed (event) {\r\n        if (cardType === 'dafKesher') {\r\n            if (isEnterPressed(event) && title && date) {\r\n                onSave();\r\n            }\r\n        } else if (cardType === 'gallery') {\r\n            if (isEnterPressed(event) && title) {\r\n                onSave();\r\n            }\r\n        }\r\n    }\r\n\r\n    let modalTitle;\r\n    if (cardType === 'dafKesher') {\r\n        modalTitle = data ? 'עריכת פרטי דף קשר' : 'יצירת דף קשר חדש';\r\n    } else if (cardType === 'gallery') {\r\n        modalTitle = data ? 'עריכת פרטי גלריה' : 'יצירת גלריה חדשה';\r\n    }\r\n\r\n    return (\r\n        <div className='c-main-card-editor-modal'>\r\n            <Modal size='sm' show={showModal} onHide={close} centered>\r\n                <Modal.Header>\r\n                    <Modal.Title>{modalTitle}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId='title'>\r\n                            <Form.Label>כותרת</Form.Label>\r\n                            <Form.Control type=\"text\" value={title} onChange={e => { setTitle(e.target.value) }} onKeyPress={ifEnterPressed} />\r\n                        </Form.Group>\r\n                        {cardType === 'dafKesher' ? <Form.Group controlId='date'>\r\n                            <Form.Label>תאריך</Form.Label>\r\n                            <Form.Control type=\"date\" value={date}\r\n                                onChange={e => { setDate(e.target.value) }} onKeyPress={ifEnterPressed} />\r\n                        </Form.Group> : null}\r\n                    </Form>\r\n                    {showError ? <Alert variant=\"danger\">נא למלא את כל השדות</Alert> : null}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={close}>סגירה</Button>\r\n                    <Button variant=\"warning\" onClick={onSave}>שמירה</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainCardEditorModal;\r\n","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\createNewGallery.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\updateGalleryDetails.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\deleteGallery.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\deleteImage.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\ImageCard\\AddImageCard.jsx",[],"C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\components\\AddImage\\AddImageModal.jsx",["223","224","225"],"\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { Button, Card, CardColumns, Form, Modal, Spinner } from 'react-bootstrap';\r\nimport addImage from '../../utils/addImage';\r\nimport deleteImage from '../../utils/deleteImage';\r\n\r\nfunction AddImageModal(props) {\r\n    const {galleryTitle, galleryId, showModal, closeModal} = props;\r\n    const [images, setImages] = useState('');\r\n    const [imagesId, setImagesId] = useState([]);\r\n    const [imagesUrl, setImagesUrl] = useState([]);\r\n\r\n    function handleClose(params) {\r\n        closeModal();\r\n        setImages('');\r\n        setImagesId([]);\r\n        setImagesUrl([]);\r\n    }\r\n    \r\n    async function onFilesSelect(event) {\r\n        setImages(event.target.files);\r\n        const imagesArr = Object.values(event.target.files);\r\n        let newImagesId = [];\r\n        let newImagesUrl = [];\r\n        await Promise.all(imagesArr.map(async image => {\r\n            const res = await addImage(image, galleryId);\r\n            newImagesId.push(res.id);\r\n            newImagesUrl.push(res.get('file')._url);\r\n            \r\n        }));\r\n        setImagesId(newImagesId);\r\n        setImagesUrl(newImagesUrl);\r\n    }\r\n    \r\n    function closeClicked() {\r\n        imagesId && imagesId.map(image => {\r\n            deleteImage(image);\r\n        });\r\n        handleClose();\r\n    }\r\n    \r\n    function addClicked() {\r\n        handleClose();\r\n    }\r\n    \r\n    const imagesAmount = images ? images.length : 0;\r\n\r\n    const imagesView = imagesUrl ? imagesUrl.map((imageUrl, index) =>\r\n        <Card key={index}>\r\n            <Card.Img src={imageUrl}/>\r\n        </Card>\r\n    ) : null;\r\n\r\n    return (\r\n        <Modal className='c-add-image-modal' size={'md'} show={showModal} onHide={handleClose} centered>\r\n            <Modal.Header>\r\n                <Modal.Title>הוספת תמונות לגלריה <span className='font-weight-bold'>{galleryTitle}</span></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group>\r\n                    <Form.File id=\"formContactUsFile\" label={images ? 'filesNames' : 'בחירת קבצים'} data-browse=\"בחירת קבצים\" custom multiple onChange={onFilesSelect}/>\r\n                    <Form.Text className=\"text-muted\">{imagesAmount >0 ? `נבחרו ${imagesAmount} קבצים` : 'ניתן לבחור מספר קבצים יחד'}</Form.Text>\r\n                    <CardColumns>\r\n                        {imagesView}\r\n                    </CardColumns>\r\n                    {images && imagesView.length === 0 && \r\n                        <div className='images-spinner row justify-content-center mt-3'>\r\n                            <Spinner animation=\"border\" variant=\"warning\" />\r\n                        </div>\r\n                    }\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={closeClicked}>ביטול</Button>\r\n                <Button variant=\"warning\" onClick={addClicked}>הוספה</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AddImageModal;","C:\\Users\\mende\\OneDrive\\Desktop\\פיתוח WEB\\עבודות\\פרויקט סיום\\digital-garden\\src\\utils\\addImage.jsx",[],{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":30,"column":8,"nodeType":"232","endLine":30,"endColumn":49,"suggestions":"233"},{"ruleId":"230","severity":1,"message":"231","line":30,"column":7,"nodeType":"232","endLine":30,"endColumn":48,"suggestions":"234"},{"ruleId":"230","severity":1,"message":"235","line":29,"column":5,"nodeType":"236","endLine":29,"endColumn":14,"suggestions":"237"},{"ruleId":"230","severity":1,"message":"238","line":19,"column":7,"nodeType":"232","endLine":19,"endColumn":9,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":28,"column":21,"nodeType":"242","endLine":28,"endColumn":76},{"ruleId":"240","severity":1,"message":"241","line":35,"column":21,"nodeType":"242","endLine":35,"endColumn":76},{"ruleId":"230","severity":1,"message":"243","line":41,"column":8,"nodeType":"232","endLine":41,"endColumn":10,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":2,"column":17,"nodeType":"236","messageId":"247","endLine":2,"endColumn":25},{"ruleId":"245","severity":1,"message":"248","line":3,"column":10,"nodeType":"236","messageId":"247","endLine":3,"endColumn":16},{"ruleId":"245","severity":1,"message":"249","line":3,"column":24,"nodeType":"236","messageId":"247","endLine":3,"endColumn":29},{"ruleId":"230","severity":1,"message":"250","line":21,"column":8,"nodeType":"232","endLine":21,"endColumn":14,"suggestions":"251"},{"ruleId":"230","severity":1,"message":"252","line":31,"column":8,"nodeType":"232","endLine":31,"endColumn":14,"suggestions":"253"},{"ruleId":"245","severity":1,"message":"254","line":2,"column":17,"nodeType":"236","messageId":"247","endLine":2,"endColumn":26},{"ruleId":"245","severity":1,"message":"255","line":2,"column":28,"nodeType":"236","messageId":"247","endLine":2,"endColumn":35},{"ruleId":"256","severity":1,"message":"257","line":36,"column":40,"nodeType":"258","messageId":"259","endLine":36,"endColumn":42},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activeUser'. Either include it or remove the dependency array.","ArrayExpression",["262"],["263"],"React Hook useEffect contains a call to 'setIsFormValid'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [name, email, subject, request, isFormValid] as a second argument to the useEffect Hook.","Identifier",["264"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["265"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'activeUser' and 'dafKesherId'. Either include them or remove the dependency array.",["266"],"no-unused-vars","'useState' is defined but never used.","unusedVar","'Button' is defined but never used.","'Modal' is defined but never used.","React Hook useEffect has a missing dependency: 'fullData'. Either include it or remove the dependency array.",["267"],"React Hook useEffect has a missing dependency: 'cardType'. Either include it or remove the dependency array.",["268"],"'useEffect' is defined but never used.","'useMemo' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},{"desc":"269","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},"Update the dependencies array to be: [showMainCardEditorModal, showDeleteAlert, activeUser]",{"range":"282","text":"283"},{"range":"284","text":"283"},"Add dependencies array: [name, email, subject, request, isFormValid]",{"range":"285","text":"286"},"Update the dependencies array to be: [id]",{"range":"287","text":"288"},"Update the dependencies array to be: [activeUser, dafKesherId]",{"range":"289","text":"290"},"Update the dependencies array to be: [data, fullData]",{"range":"291","text":"292"},"Update the dependencies array to be: [cardType, data]",{"range":"293","text":"294"},[1464,1505],"[showMainCardEditorModal, showDeleteAlert, activeUser]",[1418,1459],[1665,1665],", [name, email, subject, request, isFormValid]",[731,733],"[id]",[1959,1961],"[activeUser, dafKesherId]",[805,811],"[data, fullData]",[1366,1372],"[cardType, data]"]